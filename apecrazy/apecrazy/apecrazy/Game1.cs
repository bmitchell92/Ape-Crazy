using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.GamerServices;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Net;
using Microsoft.Xna.Framework.Storage;

namespace apecrazy
{
    /// <summary>
    /// This is the main type for your game
    /// </summary>
    public class Game1 : Microsoft.Xna.Framework.Game
    {
        GraphicsDeviceManager graphics;
        SpriteBatch spriteBatch;
        Viewport viewport = new Viewport();
        GamePadState lastState = GamePad.GetState(PlayerIndex.One);
        float freeLook = 0.0f, Rotation = 0.0f, jumpspeed = 0.0f, oldY, elevatorvelocity = 0.0f, elevator2velocity = 0.0f, fov = 45;
        Vector3 playerPosition = new Vector3(0.0f, 16.0f, 0.0f);
        Vector3 cameralookat, gorePosition, gorePosition2, gorePosition3, gorePosition4;
        bool firing = false, reloading = false, canshoot = true, canshootdual = true, canjump = true, dead = false;
        bool watermelondestroyed = false, ads = false, medichit = false, allownoobweapons = false;
        bool godupgrade = false, gunnerupgrade = false, mgupgrade = false, sniperupgrade = false, specopupgrade = false;
        int firepause = 0, clip = 101, reloadTimeNum = 0, health = 100;
        int ammo9mm = 420, ammo44magnum = 54, ammo3006 = 60, ammo12Gauge = 64, ammoUzi = 320, ammo762x39 = 300, ammo357magnum = 90, ammo556 = 300, medpacks = 2, ammo762x51 = 100, ammo545 = 360, ammo762x54 = 300, ammonull = 0, ammo10Gauge = 40, ammo600overkill = 30, ammo20mm = 104, ammo41 = 600, ammo45 = 224, ammo500magnum = 45, ammorpg = 5;
        int teamkills = 0, p1kills = 0, p2kills = 0, p3kills = 0, p4kills = 0, startingclip = 101, botkills = 0, p1damage = 0, p2damage = 0, botdamage = 0, medicpause = 0, elevatorlevel = 1, playerlevel = 1, elevator2level = 1, p3damage = 0, p4damage = 0, secondaryreloadtimenum = 0, secondaryclip = 0;
        int godclasskills = 0, gunnerkills = 0, mgkills = 0, sniperkills = 0, specopkills = 0;
        string weapon = "hk21", startingweapon = "hk21";
        string posture = "standing";
        string mode = "menu", area = "road", room = "poolroom", mpclass = "", menu = "";
        SpriteFont Font;
        Vector2 DisplayPos = new Vector2(100, 50);
        Rectangle reticleRect, menuRect, buttonRect1, cursorrect, cursorrect2, cursorrect3, cursorrect4, buttonRect2, buttonRect3, buttonRect4, buttonRect5, buttonRect6, buttonRect7;
        Rectangle weaponRect, weaponRect2, weaponRect3, weaponRect4, weaponRect5, weaponRect6, weaponRect7, weaponRect8, noobRect, p1rect, p2rect, p3rect, p4rect, godclassrect, gunnerclassrect, mggunnerclassrect, sniperclassrect, specoprect;
        Texture2D reticle, reticle2, reticle3, reticle4, flash, mainmenu, playcoop, sniperscope, urdead, playsp, sky, play2pj, play2pdm, play4ptdm, chooseyourclass, play4pc, play4pj;
        Texture2D MedReticle, MedHit, choose1887, chooseanaconda, chooseuzi, chooseR700, noobon, nooboff, p1, p2, p3, p4, godclass1, godclass2, specop1, specop2, lightgunner, heavygunner, sniper1, sniper2, machinegunner1, machinegunner2, choosemp5k, chooseM14, chooseR870, choosemac10;
        AudioEngine gunengine;
        WaveBank gunwavebank;
        SoundBank gunsoundbank;
        Random random = new Random(DateTime.Now.Millisecond);
        const int numwatermelons = 2;
        target[] watermelons;
        shotpellet[] pellets;
        shotpellet[] pellets2;
        shotpellet[] pellets3;
        shotpellet[] pellets4;
        player player2 = new player(new Vector3(-100.0f, 16.0f, 150.0f));
        player player3 = new player(new Vector3(100.0f, 16.0f, 50.0f));
        player player4 = new player(new Vector3(50.0f, 16.0f, -150.0f));
        bot[] bots;
        bot[] goodbots;
        gorilla[] gorillas;
        entrance[] entrances;
        rocket[] p1rockets, p2rockets, p3rockets, p4rockets;
        Vector3 elevatorPosition = new Vector3(50, 4, -860);
        Vector3 elevator2Position = new Vector3(365, 4, 73);
        int rocketindex1 = 0, rocketindex2 = 0, rocketindex3 = 0, rocketindex4 = 0;

        public Game1()
        {
            graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";
            graphics.IsFullScreen = false;
        }

        /// <summary>
        /// Allows the game to perform any initialization it needs to before starting to run.
        /// This is where it can query for any required services and load any non-graphic
        /// related content.  Calling base.Initialize will enumerate through any components
        /// and initialize them as well.
        /// </summary>
        protected override void Initialize()
        {
            // TODO: Add your initialization logic here
            viewport.X = 0;
            viewport.Y = 0;
            cameralookat = (new Vector3(0.0f, 0.0f, -1.0f)) + playerPosition;
            menuRect = new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height);
            buttonRect1 = new Rectangle(500, 200, 100, 30);
            buttonRect2 = new Rectangle(500, 290, 150, 50);
            buttonRect3 = new Rectangle(500, 370, 150, 50);
            buttonRect4 = new Rectangle(270, 200, 150, 50);
            buttonRect5 = new Rectangle(270, 300, 150, 50);
            buttonRect6 = new Rectangle(270, 400, 150, 50);
            buttonRect7 = new Rectangle(50, 300, 150, 50);
            weaponRect = new Rectangle(50, 550, 150, 50);
            weaponRect2 = new Rectangle(250, 550, 150, 50);
            weaponRect3 = new Rectangle(450, 550, 150, 50);
            weaponRect4 = new Rectangle(650, 550, 150, 50);
            weaponRect5 = new Rectangle(50, 500, 150, 50);
            weaponRect6 = new Rectangle(250, 500, 150, 50);
            weaponRect7 = new Rectangle(450, 500, 150, 50);
            weaponRect8 = new Rectangle(650, 500, 150, 50);
            p1rect = new Rectangle(300, 400, 10, 10);
            p2rect = new Rectangle(310, 400, 10, 10);
            p3rect = new Rectangle(320, 400, 10, 10);
            p4rect = new Rectangle(330, 400, 10, 10);
            cursorrect = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2, graphics.GraphicsDevice.Viewport.Height / 2, 40, 40);
            cursorrect2 = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2, graphics.GraphicsDevice.Viewport.Height / 2, 40, 40);
            cursorrect3 = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2, graphics.GraphicsDevice.Viewport.Height / 2, 40, 40);
            cursorrect4 = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2, graphics.GraphicsDevice.Viewport.Height / 2, 40, 40);
            godclassrect = new Rectangle(graphics.GraphicsDevice.Viewport.Width - 700, graphics.GraphicsDevice.Viewport.Height - 550, 63, 25);
            gunnerclassrect = new Rectangle(graphics.GraphicsDevice.Viewport.Width - 600, graphics.GraphicsDevice.Viewport.Height - 550, 63, 25);
            sniperclassrect = new Rectangle(graphics.GraphicsDevice.Viewport.Width - 600, graphics.GraphicsDevice.Viewport.Height - 450, 63, 25);
            mggunnerclassrect = new Rectangle(graphics.GraphicsDevice.Viewport.Width - 700, graphics.GraphicsDevice.Viewport.Height - 450, 63, 25);
            specoprect = new Rectangle(graphics.GraphicsDevice.Viewport.Width - 700, graphics.GraphicsDevice.Viewport.Height - 350, 63, 25);
            oldY = 16;
            base.Initialize();
        }

        Model map;
        Model m9_view;
        Model m9_vfire;
        Model m9_ads;
        Model m9_adsfire;
        Model watermelon;
        Model watermelon_destroyed;
        Model anaconda_view;
        Model anaconda_vfire;
        Model soldier, soldier45, soldier90, soldier135, soldier180, soldier225, soldier270, soldier315;
        Model soldier45fire, soldier90fire, soldier135fire, soldier180fire, soldier225fire, soldier270fire, soldier315fire;
        Model bot0, bot45, bot90, bot135, bot180, bot225, bot270, bot315;
        Model bot45fire, bot90fire, bot135fire, bot180fire, bot225fire, bot270fire, bot315fire;
        Model armored_gorilla, armored_gorilla45, armored_gorilla90, armored_gorilla135, armored_gorilla180, armored_gorilla225, armored_gorilla270, armored_gorilla315;
        Model anaconda_world;
        Model R700_view;
        Model R700_vfire;
        Model R700_rechamber1;
        Model R700_rechamber2;
        Model R700_rechamber3;
        Model R700_world;
        Model R700_ads;
        Model R700_adsfire;
        Model model1887_view;
        Model model1887_vfire;
        Model model1887_f1;
        Model model1887_leverwork;
        Model model1887_world;
        Model model1887_ads;
        Model model1887_adsfire;
        Model SPAS_view;
        Model SPAS_fire;
        Model SPAS_world;
        Model SPAS_ads;
        Model SPAS_adsfire;
        Model Rem870_view;
        Model Rem870_vfire;
        Model Rem870_world;
        Model Rem870_ads;
        Model Rem870_adsfire;
        Model Rem870_pump;
        Model volcanic_view;
        Model volcanic_vfire;
        Model volcanic_f1;
        Model volcanic_f2;
        Model volcanic_world;
        Model volcanic_ads;
        Model volcanic_adsfire;
        Model uzi_view;
        Model uzi_vfire;
        Model uzi_world;
        Model uzi_ads;
        Model uzi_adsfire;
        Model mac10_view;
        Model mac10_vfire;
        Model mac10_world;
        Model mac10_ads;
        Model mac10_adsfire;
        Model uzi, uzifire;
        Model anaconda_ads;
        Model anaconda_adsfire;
        Model R700scope_vfire;
        Model R700scope_rechamber1;
        Model R700scope_rechamber2;
        Model R700scope_rechamber3;
        Model R700scope_world;
        Model cz550_vfire;
        Model cz550_rechamber1;
        Model cz550_rechamber2;
        Model cz550_view;
        Model cz550_world;
        Model cz550_ads;
        Model cz550_ads_fire;
        Model python_view;
        Model python_vfire;
        Model python_ads;
        Model python_ads_fire;
        Model python_world;
        Model ak47_view;
        Model ak47_vfire;
        Model ak47_ads;
        Model ak47_ads_fire;
        Model ak47_world;
        Model ak74_view;
        Model ak74_vfire;
        Model ak74_ads;
        Model ak74_ads_fire;
        Model ak74_world;
        Model glock18_view;
        Model glock18_vfire;
        Model glock18_ads;
        Model glock18_ads_fire;
        Model glock18_world;
        Model magnum24_view;
        Model magnum24_vfire;
        Model magnum24_ads;
        Model magnum24_ads_fire;
        Model magnum24_world;
        Model m14_view;
        Model m14_vfire;
        Model m14_ads;
        Model m14_ads_fire;
        Model m14_world;
        Model mp5k_view;
        Model mp5k_vfire;
        Model mp5k_ads;
        Model mp5k_ads_fire;
        Model mp5k_world;
        Model m4sopmod_view;
        Model m4sopmod_vfire;
        Model m4sopmod_ads;
        Model m4sopmod_ads_fire;
        Model m4sopmod_world;
        Model medpack_view;
        Model medpack_world;
        Model m249_view;
        Model m249_vfire;
        Model m249_ads;
        Model m249_ads_fire;
        Model m249_world;
        Model m21_view;
        Model m21_vfire;
        Model m21_world;
        Model svd_view;
        Model svd_vfire;
        Model svd_world;
        Model pkm_view;
        Model pkm_vfire;
        Model pkm_ads;
        Model pkm_adsfire;
        Model pkm_world;
        Model rpg7_view, rpg7_ads, rpg7_vfire, rpg7_ads_fire, rpg7_world;
        Model m134_view;
        Model m134_vfire;
        Model m134_world;
        Model SW500_view, SW500_vfire, SW500_ads, SW500_ads_fire, SW500_world;
        Model poolmap;
        Model aa12_view, aa12_ads, aa12_vfire, aa12_ads_fire, aa12_world;
        Model hk21_view, hk21_ads, hk21_adsfire, hk21_vfire, hk21_world;
        Model mp40_view, mp40_ads, mp40_vfire, mp40_adsfire, mp40_world;
        Model hipower_view, hipower_fire, hipower_ads, hipower_adsfire, hipower_world, hipower_empty, hipower_adsempty;
        Model scar_view, scar_ads, scar_vfire, scar_adsfire, scar_world;
        Model rpgexplosion, rpg7rocket;
        Viewport defaultViewport;
        Viewport leftViewport;
        Viewport rightViewport;
        Viewport fullViewport;
        Viewport upperleftViewport;
        Viewport upperrightViewport;
        Viewport lowerleftViewport;
        Viewport lowerrightViewport;
        Model gore_fx;
        Model field;
        Model citymap;
        Model elevator, elevator270;
        Model dbshotgun_view, dbshotgun_viewfire, dbshotgun_ads, dbshotgun_adsfire, dbshotgun_world;
        protected override void LoadContent()
        {
            // Create a new SpriteBatch, which can be used to draw textures.
            spriteBatch = new SpriteBatch(GraphicsDevice);
            gunengine = new AudioEngine("Content\\Sounds\\GunSounds\\gunsounds.xgs");
            gunwavebank = new WaveBank(gunengine, "Content\\Sounds\\GunSounds\\Wave Bank.xwb");
            gunsoundbank = new SoundBank(gunengine, "Content\\Sounds\\GunSounds\\Sound Bank.xsb");
            map = Content.Load<Model>("models\\level1");
            field = Content.Load<Model>("models\\field");
            m9_view = Content.Load<Model>("models\\m9_view");
            m9_ads = Content.Load<Model>("models\\m9_ads");
            soldier = Content.Load<Model>("models\\Joe");
            soldier45 = Content.Load<Model>("models\\Joe45");
            soldier90 = Content.Load<Model>("models\\Joe90");
            soldier135 = Content.Load<Model>("models\\Joe135");
            soldier180 = Content.Load<Model>("models\\Joe180");
            soldier225 = Content.Load<Model>("models\\Joe225");
            soldier270 = Content.Load<Model>("models\\Joe270");
            soldier315 = Content.Load<Model>("models\\Joe315");
            soldier45fire = Content.Load<Model>("models\\Joe45fire");
            soldier90fire = Content.Load<Model>("models\\Joe90fire");
            soldier135fire = Content.Load<Model>("models\\Joe135fire");
            soldier180fire = Content.Load<Model>("models\\Joe180fire");
            soldier225fire = Content.Load<Model>("models\\Joe225fire");
            soldier270fire = Content.Load<Model>("models\\Joe270fire");
            soldier315fire = Content.Load<Model>("models\\Joe315fire");
            citymap = Content.Load<Model>("models\\citymap");
            bot0 = Content.Load<Model>("models\\bot");
            bot45 = Content.Load<Model>("models\\bot45");
            bot90 = Content.Load<Model>("models\\bot90");
            bot135 = Content.Load<Model>("models\\bot135");
            bot180 = Content.Load<Model>("models\\bot180");
            bot225 = Content.Load<Model>("models\\bot225");
            bot270 = Content.Load<Model>("models\\bot270");
            bot315 = Content.Load<Model>("models\\bot315");
            bot45fire = Content.Load<Model>("models\\bot45fire");
            bot90fire = Content.Load<Model>("models\\bot90fire");
            bot135fire = Content.Load<Model>("models\\bot135fire");
            bot180fire = Content.Load<Model>("models\\bot180fire");
            bot225fire = Content.Load<Model>("models\\bot225fire");
            bot270fire = Content.Load<Model>("models\\bot270fire");
            bot315fire = Content.Load<Model>("models\\bot315fire");
            armored_gorilla = Content.Load<Model>("models\\armored_gorilla");
            armored_gorilla45 = Content.Load<Model>("models\\armored_gorilla45");
            armored_gorilla90 = Content.Load<Model>("models\\armored_gorilla90");
            armored_gorilla135 = Content.Load<Model>("models\\armored_gorilla135");
            armored_gorilla180 = Content.Load<Model>("models\\armored_gorilla180");
            armored_gorilla225 = Content.Load<Model>("models\\armored_gorilla225");
            armored_gorilla270 = Content.Load<Model>("models\\armored_gorilla270");
            armored_gorilla315 = Content.Load<Model>("models\\armored_gorilla315");
            m9_adsfire = Content.Load<Model>("models\\m9_adsfire");
            m9_vfire = Content.Load<Model>("models\\m9_vfire");
            hipower_view = Content.Load<Model>("models\\hipower_view");
            hipower_ads = Content.Load<Model>("models\\hipower_ads");
            hipower_adsfire = Content.Load<Model>("models\\hipower_adsfire");
            hipower_fire = Content.Load<Model>("models\\hipower_fire");
            hipower_world = Content.Load<Model>("models\\hipower_world");
            hipower_empty = Content.Load<Model>("models\\hipower_empty");
            hipower_adsempty = Content.Load<Model>("models\\hipower_adsempty");
            R700_vfire = Content.Load<Model>("models\\R700_vfire");
            R700_view = Content.Load<Model>("models\\R700_view");
            R700_ads = Content.Load<Model>("models\\R700_ads");
            R700_adsfire = Content.Load<Model>("models\\R700_adsfire");
            R700_rechamber1 = Content.Load<Model>("models\\R700_rechamber1");
            R700_rechamber2 = Content.Load<Model>("models\\R700_rechamber2");
            R700_rechamber3 = Content.Load<Model>("models\\R700_rechamber3");
            R700_world = Content.Load<Model>("models\\R700_world");
            cz550_vfire = Content.Load<Model>("models\\cz550_vfire");
            cz550_rechamber1 = Content.Load<Model>("models\\cz550_rechamber1");
            cz550_rechamber2 = Content.Load<Model>("models\\cz550_rechamber2");
            cz550_view = Content.Load<Model>("models\\cz550_view");
            cz550_world = Content.Load<Model>("models\\cz550_world");
            cz550_ads = Content.Load<Model>("models\\cz550_ads");
            cz550_ads_fire = Content.Load<Model>("models\\cz550_ads_fire");
            R700scope_rechamber1 = Content.Load<Model>("models\\R700scope_rechamber1");
            R700scope_rechamber2 = Content.Load<Model>("models\\R700scope_rechamber2");
            R700scope_rechamber3 = Content.Load<Model>("models\\R700scope_rechamber3");
            R700scope_world = Content.Load<Model>("models\\R700scope_world");
            R700scope_vfire = Content.Load<Model>("models\\R700scope_vfire");
            m21_view = Content.Load<Model>("models\\m21_view");
            m21_world = Content.Load<Model>("models\\m21_world");
            m21_vfire = Content.Load<Model>("models\\m21_vfire");
            svd_view = Content.Load<Model>("models\\svd_view");
            svd_world = Content.Load<Model>("models\\svd_world");
            svd_vfire = Content.Load<Model>("models\\svd_vfire");
            medpack_world = Content.Load<Model>("models\\medpack_world");
            medpack_view = Content.Load<Model>("models\\medpack_view");
            SPAS_view = Content.Load<Model>("models\\SPAS_view");
            SPAS_ads = Content.Load<Model>("models\\SPAS_ads");
            SPAS_adsfire = Content.Load<Model>("models\\SPAS_adsfire");
            SPAS_fire = Content.Load<Model>("models\\SPAS_fire");
            SPAS_world = Content.Load<Model>("models\\SPAS_world");
            aa12_view = Content.Load<Model>("models\\aa12_view");
            aa12_ads = Content.Load<Model>("models\\aa12_ads");
            aa12_ads_fire = Content.Load<Model>("models\\aa12_ads_fire");
            aa12_vfire = Content.Load<Model>("models\\aa12_vfire");
            aa12_world = Content.Load<Model>("models\\aa12_world");
            Rem870_view = Content.Load<Model>("models\\Rem870_view");
            Rem870_ads = Content.Load<Model>("models\\Rem870_ads");
            Rem870_adsfire = Content.Load<Model>("models\\Rem870_adsfire");
            Rem870_vfire = Content.Load<Model>("models\\Rem870_vfire");
            Rem870_world = Content.Load<Model>("models\\Rem870_world");
            Rem870_pump = Content.Load<Model>("models\\Rem870_pump");
            scar_view = Content.Load<Model>("models\\scar_view");
            scar_ads = Content.Load<Model>("models\\scar_ads");
            scar_adsfire = Content.Load<Model>("models\\scar_adsfire");
            scar_vfire = Content.Load<Model>("models\\scar_vfire");
            scar_world = Content.Load<Model>("models\\scar_world");
            uzi_view = Content.Load<Model>("models\\uzi_view");
            uzi_vfire = Content.Load<Model>("models\\uzi_vfire");
            uzi_world = Content.Load<Model>("models\\uzi_world");
            uzi = Content.Load<Model>("models\\uzi");
            uzifire = Content.Load<Model>("models\\uzi_fire");
            uzi_ads = Content.Load<Model>("models\\uzi_ads");
            uzi_adsfire = Content.Load<Model>("models\\uzi_adsfire");
            mac10_view = Content.Load<Model>("models\\mac10_view");
            mac10_vfire = Content.Load<Model>("models\\mac10_vfire");
            mac10_world = Content.Load<Model>("models\\mac10_world");
            mac10_ads = Content.Load<Model>("models\\mac10_ads");
            mac10_adsfire = Content.Load<Model>("models\\mac10_adsfire");
            anaconda_view = Content.Load<Model>("models\\anaconda_view");
            anaconda_ads = Content.Load<Model>("models\\anaconda_ads");
            anaconda_adsfire = Content.Load<Model>("models\\anaconda_adsfire");
            anaconda_vfire = Content.Load<Model>("models\\anaconda_vfire");
            SW500_view = Content.Load<Model>("models\\S&W500_view");
            SW500_ads = Content.Load<Model>("models\\S&W500_ads");
            SW500_ads_fire = Content.Load<Model>("models\\S&W500_ads_fire");
            SW500_vfire = Content.Load<Model>("models\\S&W500_vfire");
            python_view = Content.Load<Model>("models\\python_view");
            python_ads = Content.Load<Model>("models\\python_ads");
            python_ads_fire = Content.Load<Model>("models\\python_ads_fire");
            python_vfire = Content.Load<Model>("models\\python_vfire");
            python_world = Content.Load<Model>("models\\python_world");
            anaconda_world = Content.Load<Model>("models\\anaconda_pistol");
            SW500_world = Content.Load<Model>("models\\S&W500_world");
            ak47_view = Content.Load<Model>("models\\ak47_view");
            ak47_ads = Content.Load<Model>("models\\ak47_ads");
            ak47_ads_fire = Content.Load<Model>("models\\ak47_ads_fire");
            ak47_vfire = Content.Load<Model>("models\\ak47_vfire");
            ak47_world = Content.Load<Model>("models\\ak47_world");
            ak74_view = Content.Load<Model>("models\\ak74_view");
            ak74_ads = Content.Load<Model>("models\\ak74_ads");
            ak74_ads_fire = Content.Load<Model>("models\\ak74_ads_fire");
            ak74_vfire = Content.Load<Model>("models\\ak74_vfire");
            ak74_world = Content.Load<Model>("models\\ak74_world");
            magnum24_view = Content.Load<Model>("models\\magnum24_view");
            magnum24_ads = Content.Load<Model>("models\\magnum24_ads");
            magnum24_ads_fire = Content.Load<Model>("models\\magnum24_ads_fire");
            magnum24_vfire = Content.Load<Model>("models\\magnum24_vfire");
            magnum24_world = Content.Load<Model>("models\\magnum24_world");
            glock18_view = Content.Load<Model>("models\\glock18_view");
            glock18_ads = Content.Load<Model>("models\\glock18_ads");
            glock18_ads_fire = Content.Load<Model>("models\\glock18_ads_fire");
            glock18_vfire = Content.Load<Model>("models\\glock18_vfire");
            glock18_world = Content.Load<Model>("models\\glock18_world");
            model1887_vfire = Content.Load<Model>("models\\1887_vfire");
            model1887_view = Content.Load<Model>("models\\1887_view");
            model1887_ads = Content.Load<Model>("models\\1887_ads");
            model1887_adsfire = Content.Load<Model>("models\\1887_adsfire");
            model1887_f1 = Content.Load<Model>("models\\1887_f1");
            model1887_leverwork = Content.Load<Model>("models\\1887_leverwork");
            model1887_world = Content.Load<Model>("models\\1887_world");
            mp5k_view = Content.Load<Model>("models\\mp5k_view");
            mp5k_ads = Content.Load<Model>("models\\mp5k_ads");
            mp5k_ads_fire = Content.Load<Model>("models\\mp5k_ads_fire");
            mp5k_vfire = Content.Load<Model>("models\\mp5k_vfire");
            mp5k_world = Content.Load<Model>("models\\mp5k_world");
            m14_view = Content.Load<Model>("models\\m14_view");
            m14_ads = Content.Load<Model>("models\\m14_ads");
            m14_ads_fire = Content.Load<Model>("models\\m14_ads_fire");
            m14_vfire = Content.Load<Model>("models\\m14_vfire");
            m14_world = Content.Load<Model>("models\\m14_world");
            rpg7_view = Content.Load<Model>("models\\rpg7_view");
            rpg7_ads = Content.Load<Model>("models\\rpg7_ads");
            rpg7_ads_fire = Content.Load<Model>("models\\rpg7_ads_fire");
            rpg7_vfire = Content.Load<Model>("models\\rpg7_vfire");
            rpg7_world = Content.Load<Model>("models\\rpg7_world");
            rpg7rocket = Content.Load<Model>("models\\rpgrocket");
            rpgexplosion = Content.Load<Model>("models\\rpgexplosion");
            m249_view = Content.Load<Model>("models\\m249_view");
            m249_ads = Content.Load<Model>("models\\m249_ads");
            m249_ads_fire = Content.Load<Model>("models\\m249_ads_fire");
            m249_vfire = Content.Load<Model>("models\\m249_vfire");
            m249_world = Content.Load<Model>("models\\m249_world");
            mp40_view = Content.Load<Model>("models\\mp40_view");
            mp40_ads = Content.Load<Model>("models\\mp40_ads");
            mp40_adsfire = Content.Load<Model>("models\\mp40_adsfire");
            mp40_vfire = Content.Load<Model>("models\\mp40_vfire");
            mp40_world = Content.Load<Model>("models\\mp40_world");
            m4sopmod_view = Content.Load<Model>("models\\m4sopmod_view");
            m4sopmod_ads = Content.Load<Model>("models\\m4sopmod_ads");
            m4sopmod_ads_fire = Content.Load<Model>("models\\m4sopmod_ads_fire");
            m4sopmod_vfire = Content.Load<Model>("models\\m4sopmod_vfire");
            m4sopmod_world = Content.Load<Model>("models\\m4sopmod_world");
            volcanic_vfire = Content.Load<Model>("models\\volcanic_vfire");
            volcanic_view = Content.Load<Model>("models\\volcanic_view");
            volcanic_ads = Content.Load<Model>("models\\volcanic_ads");
            volcanic_adsfire = Content.Load<Model>("models\\volcanic_adsfire");
            volcanic_f1 = Content.Load<Model>("models\\volcanic_f1");
            volcanic_f2 = Content.Load<Model>("models\\volcanic_f2");
            volcanic_world = Content.Load<Model>("models\\volcanic_world");
            pkm_view = Content.Load<Model>("models\\pkm_view");
            pkm_ads = Content.Load<Model>("models\\pkm_ads");
            pkm_adsfire = Content.Load<Model>("models\\pkm_adsfire");
            pkm_vfire = Content.Load<Model>("models\\pkm_vfire");
            pkm_world = Content.Load<Model>("models\\pkm_world");
            hk21_view = Content.Load<Model>("models\\hk21_view");
            hk21_ads = Content.Load<Model>("models\\hk21_ads");
            hk21_adsfire = Content.Load<Model>("models\\hk21_adsfire");
            hk21_vfire = Content.Load<Model>("models\\hk21_vfire");
            hk21_world = Content.Load<Model>("models\\hk21_world");
            watermelon = Content.Load<Model>("models\\watermelon");
            watermelon_destroyed = Content.Load<Model>("models\\watermelon_destroyed");
            gore_fx = Content.Load<Model>("models\\gore_fx");
            elevator = Content.Load<Model>("models\\elevator");
            elevator270 = Content.Load<Model>("models\\elevator270");
            dbshotgun_view = Content.Load<Model>("models\\dbshotgun_view");
            dbshotgun_viewfire = Content.Load<Model>("models\\dbshotgun_viewfire");
            dbshotgun_ads = Content.Load<Model>("models\\dbshotgun_ads");
            dbshotgun_adsfire = Content.Load<Model>("models\\dbshotgun_adsfire");
            dbshotgun_world = Content.Load<Model>("models\\dbshotgun_world");
            m134_vfire = Content.Load<Model>("models\\m134_vfire");
            m134_world = Content.Load<Model>("models\\m134_world");
            m134_view = Content.Load<Model>("models\\m134_view");
            poolmap = Content.Load<Model>("models\\poolmap");
            urdead = Content.Load<Texture2D>("Sprites\\youaredead");
            noobon = Content.Load<Texture2D>("Sprites\\noobon");
            nooboff = Content.Load<Texture2D>("Sprites\\nooboff");
            chooseuzi = Content.Load<Texture2D>("Sprites\\chooseuzi");
            choose1887 = Content.Load<Texture2D>("Sprites\\choose1887");
            chooseR700 = Content.Load<Texture2D>("Sprites\\chooseR700");
            chooseanaconda = Content.Load<Texture2D>("Sprites\\chooseanaconda");
            chooseR870 = Content.Load<Texture2D>("Sprites\\chooseR870");
            chooseM14 = Content.Load<Texture2D>("Sprites\\chooseM14");
            choosemac10 = Content.Load<Texture2D>("Sprites\\choosemac10");
            choosemp5k = Content.Load<Texture2D>("Sprites\\choosemp5k");
            godclass1 = Content.Load<Texture2D>("Sprites\\godclass1");
            godclass2 = Content.Load<Texture2D>("Sprites\\godclass2");
            specop1 = Content.Load<Texture2D>("Sprites\\specop1");
            specop2 = Content.Load<Texture2D>("Sprites\\specop2");
            lightgunner = Content.Load<Texture2D>("Sprites\\lightgunner");
            heavygunner = Content.Load<Texture2D>("Sprites\\heavygunner");
            sniper1 = Content.Load<Texture2D>("Sprites\\sniper1");
            sniper2 = Content.Load<Texture2D>("Sprites\\sniper2");
            machinegunner1 = Content.Load<Texture2D>("Sprites\\machinegunner1");
            machinegunner2 = Content.Load<Texture2D>("Sprites\\machinegunner2");
            chooseyourclass = Content.Load<Texture2D>("Sprites\\chooseyourclass");
            reticle = Content.Load<Texture2D>("Sprites\\reticle");
            reticle = Content.Load<Texture2D>("Sprites\\reticle");
            reticle2 = Content.Load<Texture2D>("Sprites\\reticle2");
            reticle3 = Content.Load<Texture2D>("Sprites\\reticle3");
            reticle4 = Content.Load<Texture2D>("Sprites\\reticle4");
            p1 = Content.Load<Texture2D>("Sprites\\p1");
            p2 = Content.Load<Texture2D>("Sprites\\p2");
            p3 = Content.Load<Texture2D>("Sprites\\p3");
            p4 = Content.Load<Texture2D>("Sprites\\p4");
            MedReticle = Content.Load<Texture2D>("Sprites\\MedReticle");
            MedHit = Content.Load<Texture2D>("Sprites\\MedHit");
            flash = Content.Load<Texture2D>("Sprites\\flash");
            mainmenu = Content.Load<Texture2D>("Sprites\\mainmenu");
            sniperscope = Content.Load<Texture2D>("Sprites\\sniperscope");
            playcoop = Content.Load<Texture2D>("Sprites\\playcoop");
            playsp = Content.Load<Texture2D>("Sprites\\playsp");
            play2pj = Content.Load<Texture2D>("Sprites\\play2pj");
            play4pj = Content.Load<Texture2D>("Sprites\\play4pj");
            play2pdm = Content.Load<Texture2D>("Sprites\\play2pdm");
            play4ptdm = Content.Load<Texture2D>("Sprites\\play4ptdm");
            play4pc = Content.Load<Texture2D>("Sprites\\play4pc");
            Font = Content.Load<SpriteFont>("Fonts\\Font");
            sky = Content.Load<Texture2D>("Sprites\\sky");
            defaultViewport = GraphicsDevice.Viewport;
            leftViewport = defaultViewport;
            rightViewport = defaultViewport;
            leftViewport.Width = leftViewport.Width / 2;
            rightViewport.Width = rightViewport.Width / 2;
            rightViewport.X = leftViewport.Width;
            fullViewport.Width = rightViewport.Width;
            fullViewport.X = 0;
            upperleftViewport = defaultViewport;
            upperrightViewport = defaultViewport;
            lowerleftViewport = defaultViewport;
            lowerrightViewport = defaultViewport;
            upperleftViewport.Width = upperleftViewport.Width / 2;
            upperrightViewport.Width = upperrightViewport.Width / 2;
            lowerleftViewport.Width = lowerleftViewport.Width / 2;
            lowerrightViewport.Width = lowerrightViewport.Width / 2;
            upperrightViewport.X = upperleftViewport.Width;
            lowerrightViewport.X = lowerleftViewport.Width;
            upperleftViewport.Height = leftViewport.Height / 2;
            upperrightViewport.Height = rightViewport.Height / 2;
            lowerleftViewport.Height = leftViewport.Height / 2;
            lowerrightViewport.Height = rightViewport.Height / 2;
            lowerleftViewport.Y = upperleftViewport.Height;
            lowerrightViewport.Y = upperrightViewport.Height;
            watermelons = new target[numwatermelons];
            for (int i = 0; i < numwatermelons; i++)
            {
                watermelons[i] = new target(new Vector3(random.Next(600) - 300, -45.0f, random.Next(800) - 400));
                watermelons[i].destroyed = false;
                watermelons[i].model = watermelon;
            }
            pellets = new shotpellet[8];
            for (int j = 0; j < 8; j++)
            {
                pellets[j] = new shotpellet(new Vector3((-(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2))) + MathHelper.ToRadians(0.5f)), ((float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f))), (-(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f)))));
                pellets[j].ray = new Ray(playerPosition, pellets[j].FireDirection);
                pellets[j].goreposition = Vector3.Zero;
            }
            pellets2 = new shotpellet[8];
            for (int k = 0; k < 8; k++)
            {
                pellets2[k] = new shotpellet(new Vector3((-(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2))) + MathHelper.ToRadians(0.5f)), ((float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f))), (-(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f)))));
                pellets2[k].ray = new Ray(player2.Position, pellets2[k].FireDirection);
                pellets2[k].goreposition = Vector3.Zero;
            }
            pellets3 = new shotpellet[8];
            for (int o = 0; o < 8; o++)
            {
                pellets3[o] = new shotpellet(new Vector3((-(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2))) + MathHelper.ToRadians(0.5f)), ((float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f))), (-(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f)))));
                pellets3[o].ray = new Ray(player3.Position, pellets3[o].FireDirection);
                pellets3[o].goreposition = Vector3.Zero;
            }
            pellets4 = new shotpellet[8];
            for (int p = 0; p < 8; p++)
            {
                pellets4[p] = new shotpellet(new Vector3((-(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2))) + MathHelper.ToRadians(0.5f)), ((float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f))), (-(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f)))));
                pellets4[p].ray = new Ray(player4.Position, pellets4[p].FireDirection);
                pellets4[p].goreposition = Vector3.Zero;
            }
            bots = new bot[4];
            for (int l = 0; l < 4; l++)
            {
                bots[l] = new bot(new Vector3(random.Next(500) - 250, -5, random.Next(500) - 250));
            }
            goodbots = new bot[3];
            for (int m = 0; m < 3; m++)
            {
                goodbots[m] = new bot(new Vector3(random.Next(500) - 250, -5, random.Next(500) - 250));
            }
            gorillas = new gorilla[2];
            for (int n = 0; n < 2; n++)
            {
                gorillas[n] = new gorilla(new Vector3(random.Next(2000) - 1000, 0, random.Next(5000) - 2500));
            }
            entrances = new entrance[13];
            entrances[0] = new entrance(new Vector3(115, 10, 180));
            entrances[0].position = new Vector3(115, 10, -400);
            entrances[0].sphere = new BoundingSphere(entrances[0].position, 30);
            entrances[1] = new entrance(new Vector3(-108, 10, -215));
            entrances[1].position = new Vector3(-108, 10, -215);
            entrances[1].sphere = new BoundingSphere(entrances[1].position, 30);
            entrances[2] = new entrance(new Vector3(-290, 10, -390));
            entrances[2].position = new Vector3(-290, 10, -390);
            entrances[2].sphere = new BoundingSphere(entrances[2].position, 30);
            entrances[3] = new entrance(new Vector3(-114, 10, 177));
            entrances[3].position = new Vector3(-114, 10, 177);
            entrances[3].sphere = new BoundingSphere(entrances[3].position, 30);
            entrances[4] = new entrance(new Vector3(-350, -45, 20));
            entrances[4].position = new Vector3(-350, -45, 20);
            entrances[4].sphere = new BoundingSphere(entrances[4].position, 20);
            entrances[5] = new entrance(new Vector3(47, 10, -618));
            entrances[5].position = new Vector3(47, 10, -618);
            entrances[5].sphere = new BoundingSphere(entrances[5].position, 20);
            entrances[6] = new entrance(new Vector3(50, 10, -800));
            entrances[6].position = new Vector3(50, 10, -800);
            entrances[6].sphere = new BoundingSphere(entrances[6].position, 20);
            entrances[7] = new entrance(new Vector3(50, 286, -800));
            entrances[7].position = new Vector3(50, 286, -800);
            entrances[7].sphere = new BoundingSphere(entrances[7].position, 20);
            entrances[8] = new entrance(new Vector3(50, 156, -800));
            entrances[8].position = new Vector3(50, 156, -800);
            entrances[8].sphere = new BoundingSphere(entrances[8].position, 20);
            entrances[9] = new entrance(new Vector3(115, 10, 70));
            entrances[9].position = new Vector3(115, 10, 70);
            entrances[9].sphere = new BoundingSphere(entrances[9].position, 20);
            entrances[10] = new entrance(new Vector3(290, 10, 70));
            entrances[10].position = new Vector3(290, 10, 70);
            entrances[10].sphere = new BoundingSphere(entrances[10].position, 20);
            entrances[12] = new entrance(new Vector3(290, 280, 70));
            entrances[12].position = new Vector3(290, 280, 70);
            entrances[12].sphere = new BoundingSphere(entrances[12].position, 20);
            entrances[11] = new entrance(new Vector3(290, 150, 70));
            entrances[11].position = new Vector3(290, 150, 70);
            entrances[11].sphere = new BoundingSphere(entrances[11].position, 20);
            p1rockets = new rocket[10];
            for (int o = 0; o < 10; o++)
            {
                p1rockets[o] = new rocket(playerPosition);
                p1rockets[o].direction = new Vector3(-(float)Math.Sin(Rotation), (float)Math.Sin(freeLook), -(float)Math.Cos(Rotation));
                p1rockets[o].sphere = new BoundingSphere(p1rockets[o].position, 2);
                p1rockets[o].iexplosion = new BoundingSphere(p1rockets[o].position, 20);
                p1rockets[o].mexplosion = new BoundingSphere(p1rockets[o].position, 30);
                p1rockets[o].oexplosion = new BoundingSphere(p1rockets[o].position, 45);
            }
            p2rockets = new rocket[10];
            for (int p = 0; p < 10; p++)
            {
                p2rockets[p] = new rocket(player2.Position);
                p2rockets[p].direction = new Vector3(-(float)Math.Sin(player2.Rotation), (float)Math.Sin(player2.freeLook), -(float)Math.Cos(player2.Rotation));
                p2rockets[p].sphere = new BoundingSphere(p2rockets[p].position, 2);
                p2rockets[p].iexplosion = new BoundingSphere(p2rockets[p].position, 20);
                p2rockets[p].mexplosion = new BoundingSphere(p2rockets[p].position, 30);
                p2rockets[p].oexplosion = new BoundingSphere(p2rockets[p].position, 45);
            }
            p3rockets = new rocket[10];
            for (int q = 0; q < 10; q++)
            {
                p3rockets[q] = new rocket(player3.Position);
                p3rockets[q].direction = new Vector3(-(float)Math.Sin(player3.Rotation), (float)Math.Sin(player3.freeLook), -(float)Math.Cos(player3.Rotation));
                p3rockets[q].sphere = new BoundingSphere(p3rockets[q].position, 2);
                p3rockets[q].iexplosion = new BoundingSphere(p3rockets[q].position, 20);
                p3rockets[q].mexplosion = new BoundingSphere(p3rockets[q].position, 30);
                p3rockets[q].oexplosion = new BoundingSphere(p3rockets[q].position, 45);
            }
            p4rockets = new rocket[10];
            for (int r = 0; r < 10; r++)
            {
                p4rockets[r] = new rocket(player4.Position);
                p4rockets[r].direction = new Vector3(-(float)Math.Sin(player4.Rotation), (float)Math.Sin(player4.freeLook), -(float)Math.Cos(player4.Rotation));
                p4rockets[r].sphere = new BoundingSphere(p4rockets[r].position, 2);
                p4rockets[r].iexplosion = new BoundingSphere(p4rockets[r].position, 20);
                p4rockets[r].mexplosion = new BoundingSphere(p4rockets[r].position, 30);
                p4rockets[r].oexplosion = new BoundingSphere(p4rockets[r].position, 45);
            }

            // TODO: use this.Content to load your game content here
        }

        /// <summary>
        /// UnloadContent will be called once per game and is the place to unload
        /// all content.
        /// </summary>
        protected override void UnloadContent()
        {
            // TODO: Unload any non ContentManager content here
        }

        /// <summary>
        /// Allows the game to run logic such as updating the world,
        /// checking for collisions, gathering input, and playing audio.
        /// </summary>
        /// <param name="gameTime">Provides a snapshot of timing values.</param>
        protected override void Update(GameTime gameTime)
        {
            // Allows the game to exit
            Input();
            Vector3 fireDirection = Vector3.Zero;
            Vector3 fireDirection2 = Vector3.Zero;
            Vector3 fireDirection3 = Vector3.Zero;
            Vector3 fireDirection4 = Vector3.Zero;
            BoundingSphere room1sphere = new BoundingSphere(new Vector3(-168, 4, 271), 56);
            BoundingSphere room2sphere = new BoundingSphere(new Vector3(-173, 4, -279), 50);
            BoundingBox playersphere = new BoundingBox(new Vector3(playerPosition.X - soldier.Meshes[0].BoundingSphere.Radius * 2, playerPosition.Y - 40, playerPosition.Z - soldier.Meshes[0].BoundingSphere.Radius * 2), new Vector3(playerPosition.X + soldier.Meshes[0].BoundingSphere.Radius * 2, playerPosition.Y + 1, playerPosition.Z + soldier.Meshes[0].BoundingSphere.Radius * 2));
            BoundingBox playersphere2 = new BoundingBox(new Vector3(player2.Position.X - soldier.Meshes[0].BoundingSphere.Radius * 2, player2.Position.Y - 40, player2.Position.Z - soldier.Meshes[0].BoundingSphere.Radius * 2), new Vector3(player2.Position.X + soldier.Meshes[0].BoundingSphere.Radius * 2, player2.Position.Y + 1, player2.Position.Z + soldier.Meshes[0].BoundingSphere.Radius * 2));
            BoundingBox playersphere3 = new BoundingBox(new Vector3(player3.Position.X - soldier.Meshes[0].BoundingSphere.Radius * 2, player3.Position.Y - 40, player3.Position.Z - soldier.Meshes[0].BoundingSphere.Radius * 2), new Vector3(player3.Position.X + soldier.Meshes[0].BoundingSphere.Radius * 2, player3.Position.Y + 1, player3.Position.Z + soldier.Meshes[0].BoundingSphere.Radius * 2));
            BoundingBox playersphere4 = new BoundingBox(new Vector3(player4.Position.X - soldier.Meshes[0].BoundingSphere.Radius * 2, player4.Position.Y - 40, player4.Position.Z - soldier.Meshes[0].BoundingSphere.Radius * 2), new Vector3(player4.Position.X + soldier.Meshes[0].BoundingSphere.Radius * 2, player4.Position.Y + 1, player4.Position.Z + soldier.Meshes[0].BoundingSphere.Radius * 2));
            BoundingSphere watermelonsphere = new BoundingSphere(new Vector3(10.0f, -45.0f, 0.0f), watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
            if (mode == "menu")
            {
                Input();
                Input2();
                Input3();
                Input4();
                noobRect = new Rectangle(120, 200, 100, 50);
                if (cursorrect.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect.X < 0)
                {
                    cursorrect.X = 0;
                }
                if (cursorrect.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect.Y < 0)
                {
                    cursorrect.Y = 0;
                }
                if (cursorrect2.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect2.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect2.X < 0)
                {
                    cursorrect2.X = 0;
                }
                if (cursorrect2.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect2.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect2.Y < 0)
                {
                    cursorrect2.Y = 0;
                }
                if (cursorrect3.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect3.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect3.X < 0)
                {
                    cursorrect3.X = 0;
                }
                if (cursorrect3.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect3.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect3.Y < 0)
                {
                    cursorrect3.Y = 0;
                }
                if (cursorrect4.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect4.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect4.X < 0)
                {
                    cursorrect4.X = 0;
                }
                if (cursorrect4.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect4.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect4.Y < 0)
                {
                    cursorrect4.Y = 0;
                }
            }
            if (mode == "class" && menu == "chooseclass")
            {
                if (cursorrect.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect.X < 0)
                {
                    cursorrect.X = 0;
                }
                if (cursorrect.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect.Y < 0)
                {
                    cursorrect.Y = 0;
                }
                if (cursorrect2.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect2.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect2.X < 0)
                {
                    cursorrect2.X = 0;
                }
                if (cursorrect2.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect2.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect2.Y < 0)
                {
                    cursorrect2.Y = 0;
                }
                if (cursorrect3.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect3.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect3.X < 0)
                {
                    cursorrect3.X = 0;
                }
                if (cursorrect3.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect3.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect3.Y < 0)
                {
                    cursorrect3.Y = 0;
                }
                if (cursorrect4.X > graphics.GraphicsDevice.Viewport.Width - 40)
                {
                    cursorrect4.X = graphics.GraphicsDevice.Viewport.Width - 40;
                }
                if (cursorrect4.X < 0)
                {
                    cursorrect4.X = 0;
                }
                if (cursorrect4.Y > graphics.GraphicsDevice.Viewport.Height - 40)
                {
                    cursorrect4.Y = graphics.GraphicsDevice.Viewport.Height - 40;
                }
                if (cursorrect4.Y < 0)
                {
                    cursorrect4.Y = 0;
                }
            }
            if (mode == "coop")
            {
                Input2();
                Input3();
                Input4();
                if (playerPosition.Z < -470)
                {
                    playerPosition.Z = -470;
                }
                if (playerPosition.Z > 470)
                {
                    playerPosition.Z = 470;
                }
                if (playerPosition.X < -500)
                {
                    playerPosition.X = -500;
                }
                if (playerPosition.X > 450)
                {
                    playerPosition.X = 450;
                }
                if (player2.Position.Z < -470)
                {
                    player2.Position.Z = -470;
                }
                if (player2.Position.Z > 470)
                {
                    player2.Position.Z = 470;
                }
                if (player2.Position.X < -500)
                {
                    player2.Position.X = -500;
                }
                if (player2.Position.X > 450)
                {
                    player2.Position.X = 450;
                }
                if (player3.Position.Z < -470)
                {
                    player3.Position.Z = -470;
                }
                if (player3.Position.Z > 470)
                {
                    player3.Position.Z = 470;
                }
                if (player3.Position.X < -500)
                {
                    player3.Position.X = -500;
                }
                if (player3.Position.X > 450)
                {
                    player3.Position.X = 450;
                }
                if (player4.Position.Z < -470)
                {
                    player4.Position.Z = -470;
                }
                if (player4.Position.Z > 470)
                {
                    player4.Position.Z = 470;
                }
                if (player4.Position.X < -500)
                {
                    player4.Position.X = -500;
                }
                if (player4.Position.X > 450)
                {
                    player4.Position.X = 450;
                }
                BoundingSphere magnumsphere = new BoundingSphere(new Vector3(-150.0f, playerPosition.Y, -200.0f), anaconda_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere r700sphere = new BoundingSphere(new Vector3(150.0f, playerPosition.Y, 100.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere uzisphere = new BoundingSphere(new Vector3(300.0f, playerPosition.Y, -100.0f), uzi_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere pkmsphere = new BoundingSphere(new Vector3(200.0f, playerPosition.Y, -10.0f), pkm_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere dbsphere = new BoundingSphere(new Vector3(0.0f, playerPosition.Y, -200.0f), dbshotgun_world.Meshes[0].BoundingSphere.Radius * 2);
                BoundingSphere SPASsphere = new BoundingSphere(new Vector3(-300.0f, playerPosition.Y, 0.0f), SPAS_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aa12sphere = new BoundingSphere(new Vector3(-310.0f, playerPosition.Y, -200.0f), aa12_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere swsphere = new BoundingSphere(new Vector3(0.0f, playerPosition.Y, 50.0f), anaconda_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere terminatorsphere = new BoundingSphere(new Vector3(100.0f, playerPosition.Y, -150.0f), dbshotgun_world.Meshes[0].BoundingSphere.Radius * 2);
                BoundingSphere snipersphere = new BoundingSphere(new Vector3(-200.0f, playerPosition.Y, 200.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere gatlingsphere = new BoundingSphere(new Vector3(-300.0f, playerPosition.Y, 200.0f), m134_world.Meshes[0].BoundingSphere.Radius * 4);
                if (playersphere.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "anaconda")
                {
                    weapon = "anaconda";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700")
                {
                    weapon = "R700";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700Sniper")
                {
                    weapon = "R700Sniper";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(gatlingsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "m134" && allownoobweapons == true)
                {
                    weapon = "m134";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 1001;
                }
                if (playersphere.Intersects(SPASsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "SPAS12" && allownoobweapons == true)
                {
                    weapon = "SPAS12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 9;
                }
                if (playersphere.Intersects(swsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "S&W500")
                {
                    weapon = "S&W500";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "aa12" && allownoobweapons == true)
                {
                    weapon = "aa12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "uzi")
                {
                    weapon = "uzi";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(pkmsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "pkm" && allownoobweapons == true)
                {
                    weapon = "pkm";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 101;
                }
                if (playersphere.Intersects(dbsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "dbshotgun")
                {
                    weapon = "dbshotgun";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 3;
                }
                if (playersphere.Intersects(terminatorsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "winchester1887")
                {
                    weapon = "winchester1887";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere3.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "anaconda")
                {
                    player3.weapon = "anaconda";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 7;
                }
                if (playersphere3.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "R700")
                {
                    player3.weapon = "R700";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 6;
                }
                if (playersphere3.Intersects(gatlingsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "m134" && allownoobweapons == true)
                {
                    player3.weapon = "m134";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 1001;
                }
                if (playersphere3.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "R700Sniper")
                {
                    player3.weapon = "R700Sniper";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 6;
                }
                if (playersphere3.Intersects(terminatorsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "winchester1887")
                {
                    player3.weapon = "winchester1887";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 6;
                }
                if (playersphere3.Intersects(swsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "S&W500")
                {
                    player3.weapon = "S&W500";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 6;
                }
                if (playersphere3.Intersects(SPASsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "SPAS12" && allownoobweapons == true)
                {
                    player3.weapon = "SPAS12";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 9;
                }
                if (playersphere3.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "aa12" && allownoobweapons == true)
                {
                    player3.weapon = "aa12";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 33;
                }
                if (playersphere3.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "uzi")
                {
                    player3.weapon = "uzi";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 33;
                }
                if (playersphere3.Intersects(pkmsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "pkm")
                {
                    player3.weapon = "pkm";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 101;
                }
                if (playersphere3.Intersects(dbsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "dbshotgun")
                {
                    player3.weapon = "dbshotgun";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 3;
                }
                if (playersphere2.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "anaconda")
                {
                    player2.weapon = "anaconda";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 7;
                }
                if (playersphere2.Intersects(gatlingsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "m134" && allownoobweapons == true)
                {
                    player2.weapon = "m134";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 1001;
                }
                if (playersphere2.Intersects(terminatorsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "winchester1887")
                {
                    player2.weapon = "winchester1887";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R700")
                {
                    player2.weapon = "R700";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(swsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "S&W500")
                {
                    player2.weapon = "S&W500";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R700Sniper")
                {
                    player2.weapon = "R700Sniper";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(SPASsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "SPAS12" && allownoobweapons == true)
                {
                    player2.weapon = "SPAS12";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 9;
                }
                if (playersphere2.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "aa12" && allownoobweapons == true)
                {
                    player2.weapon = "aa12";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 33;
                }
                if (playersphere2.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "uzi")
                {
                    player2.weapon = "uzi";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 33;
                }
                if (playersphere2.Intersects(pkmsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "pkm" && allownoobweapons == true)
                {
                    player2.weapon = "pkm";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 101;
                }
                if (playersphere2.Intersects(dbsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "dbshotgun")
                {
                    player2.weapon = "dbshotgun";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 3;
                }
                if (playersphere4.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "anaconda")
                {
                    player4.weapon = "anaconda";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 7;
                }
                if (playersphere4.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "R700")
                {
                    player4.weapon = "R700";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 6;
                }
                if (playersphere4.Intersects(gatlingsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "m134" && allownoobweapons == true)
                {
                    player4.weapon = "m134";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 1001;
                }
                if (playersphere4.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "R700Sniper")
                {
                    player4.weapon = "R700Sniper";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 6;
                }
                if (playersphere4.Intersects(SPASsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "SPAS12" && allownoobweapons == true)
                {
                    player4.weapon = "SPAS12";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 9;
                }
                if (playersphere4.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "aa12" && allownoobweapons == true)
                {
                    player4.weapon = "aa12";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 33;
                }
                if (playersphere4.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "uzi")
                {
                    player4.weapon = "uzi";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 33;
                }
                if (playersphere4.Intersects(pkmsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "pkm" && allownoobweapons == true)
                {
                    player4.weapon = "pkm";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 101;
                }
                if (playersphere4.Intersects(swsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "S&W500")
                {
                    player4.weapon = "S&W500";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 6;
                }
                if (playersphere4.Intersects(dbsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "dbshotgun")
                {
                    player4.weapon = "dbshotgun";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 3;
                }
                if (playersphere4.Intersects(terminatorsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "winchester1887")
                {
                    player4.weapon = "winchester1887";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 6;
                }
                foreach (bot enemy in bots)
                {
                    if (enemy.position.Z < -320)
                    {
                        enemy.position.Z = -320;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (enemy.position.Z > 420)
                    {
                        enemy.position.Z = 420;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (enemy.position.X < -350)
                    {
                        enemy.position.X = -350;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (enemy.position.X > 400)
                    {
                        enemy.position.X = 400;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    enemy.attentionrayleft = new Ray(enemy.position, new Vector3(-(float)Math.Sin(enemy.rotation + MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(enemy.rotation + MathHelper.ToRadians(5))));
                    enemy.attentionraycenter = new Ray(enemy.position, new Vector3(-(float)Math.Sin(enemy.rotation), 0.0f, -(float)Math.Cos(enemy.rotation)));
                    enemy.attentionrayright = new Ray(enemy.position, new Vector3(-(float)Math.Sin(enemy.rotation - MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(enemy.rotation - MathHelper.ToRadians(5))));
                    if (enemy.dead)
                    {
                        enemy.respawnTime += 1;
                        if (enemy.respawnTime >= 100)
                        {
                            enemy.health = 100;
                            enemy.dead = false;
                            enemy.respawnTime = 0;
                            enemy.position = new Vector3(random.Next(500) - 250, -5, random.Next(500) - 250);
                        }
                    }
                    if (!enemy.dead)
                    {
                        if (enemy.health <= 0)
                        {
                            enemy.dead = true;
                        }
                        if (!enemy.firing)
                        {
                            enemy.position += new Vector3(-(float)Math.Sin(enemy.rotation), 0.0f, -(float)Math.Cos(enemy.rotation)) * 3;
                        }
                        float? p1detectedleft = enemy.attentionrayleft.Intersects(playersphere);
                        float? p1detected = enemy.attentionraycenter.Intersects(playersphere);
                        float? p1detectedright = enemy.attentionrayright.Intersects(playersphere);
                        float? p2detectedleft = enemy.attentionrayleft.Intersects(playersphere2);
                        float? p2detected = enemy.attentionraycenter.Intersects(playersphere2);
                        float? p2detectedright = enemy.attentionrayright.Intersects(playersphere2);
                        float? p3detectedleft = enemy.attentionrayleft.Intersects(playersphere3);
                        float? p3detected = enemy.attentionraycenter.Intersects(playersphere3);
                        float? p3detectedright = enemy.attentionrayright.Intersects(playersphere3);
                        float? p4detectedleft = enemy.attentionrayleft.Intersects(playersphere4);
                        float? p4detected = enemy.attentionraycenter.Intersects(playersphere4);
                        float? p4detectedright = enemy.attentionrayright.Intersects(playersphere4);
                        if (!dead)
                        {
                            if (p1detectedleft != null)
                            {
                                enemy.rotation += 0.04f;
                            }
                            if (p1detected != null)
                            {
                                enemy.alertp1 = true;
                            }
                            if (p1detectedright != null)
                            {
                                enemy.rotation -= 0.04f;
                            }
                        }
                        if (p1detected == null)
                        {
                            enemy.alertp1 = false;
                        }
                        if (!player2.dead)
                        {
                            if (p2detectedleft != null)
                            {
                                enemy.rotation += 0.04f;
                            }
                            if (p2detected != null)
                            {
                                enemy.alertp2 = true;
                            }
                            if (p2detectedright != null)
                            {
                                enemy.rotation -= 0.04f;
                            }
                        }
                        if (!player3.dead)
                        {
                            if (p3detectedleft != null)
                            {
                                enemy.rotation += 0.04f;
                            }
                            if (p3detected != null)
                            {
                                enemy.alertp3 = true;
                            }
                            if (p3detectedright != null)
                            {
                                enemy.rotation -= 0.04f;
                            }
                        }
                        if (!player4.dead)
                        {
                            if (p4detectedleft != null)
                            {
                                enemy.rotation += 0.04f;
                            }
                            if (p4detected != null)
                            {
                                enemy.alertp4 = true;
                            }
                            if (p4detectedright != null)
                            {
                                enemy.rotation -= 0.04f;
                            }
                        }
                        if (p2detected == null)
                        {
                            enemy.alertp2 = false;
                        }
                        if (p3detected == null)
                        {
                            enemy.alertp3 = false;
                        }
                        if (p4detected == null)
                        {
                            enemy.alertp4 = false;
                        }
                        if (!enemy.alertp1)
                        {
                            enemy.firing = false;
                        }
                        if (!enemy.alertp2)
                        {
                            enemy.firing = false;
                        }
                        if (!enemy.alertp3)
                        {
                            enemy.firing = false;
                        }
                        if (!enemy.alertp4)
                        {
                            enemy.firing = false;
                        }
                        if (enemy.alertp1)
                        {
                            if (!dead)
                            {
                                if (enemy.clip > 0)
                                {
                                    if (enemy.firepause == 0)
                                    {
                                        enemy.firing = true;
                                    }
                                    if (enemy.firepause > 0)
                                    {
                                        enemy.firing = false;
                                    }
                                    if (!enemy.firing)
                                    {
                                        if (enemy.firepause >= 170)
                                        {
                                            enemy.firepause = 0;
                                        }
                                        enemy.firepause += 1;
                                    }
                                    if (enemy.firing)
                                    {
                                        int hitnum = random.Next(7);
                                        gunsoundbank.PlayCue("M9Fire");
                                        enemy.clip -= 1;
                                        if (hitnum == 1)
                                        {
                                            health -= 10;
                                        }
                                    }
                                }
                                if (enemy.clip < 0)
                                {
                                    gunsoundbank.PlayCue("uzi_reload");
                                }
                            }
                        }
                        if (enemy.alertp2)
                        {
                            if (!player2.dead)
                            {
                                if (enemy.clip > 0)
                                {
                                    if (enemy.firepause == 0)
                                    {
                                        enemy.firing = true;
                                    }
                                    if (enemy.firepause > 0)
                                    {
                                        enemy.firing = false;
                                    }
                                    if (!enemy.firing)
                                    {
                                        if (enemy.firepause >= 170)
                                        {
                                            enemy.firepause = 0;
                                        }
                                        enemy.firepause += 1;
                                    }
                                    if (enemy.firing)
                                    {
                                        int hitnum = random.Next(7);
                                        gunsoundbank.PlayCue("M9Fire");
                                        enemy.clip -= 1;
                                        if (hitnum == 1)
                                        {
                                            player2.health -= 10;
                                        }
                                    }
                                }
                            }
                        }
                        if (enemy.alertp3)
                        {
                            if (!player3.dead)
                            {
                                if (enemy.clip > 0)
                                {
                                    if (enemy.firepause == 0)
                                    {
                                        enemy.firing = true;
                                    }
                                    if (enemy.firepause > 0)
                                    {
                                        enemy.firing = false;
                                    }
                                    if (!enemy.firing)
                                    {
                                        if (enemy.firepause >= 170)
                                        {
                                            enemy.firepause = 0;
                                        }
                                        enemy.firepause += 1;
                                    }
                                    if (enemy.firing)
                                    {
                                        int hitnum = random.Next(7);
                                        gunsoundbank.PlayCue("M9Fire");
                                        enemy.clip -= 1;
                                        if (hitnum == 1)
                                        {
                                            player3.health -= 10;
                                        }
                                    }
                                }
                            }
                        }
                        if (enemy.alertp4)
                        {
                            if (!player4.dead)
                            {
                                if (enemy.clip > 0)
                                {
                                    if (enemy.firepause == 0)
                                    {
                                        enemy.firing = true;
                                    }
                                    if (enemy.firepause > 0)
                                    {
                                        enemy.firing = false;
                                    }
                                    if (!enemy.firing)
                                    {
                                        if (enemy.firepause >= 170)
                                        {
                                            enemy.firepause = 0;
                                        }
                                        enemy.firepause += 1;
                                    }
                                    if (enemy.firing)
                                    {
                                        int hitnum = random.Next(7);
                                        gunsoundbank.PlayCue("M9Fire");
                                        enemy.clip -= 1;
                                        if (hitnum == 1)
                                        {
                                            player4.health -= 10;
                                        }
                                    }
                                }
                            }
                        }
                        if (enemy.clip <= 0)
                        {
                            enemy.reloadTimeNum += 1;
                            enemy.firing = false;
                            if (enemy.reloadTimeNum >= 150)
                            {
                                enemy.clip = 30;
                                enemy.reloadTimeNum = 0;
                            }
                        }
                    }
                }
            }
            if (health <= 0)
            {
                dead = true;
                firing = false;
            }
            if (player2.health <= 0)
            {
                player2.dead = true;
                player2.firing = false;
            }
            if (player3.health <= 0)
            {
                player3.dead = true;
                player3.firing = false;
            }
            if (player4.health <= 0)
            {
                player4.dead = true;
                player4.firing = false;
            }
            if (mode != "4ptdm")
            {
                playerPosition.Y += jumpspeed;
                player2.Position.Y += player2.jumpspeed;
                if (playerPosition.Y > (oldY + 30))
                {
                    jumpspeed = -2.0f;
                }
                if (playerPosition.Y < oldY)
                {
                    playerPosition.Y = oldY;
                    canjump = true;
                }
                if (player2.Position.Y > (player2.oldY + 30))
                {
                    player2.jumpspeed = -2.0f;
                }
                if (player2.Position.Y < player2.oldY)
                {
                    player2.Position.Y = player2.oldY;
                    player2.canjump = true;
                }
                player3.Position.Y += player3.jumpspeed;
                if (player3.Position.Y > (player3.oldY + 30))
                {
                    player3.jumpspeed = -2.0f;
                }
                if (player3.Position.Y < player3.oldY)
                {
                    player3.Position.Y = player3.oldY;
                    player3.canjump = true;
                }
                player4.Position.Y += player4.jumpspeed;
                if (player4.Position.Y > (player4.oldY + 30))
                {
                    player4.jumpspeed = -2.0f;
                }
                if (player4.Position.Y < player4.oldY)
                {
                    player4.Position.Y = player4.oldY;
                    player4.canjump = true;
                }
            }
            if (weapon == "M9")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p1damage += 10;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 10;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 10;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 4;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 4;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "volcanic")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p1damage += 10;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 2)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 2)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 10;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 2;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 2;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 2;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 2;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "glock18")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 10;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 10;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 4;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 4;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p1damage += 10;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "mp5k")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p1damage += 10;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 10;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 10;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 4;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 4;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "mp40")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p1damage += 18;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 18;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 8;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 8;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 18;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 8;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 8;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 18;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 8;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 8;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 8;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 8;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 18;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 18;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "rpg")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation);
                    fireDirection.Z = -(float)Math.Cos(Rotation);
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation);
                    fireDirection.Z = -(float)Math.Cos(Rotation);
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                if (firing)
                {
                    p1rockets[rocketindex1].position = playerPosition;
                    p1rockets[rocketindex1].direction = fireDirection;
                    p1rockets[rocketindex1].active = true;
                    rocketindex1 += 1;
                    p1rockets[rocketindex1].rotation = Rotation;
                }
            }
            if (rocketindex1 > 8)
            {
                rocketindex1 = 0;
            }
            foreach (rocket rpgrocket in p1rockets)
            {
                rpgrocket.speed = 60;
                rpgrocket.sphere = new BoundingSphere(rpgrocket.position, 2);
                rpgrocket.iexplosion = new BoundingSphere(rpgrocket.position, 20);
                rpgrocket.mexplosion = new BoundingSphere(rpgrocket.position, 30);
                rpgrocket.oexplosion = new BoundingSphere(rpgrocket.position, 45);
                if (rpgrocket.active)
                {
                    rpgrocket.position += rpgrocket.direction * rpgrocket.speed;
                    if (mode == "coop" || mode == "class")
                    {
                        if (rpgrocket.sphere.Intersects(playersphere2) && !player2.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.sphere.Intersects(playersphere3) && !player3.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.sphere.Intersects(playersphere4) && !player4.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Y < -55)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                    }

                    if (mode == "juggernaut2")
                    {
                        if (rpgrocket.position.Z < -4800)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z > 4800)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X < -5100)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X > 4600)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Y < -55)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                    }
                    if (mode == "tdm4")
                    {
                        if (rpgrocket.sphere.Intersects(playersphere2) && !player2.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.sphere.Intersects(playersphere4) && !player4.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z > 215 && rpgrocket.position.X > 164 && rpgrocket.position.X < 510 && rpgrocket.position.Z < 235)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z > 215 && rpgrocket.position.X < 142 && rpgrocket.position.X > -162 && rpgrocket.position.Z < 235)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z < -205 && rpgrocket.position.X > 159 && rpgrocket.position.X < 510 && rpgrocket.position.Z > -225)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z < -205 && rpgrocket.position.X < 140 && rpgrocket.position.X > -162 && rpgrocket.position.Z > -225)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z <= -225 && rpgrocket.position.X > 159)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X > 490 && rpgrocket.position.Z > -225 && rpgrocket.position.Z < 235)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z < -294)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z > -264 && rpgrocket.position.Z < -235 && rpgrocket.position.X < 140 && rpgrocket.position.X > -193)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z > -88 && rpgrocket.position.Z <= -48 && rpgrocket.position.X <= -173)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X > -193 && rpgrocket.position.X <= -162 && rpgrocket.position.Z > -244 && rpgrocket.position.Z <= -48)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X < -142 && rpgrocket.position.Z < -10 && rpgrocket.position.Z > -225 && rpgrocket.position.X > -160)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X < -142 && rpgrocket.position.Z > 10 && rpgrocket.position.Z < 235 && rpgrocket.position.X > -160)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X <= -160 && rpgrocket.position.Z > 40 && rpgrocket.position.Z < 60)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X <= -160 && rpgrocket.position.Z < -28 && rpgrocket.position.Z > -48)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X < -236 && rpgrocket.position.Z < 60 && rpgrocket.position.Z > -48 && rpgrocket.position.X > -256)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X > -191 && rpgrocket.position.Z < -10 && rpgrocket.position.Z > -48 && rpgrocket.position.X <= -160)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X > -191 && rpgrocket.position.Z > 10 && rpgrocket.position.Z < 60 && rpgrocket.position.X <= -160)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z >= 235 && rpgrocket.position.X > 160)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z >= 235 && rpgrocket.position.Z < 275 && rpgrocket.position.X < 142 && rpgrocket.position.X > -188)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z > 307)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Z < 90 && rpgrocket.position.Z >= 60 && rpgrocket.position.X <= -188)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X > -210 && rpgrocket.position.Z >= 60 && rpgrocket.position.X <= -160 && rpgrocket.position.Z < 275)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.X < -416)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                        if (rpgrocket.position.Y < -55)
                        {
                            if (rpgrocket.position.Y >= -99)
                            {
                                if (rpgrocket.position.X < -24)
                                {
                                    rpgrocket.active = false;
                                    rpgrocket.exploding = true;
                                }
                            }
                            if (rpgrocket.position.X > 373)
                            {
                                rpgrocket.active = false;
                                rpgrocket.exploding = true;
                            }
                            if (rpgrocket.position.Z < -80)
                            {
                                rpgrocket.active = false;
                                rpgrocket.exploding = true;
                            }
                            if (rpgrocket.position.Z > 95)
                            {
                                rpgrocket.active = false;
                                rpgrocket.exploding = true;
                            }
                            if (rpgrocket.position.Y < -99)
                            {
                                if (rpgrocket.position.X < 318)
                                {
                                    rpgrocket.active = false;
                                    rpgrocket.exploding = true;
                                }
                            }
                        }
                        if (rpgrocket.position.X >= -160 && rpgrocket.position.Z < 60 && rpgrocket.position.Z > -48)
                        {
                            rpgrocket.room = "janitorcloset";
                        }
                        else if (rpgrocket.position.X > 318 && rpgrocket.position.X <= 393 && rpgrocket.position.Z < 115 && rpgrocket.position.Z > -100 && rpgrocket.position.Y < -95)
                        {
                            rpgrocket.room = "deepwater";
                        }
                        else if (rpgrocket.position.Z <= -244 && rpgrocket.position.X > -193)
                        {
                            rpgrocket.room = "hallway2";
                        }
                        else if (rpgrocket.position.Z <= -48 && rpgrocket.position.X <= -193)
                        {
                            rpgrocket.room = "room2";
                        }
                        else if (rpgrocket.position.Z >= 255 && rpgrocket.position.X > -188)
                        {
                            rpgrocket.room = "hallway1";
                        }
                        else if (rpgrocket.position.Z > 60 && rpgrocket.position.X <= -188)
                        {
                            rpgrocket.room = "room1";
                        }
                        else
                        {
                            rpgrocket.room = "poolroom";
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        if (rpgrocket.sphere.Intersects(playersphere2) && !player2.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        if (rpgrocket.sphere.Intersects(gorillasphere) && !Gorilla.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (rpgrocket.sphere.Intersects(botsphere) && !enemy.dead)
                        {
                            rpgrocket.active = false;
                            rpgrocket.exploding = true;
                        }
                    }
                }
                if (rpgrocket.exploding)
                {
                    if (rpgrocket.iexplosion.Intersects(playersphere))
                    {
                        health -= 940;
                    }
                    if (rpgrocket.mexplosion.Intersects(playersphere))
                    {
                        health -= 50;
                    }
                    if (rpgrocket.oexplosion.Intersects(playersphere))
                    {
                        health -= 10;
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (rpgrocket.iexplosion.Intersects(botsphere))
                        {
                            enemy.health -= 940;
                        }
                        if (rpgrocket.mexplosion.Intersects(botsphere))
                        {
                            enemy.health -= 50;
                        }
                        if (rpgrocket.oexplosion.Intersects(botsphere))
                        {
                            enemy.health -= 10;
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        if (rpgrocket.iexplosion.Intersects(gorillasphere))
                        {
                            Gorilla.health -= 940;
                            if (!Gorilla.dead)
                            {
                                p1damage += 940;
                            }
                        }
                        if (rpgrocket.mexplosion.Intersects(gorillasphere))
                        {
                            Gorilla.health -= 50;
                            if (!Gorilla.dead)
                            {
                                p1damage += 50;
                            }
                        }
                        if (rpgrocket.oexplosion.Intersects(gorillasphere))
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p1damage += 10;
                                Gorilla.rotation = (Rotation + MathHelper.Pi);
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        if (rpgrocket.iexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 940;
                        }
                        if (rpgrocket.mexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 50;
                        }
                        if (rpgrocket.oexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 10;
                        }
                        if (rpgrocket.iexplosion.Intersects(playersphere3))
                        {
                            player3.health -= 940;
                        }
                        if (rpgrocket.mexplosion.Intersects(playersphere3))
                        {
                            player3.health -= 50;
                        }
                        if (rpgrocket.oexplosion.Intersects(playersphere3))
                        {
                            player3.health -= 10;
                        }
                        if (rpgrocket.iexplosion.Intersects(playersphere4))
                        {
                            player4.health -= 940;
                        }
                        if (rpgrocket.mexplosion.Intersects(playersphere4))
                        {
                            player4.health -= 50;
                        }
                        if (rpgrocket.oexplosion.Intersects(playersphere4))
                        {
                            player4.health -= 10;
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        if (rpgrocket.iexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 940;
                        }
                        if (rpgrocket.mexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 50;
                        }
                        if (rpgrocket.oexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 10;
                        }
                    }
                    if (mode == "tdm4")
                    {
                        if (rpgrocket.iexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 940;
                        }
                        if (rpgrocket.mexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 50;
                        }
                        if (rpgrocket.oexplosion.Intersects(playersphere2))
                        {
                            player2.health -= 10;
                        }
                        if (rpgrocket.iexplosion.Intersects(playersphere4))
                        {
                            player4.health -= 940;
                        }
                        if (rpgrocket.mexplosion.Intersects(playersphere4))
                        {
                            player4.health -= 50;
                        }
                        if (rpgrocket.oexplosion.Intersects(playersphere4))
                        {
                            player4.health -= 10;
                        }
                    }

                    rpgrocket.explosionTimeNum += 1;
                    if (rpgrocket.explosionTimeNum > 1)
                    {
                        rpgrocket.exploding = false;
                        rpgrocket.explosionTimeNum = 0;
                    }
                }
            }
            if (weapon == "uzi")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 11;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 11;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 11;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 11;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 11;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 11;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 11;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 11;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 11;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 11;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 11;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 11;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 11;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 11;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 11;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 11;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 11;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 11;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 11;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 11;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 11;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 11;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 11;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 11;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 11;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 11;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 11;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 4;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 4;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 4;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 11;
                            if (!Gorilla.dead)
                            {
                                p1damage += 11;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 11;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 11;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 11;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 11;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "hipower")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 15;
                            if (!Gorilla.dead)
                            {
                                p1damage += 15;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 6;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 6;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 15;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 15;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 15;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 15;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 6;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 6;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 15;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 15;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 15;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 15;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 15;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 15;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 6;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 6;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 6;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 6;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 15;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 15;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 15;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 15;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "mac10")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 24;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 24;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 24;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 24;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 24;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 24;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 24;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 24;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 24;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 24;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 24;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 24;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 24;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 24;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 24;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 24;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 24;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 24;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 24;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 24;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 24;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 24;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 24;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 24;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 24;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 24;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 24;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 5;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 5;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 5;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 5;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 25;
                            if (!Gorilla.dead)
                            {
                                p1damage += 25;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 24;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 24;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 24;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 24;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "pkm")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 60;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 45;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 45;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 45;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 45;
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 60;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 60;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 60;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 60;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 22;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 60;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 60;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 60;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 60;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 60;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 22;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 60;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 60;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 60;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 60;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 60;
                            if (!Gorilla.dead)
                            {
                                p1damage += 60;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 60;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 60;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 60;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 60;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "m14")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation);
                    fireDirection.Z = -(float)Math.Cos(Rotation);
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 50;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 45;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 45;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 45;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 45;
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 50;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 50;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 50;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 50;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 50;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 50;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 50;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 50;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 50;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 22;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 50;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 50;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 50;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 50;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 50;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 50;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 50;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 50;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 50;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 50;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 50;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 50;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 50;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 22;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 50;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 50;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 50;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 50;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 50;
                            if (!Gorilla.dead)
                            {
                                p1damage += 50;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 50;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 50;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 50;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 50;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "m21")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation);
                    fireDirection.Z = -(float)Math.Cos(Rotation);
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 80;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 60;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 30;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 30;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 60;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 30;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 60;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 60;
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 80;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 30;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 30;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 30;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 30;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 80;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 30;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 30;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 30;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 30;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p1damage += 80;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 80;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 80;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 80;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "svd")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation);
                    fireDirection.Z = -(float)Math.Cos(Rotation);
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 100;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 70;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 35;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 35;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 70;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 35;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 70;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 70;
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 100;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 35;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 35;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 35;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 35;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 100;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 35;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 35;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 35;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 35;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p1damage += 100;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 100;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 100;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 100;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "m134")
            {
                fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 45;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 45;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 45;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 15;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 45;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 45;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 60;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 60;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 60;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 22;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 45;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 45;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 45;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 45;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 45;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 30;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 30;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 30;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 30;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 45;
                            if (!Gorilla.dead)
                            {
                                p1damage += 45;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 45;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 45;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 45;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 45;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "R700" || weapon == "R700Sniper")
            {
                fireDirection.X = -(float)Math.Sin(Rotation);
                fireDirection.Z = -(float)Math.Cos(Rotation);
                fireDirection.Y = (float)Math.Sin(freeLook);
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p1damage += 100;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 100;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 37;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 37;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 37;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 37;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 100;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 37;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 37;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 37;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 37;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 100;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 75;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 20;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 20;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 20;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 20;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 75;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 75;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 100;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 100;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 100;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "sniper")
                                {
                                    sniperkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "R870")
            {
                foreach (shotpellet pellet in pellets)
                {
                    if (ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    pellet.ray = new Ray(playerPosition, pellet.FireDirection);
                    if (firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (room == player4.room)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                if (area == player2.area)
                                {
                                    player2.health -= 10;
                                }
                                if (area == "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 2;
                                }
                                if (area != "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 2;
                                }
                                if (area == "2basement" && player2.area != "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                                {
                                    player2.health -= 2;
                                }
                                if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                                {
                                    player2.health -= 2;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p1damage += 10;
                                }
                                Gorilla.rotation = (Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (weapon == "SPAS12")
            {
                foreach (shotpellet pellet in pellets)
                {
                    if (ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(playerPosition, pellet.FireDirection);
                    if (firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (room == player4.room)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                if (area == player2.area)
                                {
                                    player2.health -= 10;
                                }
                                if (area == "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 2;
                                }
                                if (area != "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 2;
                                }
                                if (area == "2basement" && player2.area != "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                                {
                                    player2.health -= 2;
                                }
                                if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                                {
                                    player2.health -= 2;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p1damage += 10;
                                }
                                Gorilla.rotation = (Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (weapon == "aa12")
            {
                foreach (shotpellet pellet in pellets)
                {
                    if (ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(playerPosition, pellet.FireDirection);
                    if (firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 10;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (room == player4.room)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 10;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                if (area == player2.area)
                                {
                                    player2.health -= 10;
                                }
                                if (area == "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 2;
                                }
                                if (area != "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 2;
                                }
                                if (area == "2basement" && player2.area != "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                                {
                                    player2.health -= 2;
                                }
                                if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                                {
                                    player2.health -= 2;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p1damage += 10;
                                }
                                Gorilla.rotation = (Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (weapon == "magnum24")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 80;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 30;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 80;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 30;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 80;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 80;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 55;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 55;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 55;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 55;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p1damage += 80;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 80;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 80;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 80;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "gunner")
                                {
                                    gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 2.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "anaconda")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 55;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 20;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 55;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 20;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 55;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 55;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 40;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 40;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 40;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 40;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p1damage += 55;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 55;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 55;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 55;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 2.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "python")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.0f));
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 40;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 40;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 40;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 40;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 30;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 30;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 30;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 30;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p1damage += 40;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 40;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 40;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 2.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "cz550")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation);
                    fireDirection.Z = -(float)Math.Cos(Rotation);
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 350;
                            if (!Gorilla.dead)
                            {
                                p1damage += 350;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 350;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 350;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 350;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 350;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 350;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 350;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 350;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 0;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 0;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 350;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 350;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 99;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 99;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 99;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 99;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 350;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 350;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 350;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 350;
                            }
                            else
                            {
                                player2.health -= 10;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 350;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 350;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 350;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 350;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 350;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 350;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 350;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 0;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 0;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 350;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 350;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 99;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 99;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 99;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 99;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 350;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 350;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 350;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 350;
                            }
                            else
                            {
                                player4.health -= 10;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 350;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 250;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 100;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 100;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 250;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 100;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 250;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 250;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 350;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 350;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 350;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 2.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 350;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "S&W500")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 75;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 75;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 75;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 75;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 75;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 75;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 30;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 75;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 75;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 75;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 75;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 75;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 75;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 75;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 75;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 75;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 75;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 75;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 75;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 30;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 75;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 75;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 75;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 75;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 75;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 75;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 75;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 75;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 55;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 55;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 0;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 55;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 55;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 75;
                            if (!Gorilla.dead)
                            {
                                p1damage += 75;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 75;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 75;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 75;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 2.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 75;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "AK74")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook);
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 1210)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 1210)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 22;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 1210 && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 1210)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 1210)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 1210)
                            {
                                player2.health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 22;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 22;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 22;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 22;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 1210)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 1210)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 22;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 1210 && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 1210)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 1210)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 1210)
                            {
                                player4.health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 22;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 22;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 22;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 22;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 22;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 10;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 3;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 3;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 3;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 10;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 22;
                            if (!Gorilla.dead)
                            {
                                p1damage += 22;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 22;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 22;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 22;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 22;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "dbshotgun")
            {
                foreach (shotpellet pellet in pellets)
                {
                    if (ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(playerPosition, pellet.FireDirection);
                    if (firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (room == player4.room)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                if (area == player2.area)
                                {
                                    player2.health -= 15;
                                }
                                if (area == "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 4;
                                }
                                if (area != "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 4;
                                }
                                if (area == "2basement" && player2.area != "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                                {
                                    player2.health -= 4;
                                }
                                if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                                {
                                    player2.health -= 4;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p1damage += 15;
                                }
                                Gorilla.rotation = (Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                player2.health -= 15;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 15;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 15;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
                float? hit11 = pellets[0].ray.Intersects(playersphere2);
                float? hit12 = pellets[1].ray.Intersects(playersphere2);
                float? hit13 = pellets[2].ray.Intersects(playersphere2);
                float? hit14 = pellets[3].ray.Intersects(playersphere2);
                float? hit15 = pellets[4].ray.Intersects(playersphere2);
                float? hit16 = pellets[5].ray.Intersects(playersphere2);
                float? hit17 = pellets[6].ray.Intersects(playersphere2);
                float? hit18 = pellets[7].ray.Intersects(playersphere2);
                if (hit11 != null || hit12 != null || hit13 != null || hit14 != null || hit15 != null || hit16 != null || hit17 != null || hit18 != null)
                {
                    if (player2.health <= 0 && !player2.dead)
                    {
                        p1kills += 1;
                        if (mpclass == "sniper")
                        {
                            sniperkills += 1;
                        }
                    }
                }
                float? hit21 = pellets[0].ray.Intersects(playersphere3);
                float? hit22 = pellets[1].ray.Intersects(playersphere3);
                float? hit23 = pellets[2].ray.Intersects(playersphere3);
                float? hit24 = pellets[3].ray.Intersects(playersphere3);
                float? hit25 = pellets[4].ray.Intersects(playersphere3);
                float? hit26 = pellets[5].ray.Intersects(playersphere3);
                float? hit27 = pellets[6].ray.Intersects(playersphere3);
                float? hit28 = pellets[7].ray.Intersects(playersphere3);
                if (hit21 != null || hit22 != null || hit23 != null || hit24 != null || hit25 != null || hit26 != null || hit27 != null || hit28 != null)
                {
                    if (player3.health <= 0 && !player3.dead)
                    {
                        p1kills += 1;
                        if (mpclass == "sniper")
                        {
                            sniperkills += 1;
                        }
                    }
                }
                float? hit31 = pellets[0].ray.Intersects(playersphere4);
                float? hit32 = pellets[1].ray.Intersects(playersphere4);
                float? hit33 = pellets[2].ray.Intersects(playersphere4);
                float? hit34 = pellets[3].ray.Intersects(playersphere4);
                float? hit35 = pellets[4].ray.Intersects(playersphere4);
                float? hit36 = pellets[5].ray.Intersects(playersphere4);
                float? hit37 = pellets[6].ray.Intersects(playersphere4);
                float? hit38 = pellets[7].ray.Intersects(playersphere4);
                if (hit31 != null || hit32 != null || hit33 != null || hit34 != null || hit35 != null || hit36 != null || hit37 != null || hit38 != null)
                {
                    if (player4.health <= 0 && !player4.dead)
                    {
                        p1kills += 1;
                        if (mpclass == "sniper")
                        {
                            sniperkills += 1;
                        }
                    }
                }
            }
            if (weapon == "winchester1887")
            {
                foreach (shotpellet pellet in pellets)
                {
                    if (ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(playerPosition, pellet.FireDirection);
                    if (firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p1damage += 15;
                                }
                                Gorilla.rotation = (Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 15;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (room == player4.room)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 15;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                if (area == player2.area)
                                {
                                    player2.health -= 15;
                                }
                                if (area == "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 4;
                                }
                                if (area != "2storymain" && player2.area == "2storybasement")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2basement" && player2.area == "2storymain")
                                {
                                    player2.health -= 4;
                                }
                                if (area == "2basement" && player2.area != "2storymain")
                                {
                                    player2.health -= 0;
                                }
                                if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                                {
                                    player2.health -= 4;
                                }
                                if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                                {
                                    player2.health -= 4;
                                }
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            if (hit != null)
                            {
                                player2.health -= 15;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 15;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 15;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = playerPosition + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (weapon == "medic")
            {
                medicpause += 1;
                if (medicpause == 50 && health < 100)
                {
                    health += 1;
                    medicpause = 0;
                }
                fireDirection.X = -(float)Math.Sin(Rotation);
                fireDirection.Z = -(float)Math.Cos(Rotation);
                fireDirection.Y = (float)Math.Sin(freeLook);
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? playerhit = BulletRay.Intersects(playersphere2);
                    if (playerhit != null && playerhit < 100)
                    {
                        medichit = true;
                        if (player2.health < 50)
                        {
                            player2.health += 50;
                        }
                        if (player2.health >= 50)
                        {
                            player2.health = 100;
                        }
                    }
                    foreach (bot ally in goodbots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(ally.position, soldier.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null && hit < 100)
                        {
                            medichit = true;
                            if (ally.health < 50)
                            {
                                ally.health += 50;
                            }
                            if (ally.health >= 50)
                            {
                                ally.health = 100;
                            }
                        }
                        if ((playerhit == null && hit == null) || (playerhit >= 100 && hit >= 100))
                        {
                            medichit = false;
                        }
                    }
                }
            }
            if (weapon == "hk21")
            {
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 55;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 45;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 45;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 15;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 45;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 45;
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 55;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 22;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 55;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 22;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p1damage += 55;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 55;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;

                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 55;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;

                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 55;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;

                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "AK47")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 40;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 15;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 40;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 15;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 40;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 36;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 36;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 36;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 36;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p1damage += 40;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 40;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 40;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "godclass")
                                {
                                    godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "M249")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 20;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 20;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 20;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 7;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 7;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 7;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 7;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 20;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 20;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 20;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 20;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 20;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 20;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 20;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 7;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 7;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 7;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 7;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 20;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 20;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 20;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 20;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 20;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 10;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 2;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 2;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 2;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 10;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 20;
                            if (!Gorilla.dead)
                            {
                                p1damage += 20;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 20;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 20;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 20;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "mggunner")
                                {
                                    mgkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 20;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (weapon == "M4SOPMOD")
            {
                if (ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                }
                if (!ads)
                {
                    fireDirection.X = -(float)Math.Sin(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Z = -(float)Math.Cos(Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection.Y = (float)Math.Sin(freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(playerPosition, fireDirection);
                if (firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 18;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 7;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 7;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 7;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 7;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (room == player4.room)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 18;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 7;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 7;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 7;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 7;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            if (area == player2.area)
                            {
                                player2.health -= 18;
                            }
                            if (area == "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 10;
                            }
                            if (area != "2storymain" && player2.area == "2storybasement")
                            {
                                player2.health -= 2;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 2;
                            }
                            if (area == "2basement" && player2.area == "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area == "2basement" && player2.area != "2storymain")
                            {
                                player2.health -= 2;
                            }
                            if (area == "2storymain" && player2.area != "2storybasement" && player2.area != "2storymain")
                            {
                                player2.health -= 10;
                            }
                            if (area != player2.area && area != "2storymain" && player2.area != "2storybasement")
                            {
                                player2.health -= 10;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p1damage += 18;
                            }
                            Gorilla.rotation = (Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        if (hit != null)
                        {
                            player2.health -= 18;
                            if (!player2.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                            if (!player2.dead && player2.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 18;
                            if (!player3.dead)
                            {
                                gorePosition = playerPosition + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition = playerPosition + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p1kills += 1;
                                if (mpclass == "specops")
                                {
                                    specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition = playerPosition + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "M9")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }

                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 10;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 4;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 4;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p2damage += 10;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "mp5k")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 10;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 4;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 4;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p2damage += 10;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "mp40")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 18;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 8;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 8;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 8;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 8;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 18;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 8;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 8;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 8;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 8;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p2damage += 18;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 18;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 18;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "glock18")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p2damage += 10;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 10;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 4;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 4;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "uzi")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 11;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 11;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 11;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 11;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 11;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 11;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 11;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 11;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 11;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 11;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 11;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 11;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 11;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 11;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 11;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 11;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 11;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 11;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 11;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 11;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 4;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 4;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 4;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 11;
                            if (!Gorilla.dead)
                            {
                                p2damage += 11;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 11;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 11;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 11;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 11;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "mac10")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 24;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 24;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 24;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 24;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 24;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 24;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 24;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 24;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 24;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 24;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 24;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 24;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 24;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 24;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 24;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 24;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 24;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 24;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 24;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 24;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 5;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 5;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 5;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 5;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 25;
                            if (!Gorilla.dead)
                            {
                                p2damage += 25;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 24;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 24;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 24;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 24;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "m14")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation);
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation);
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook);
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 50;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 50;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 50;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 50;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 50;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 50;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 50;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 50;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 50;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 50;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 50;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 50;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 50;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 50;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 50;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 50;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 50;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 50;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 50;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 50;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 45;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 45;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 45;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 45;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 50;
                            if (!Gorilla.dead)
                            {
                                p2damage += 50;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 50;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 50;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 50;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 50;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "m21")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation);
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation);
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook);
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 80;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 30;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 80;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 60;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 22;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 22;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 60;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 22;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 60;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 60;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p2damage += 80;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 80;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 80;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 80;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "svd")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation);
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation);
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook);
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 100;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 35;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 35;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 35;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 35;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 100;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 70;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 22;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 22;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 70;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 22;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 70;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 70;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p2damage += 100;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 100;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 100;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 100;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "pkm")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 60;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 60;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 60;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 60;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 60;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 60;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 60;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 60;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 60;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 60;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 60;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 60;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 60;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 60;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 60;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 60;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 60;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 45;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 45;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 45;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 45;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 60;
                            if (!Gorilla.dead)
                            {
                                p2damage += 60;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 60;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 60;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 60;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 60;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "volcanic")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }

                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 10;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 2;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 2;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 2;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 2;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p2damage += 10;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "hipower")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }

                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 6;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 6;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 15;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 15;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 15;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 15;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 6;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 6;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 15;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 15;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 15;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 15;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 15;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 6;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 6;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 6;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 6;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 15;
                            if (!Gorilla.dead)
                            {
                                p2damage += 15;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 15;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 15;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 15;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 15;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "m134")
            {
                fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 45;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 45;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 45;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 45;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 45;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 45;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 45;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 45;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 45;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 45;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 45;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 45;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 45;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 45;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 45;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 45;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 30;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 30;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 30;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 30;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 45;
                            if (!Gorilla.dead)
                            {
                                p2damage += 45;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 45;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 45;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 45;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "gunner")
                                {
                                    player2.gunnerkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 45;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "hk21")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 55;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 55;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 45;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 45;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 15;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 45;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 45;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p2damage += 55;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 55;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 55;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 55;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "cz550")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation);
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation);
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook);
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 350;
                            if (!Gorilla.dead)
                            {
                                p2damage += 350;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 350;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 350;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 350;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 350;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 350;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 350;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 350;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 0;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 0;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 99;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 99;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 99;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 99;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 350;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 350;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 350;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 350;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 350;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 350;
                            }
                            else
                            {
                                health -= 10;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 0;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 0;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 350;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 350;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 350;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 350;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 350;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 350;
                            }
                            else
                            {
                                player3.health -= 10;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 350;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 250;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 100;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 100;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 250;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 100;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 250;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 250;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 350;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 350;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 350;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        float? bothit = BulletRay.Intersects(botsphere);
                        if (bothit != null)
                        {
                            enemy.health -= 350;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (bothit.Value * fireDirection2);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "R700" || player2.weapon == "R700Sniper")
            {
                fireDirection2.X = -(float)Math.Sin(player2.Rotation);
                fireDirection2.Z = -(float)Math.Cos(player2.Rotation);
                fireDirection2.Y = (float)Math.Sin(player2.freeLook);
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p2damage += 100;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 100;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 37;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 37;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 37;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 37;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 100;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 75;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 20;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 20;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 75;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 20;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 20;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 75;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 100;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 100;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 100;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "sniper")
                                {
                                    player2.sniperkills += 1;
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        float? bothit = BulletRay.Intersects(botsphere);
                        if (bothit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (bothit.Value * fireDirection2);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "SPAS12")
            {
                foreach (shotpellet pellet in pellets2)
                {
                    if (player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(player2.Position, pellet.FireDirection);
                    if (player2.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    health -= 10;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                if (player2.area == area)
                                {
                                    health -= 10;
                                }
                                if (player2.area == "2storymain" && area == "2storybasement")
                                {
                                    health -= 2;
                                }
                                if (player2.area != "2storymain" && area == "2storybasement")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 2;
                                }
                                if (player2.area == "2basement" && area != "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                                {
                                    health -= 2;
                                }
                                if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                                {
                                    health -= 2;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p2damage += 10;
                                }
                                Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player2.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player2.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player2.weapon == "aa12")
            {
                foreach (shotpellet pellet in pellets2)
                {
                    if (player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(player2.Position, pellet.FireDirection);
                    if (player2.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    health -= 10;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                if (player2.area == area)
                                {
                                    health -= 10;
                                }
                                if (player2.area == "2storymain" && area == "2storybasement")
                                {
                                    health -= 2;
                                }
                                if (player2.area != "2storymain" && area == "2storybasement")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 2;
                                }
                                if (player2.area == "2basement" && area != "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                                {
                                    health -= 2;
                                }
                                if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                                {
                                    health -= 2;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p2damage += 10;
                                }
                                Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player2.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player2.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player2.weapon == "R870")
            {
                foreach (shotpellet pellet in pellets2)
                {
                    if (player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    pellet.ray = new Ray(player2.Position, pellet.FireDirection);
                    if (player2.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    health -= 10;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                if (player2.area == area)
                                {
                                    health -= 10;
                                }
                                if (player2.area == "2storymain" && area == "2storybasement")
                                {
                                    health -= 2;
                                }
                                if (player2.area != "2storymain" && area == "2storybasement")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 2;
                                }
                                if (player2.area == "2basement" && area != "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                                {
                                    health -= 2;
                                }
                                if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                                {
                                    health -= 2;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p2damage += 10;
                                }
                                Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player2.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player2.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player2.weapon == "anaconda")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 55;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 20;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 55;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 40;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 40;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 40;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 40;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 40;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p2damage += 55;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 55;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 55;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 55;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "S&W500")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 75;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 75;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 75;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 75;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 75;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 75;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 30;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 75;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 75;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 75;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 75;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 75;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 75;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 75;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 75;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 75;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 75;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 75;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 75;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 75;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 55;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 55;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 55;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 55;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 55;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 75;
                            if (!Gorilla.dead)
                            {
                                p2damage += 75;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 75;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 75;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 75;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 75;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "magnum24")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 80;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 30;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 80;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 55;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 55;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 55;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 55;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 55;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p2damage += 80;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 80;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (!dead && health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 80;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (!player3.dead && player3.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 80;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (!player4.dead && player4.health <= 0)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "dbshotgun")
            {
                foreach (shotpellet pellet in pellets2)
                {
                    if (player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(player2.Position, pellet.FireDirection);
                    if (player2.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    health -= 15;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p2damage += 15;
                                }
                                Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                if (player2.area == area)
                                {
                                    health -= 15;
                                }
                                if (player2.area == "2storymain" && area == "2storybasement")
                                {
                                    health -= 4;
                                }
                                if (player2.area != "2storymain" && area == "2storybasement")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 4;
                                }
                                if (player2.area == "2basement" && area != "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                                {
                                    health -= 4;
                                }
                                if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                                {
                                    health -= 4;
                                }
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 15;
                                if (!dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 15;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 15;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player2.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player2.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
                float? hit11 = pellets2[0].ray.Intersects(playersphere);
                float? hit12 = pellets2[1].ray.Intersects(playersphere);
                float? hit13 = pellets2[2].ray.Intersects(playersphere);
                float? hit14 = pellets2[3].ray.Intersects(playersphere);
                float? hit15 = pellets2[4].ray.Intersects(playersphere);
                float? hit16 = pellets2[5].ray.Intersects(playersphere);
                float? hit17 = pellets2[6].ray.Intersects(playersphere);
                float? hit18 = pellets2[7].ray.Intersects(playersphere);
                if (hit11 != null || hit12 != null || hit13 != null || hit14 != null || hit15 != null || hit16 != null || hit17 != null || hit18 != null)
                {
                    if (health <= 0 && !dead)
                    {
                        p2kills += 1;
                        if (player2.mpclass == "sniper")
                        {
                            player2.sniperkills += 1;
                        }
                    }
                }
                float? hit21 = pellets2[0].ray.Intersects(playersphere3);
                float? hit22 = pellets2[1].ray.Intersects(playersphere3);
                float? hit23 = pellets2[2].ray.Intersects(playersphere3);
                float? hit24 = pellets2[3].ray.Intersects(playersphere3);
                float? hit25 = pellets2[4].ray.Intersects(playersphere3);
                float? hit26 = pellets2[5].ray.Intersects(playersphere3);
                float? hit27 = pellets2[6].ray.Intersects(playersphere3);
                float? hit28 = pellets2[7].ray.Intersects(playersphere3);
                if (hit21 != null || hit22 != null || hit23 != null || hit24 != null || hit25 != null || hit26 != null || hit27 != null || hit28 != null)
                {
                    if (player3.health <= 0 && !player3.dead)
                    {
                        p2kills += 1;
                        if (player2.mpclass == "sniper")
                        {
                            player2.sniperkills += 1;
                        }
                    }
                }
                float? hit31 = pellets2[0].ray.Intersects(playersphere4);
                float? hit32 = pellets2[1].ray.Intersects(playersphere4);
                float? hit33 = pellets2[2].ray.Intersects(playersphere4);
                float? hit34 = pellets2[3].ray.Intersects(playersphere4);
                float? hit35 = pellets2[4].ray.Intersects(playersphere4);
                float? hit36 = pellets2[5].ray.Intersects(playersphere4);
                float? hit37 = pellets2[6].ray.Intersects(playersphere4);
                float? hit38 = pellets2[7].ray.Intersects(playersphere4);
                if (hit31 != null || hit32 != null || hit33 != null || hit34 != null || hit35 != null || hit36 != null || hit37 != null || hit38 != null)
                {
                    if (player4.health <= 0 && !player4.dead)
                    {
                        p2kills += 1;
                        if (player2.mpclass == "sniper")
                        {
                            player2.sniperkills += 1;
                        }
                    }
                }
            }
            if (player2.weapon == "python")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 40;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p2damage += 40;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 40;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 20;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 20;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 20;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 0;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 20;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 20;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 40;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (health <= 0 && !dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 40;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (player3.health <= 0 && !player3.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (player4.health <= 0 && !player4.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "medic")
            {
                player2.medicpause += 1;
                if (player2.medicpause == 50 && player2.health < 100)
                {
                    player2.health += 1;
                    player2.medicpause = 0;
                }
                fireDirection2.X = -(float)Math.Sin(player2.Rotation);
                fireDirection2.Z = -(float)Math.Cos(player2.Rotation);
                fireDirection2.Y = (float)Math.Sin(player2.freeLook);

                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? playerhit = BulletRay.Intersects(playersphere);
                    if (playerhit != null && playerhit < 100)
                    {
                        player2.medichit = true;
                        if (health < 50)
                        {
                            health += 50;
                        }
                        if (health >= 50)
                        {
                            health = 100;
                        }
                    }
                    foreach (bot ally in goodbots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(ally.position, soldier.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null && hit < 100)
                        {
                            player2.medichit = true;
                            if (ally.health < 50)
                            {
                                ally.health += 50;
                            }
                            if (ally.health >= 50)
                            {
                                ally.health = 100;
                            }
                        }
                        if ((playerhit == null && hit == null) || (playerhit >= 100 && hit >= 100))
                        {
                            player2.medichit = false;
                        }
                    }
                }
            }
            if (player2.weapon == "winchester1887")
            {
                foreach (shotpellet pellet in pellets2)
                {
                    if (player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!player2.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(player2.Position, pellet.FireDirection);
                    if (player2.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player2.room)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    health -= 15;
                                }
                                else if (room == "room1" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player2.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player2.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p2damage += 15;
                                }
                                Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "deathmatch2")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                if (player2.area == area)
                                {
                                    health -= 15;
                                }
                                if (player2.area == "2storymain" && area == "2storybasement")
                                {
                                    health -= 4;
                                }
                                if (player2.area != "2storymain" && area == "2storybasement")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2basement" && area == "2storymain")
                                {
                                    health -= 4;
                                }
                                if (player2.area == "2basement" && area != "2storymain")
                                {
                                    health -= 0;
                                }
                                if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                                {
                                    health -= 4;
                                }
                                if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                                {
                                    health -= 4;
                                }
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 15;
                                if (!dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 15;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 15;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player2.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player2.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player2.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player2.weapon == "M4SOPMOD")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 18;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 7;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 18;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 10;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 2;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 2;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 2;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 10;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p2damage += 18;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 18;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (health <= 0 && !dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 18;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (player3.health <= 0 && !player3.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (player4.health <= 0 && !player4.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "specops")
                                {
                                    player2.specopkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "AK74")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook);
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook);
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 1210)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 1210)
                            {
                                health -= 22;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 22;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 1210)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 1210)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 1210 && player2.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 1210)
                            {
                                health -= 22;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 22;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 22;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 22;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 22;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 1210)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 1210)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 1210)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 1210)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 1210 && player2.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 1210)
                            {
                                player3.health -= 22;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 22;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 22;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 22;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 22;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 22;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 10;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 3;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 3;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 3;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 10;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 22;
                            if (!Gorilla.dead)
                            {
                                p2damage += 22;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 22;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (health <= 0 && !dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 22;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (player3.health <= 0 && !player3.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 22;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (player4.health <= 0 && !player4.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 22;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "M249")
            {
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 20;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 20;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 20;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 7;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 20;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 20;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 20;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 20;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 20;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 20;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 20;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 20;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 20;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 20;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 20;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 20;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 20;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 10;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 2;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 2;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 2;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 10;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 20;
                            if (!Gorilla.dead)
                            {
                                p2damage += 20;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 20;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (health <= 0 && !dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 20;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (player3.health <= 0 && !player3.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 20;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (player4.health <= 0 && !player4.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "mggunner")
                                {
                                    player2.mgkills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 20;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player2.weapon == "AK47")
            {
                if (player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player2.ads)
                {
                    fireDirection2.X = -(float)Math.Sin(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Z = -(float)Math.Cos(player2.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection2.Y = (float)Math.Sin(player2.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player2.Position, fireDirection2);
                if (player2.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player2.room)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            else if (room == "janitorcloset" && player2.room == "poolroom")
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player2.room == "janitorcloset")
                            {
                                health -= 40;
                            }
                            else if (room == "room1" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player2.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player2.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player2.room == "hallway2" && playerPosition.X >= 127 && player2.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (player2.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player2.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            if (room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (player2.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                            if (player2.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "deathmatch2")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            if (player2.area == area)
                            {
                                health -= 40;
                            }
                            if (player2.area == "2storymain" && area == "2storybasement")
                            {
                                health -= 36;
                            }
                            if (player2.area != "2storymain" && area == "2storybasement")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2basement" && area == "2storymain")
                            {
                                health -= 36;
                            }
                            if (player2.area == "2basement" && area != "2storymain")
                            {
                                health -= 10;
                            }
                            if (player2.area == "2storymain" && area != "2storybasement" && area != "2storymain")
                            {
                                health -= 36;
                            }
                            if (player2.area != area && player2.area != "2storymain" && area != "2storybasement")
                            {
                                health -= 36;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p2damage += 40;
                            }
                            Gorilla.rotation = (player2.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 40;
                            if (!dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                            if (health <= 0 && !dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 40;
                            if (!player3.dead)
                            {
                                gorePosition2 = player2.Position + (hit2.Value * BulletRay.Direction);
                            }
                            if (player3.health <= 0 && !player3.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition2 = player2.Position + (hit3.Value * BulletRay.Direction);
                            }
                            if (player4.health <= 0 && !player4.dead)
                            {
                                p2kills += 1;
                                if (player2.mpclass == "godclass")
                                {
                                    player2.godclasskills += 1;
                                }
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player2.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition2 = player2.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player2.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "M9")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p3damage += 10;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "M249")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 7;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 20;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 20;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 20;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 20;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 7;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 20;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 20;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 20;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 20;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 20;
                            if (!Gorilla.dead)
                            {
                                p3damage += 20;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 20;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 20;
                            if (!player3.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 20;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 20;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "glock18")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p3damage += 10;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "uzi")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 11;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 11;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 11;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 11;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 11;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 11;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 11;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 11;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 11;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 11;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 11;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 11;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 11;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 11;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 11;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 11;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 11;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 11;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 11;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 11;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 11;
                            if (!Gorilla.dead)
                            {
                                p3damage += 11;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 11;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 11;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 11;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 11;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "mac10")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 24;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 24;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 24;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 24;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 5;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 24;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 24;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 24;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 24;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 24;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 24;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 24;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 24;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 24;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 24;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 5;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 24;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 24;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 24;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 24;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 24;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 24;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 25;
                            if (!Gorilla.dead)
                            {
                                p3damage += 25;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 24;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 24;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 24;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 24;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "pkm")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 60;
                            if (!Gorilla.dead)
                            {
                                p3damage += 60;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 60;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 22;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 60;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 60;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 60;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 60;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 60;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 22;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 60;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 60;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 60;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 60;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 60;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 60;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 60;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 60;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "hipower")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 15;
                            if (!Gorilla.dead)
                            {
                                p3damage += 15;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 6;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 6;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 6;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 15;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 15;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 15;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 15;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 6;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 6;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 6;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 15;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 15;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 15;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 15;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 15;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 15;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 15;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 15;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 15;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "m134")
            {
                fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 15;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 45;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 45;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 45;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 45;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 15;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 45;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 45;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 45;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 45;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 45;
                            if (!Gorilla.dead)
                            {
                                p3damage += 45;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 45;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 45;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 45;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 45;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "cz550")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation);
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation);
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook);
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 200;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 350;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 99;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 99;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 99;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 99;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 350;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 350;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 350;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 350;
                            }
                            else
                            {
                                player2.health -= 10;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 200;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 350;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 99;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 99;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 99;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 99;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 350;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 350;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 350;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 350;
                            }
                            else
                            {
                                player4.health -= 10;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p3damage += 100;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 100;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 100;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 100;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        float? bothit = BulletRay.Intersects(botsphere);
                        if (bothit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (bothit.Value * fireDirection3);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "volcanic")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p3damage += 10;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "m14")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation);
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation);
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook);
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 50;
                            if (!Gorilla.dead)
                            {
                                p3damage += 50;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 50;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 22;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 50;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 50;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 50;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 50;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 50;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 22;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 50;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 50;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 50;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 50;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 50;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 50;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 50;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 50;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "m21")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation);
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation);
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook);
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p3damage += 80;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 30;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 30;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 80;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 80;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 80;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "svd")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation);
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation);
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook);
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p3damage += 100;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 70;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 35;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 35;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 35;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 35;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 70;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 35;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 35;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 35;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 35;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 100;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 100;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 100;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "R700" || player3.weapon == "R700Sniper")
            {
                fireDirection3.X = -(float)Math.Sin(player3.Rotation);
                fireDirection3.Z = -(float)Math.Cos(player3.Rotation);
                fireDirection3.Y = (float)Math.Sin(player3.freeLook);
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 100;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 37;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 37;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 37;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 37;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 100;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 100;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 37;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 37;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 37;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 37;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 100;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p3damage += 100;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 100;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 100;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 100;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        float? bothit = BulletRay.Intersects(botsphere);
                        if (bothit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (bothit.Value * fireDirection3);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "mp5k")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p3damage += 10;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 4;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 10;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 10;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 10;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "mp40")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p3damage += 18;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 8;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 8;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 8;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 8;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 8;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 8;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 18;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 18;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "SPAS12")
            {
                foreach (shotpellet pellet in pellets3)
                {
                    if (player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(player3.Position, pellet.FireDirection);
                    if (player3.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p3damage += 10;
                                }
                                Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere2);
                            if (hit2 != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player3.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player3.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player3.weapon == "aa12")
            {
                foreach (shotpellet pellet in pellets3)
                {
                    if (player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(player3.Position, pellet.FireDirection);
                    if (player3.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p3damage += 10;
                                }
                                Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere2);
                            if (hit2 != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player3.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player3.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player3.weapon == "magnum24")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 80;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 80;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 80;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 80;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 80;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 80;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 80;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 80;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p3damage += 80;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 80;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 80;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 80;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "S&W500")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 75;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 75;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 75;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 75;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 75;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 75;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 75;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 75;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 75;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 75;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 75;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 75;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 75;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 75;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 75;
                            if (!Gorilla.dead)
                            {
                                p3damage += 75;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 75;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 75;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 75;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 75;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "anaconda")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 20;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 20;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p3damage += 55;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 55;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 55;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 55;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "winchester1887")
            {
                foreach (shotpellet pellet in pellets3)
                {
                    if (player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(player3.Position, pellet.FireDirection);
                    if (player3.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p3damage += 15;
                                }
                                Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 15;
                                if (!dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere2);
                            if (hit2 != null)
                            {
                                player2.health -= 15;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 15;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player3.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player3.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player3.weapon == "dbshotgun")
            {
                foreach (shotpellet pellet in pellets3)
                {
                    if (player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(player3.Position, pellet.FireDirection);
                    if (player3.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 15;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 15;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 15;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 15;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 15;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 15;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 15;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 15;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p3damage += 15;
                                }
                                Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 15;
                                if (!dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere2);
                            if (hit2 != null)
                            {
                                player2.health -= 15;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 15;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player3.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player3.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player3.weapon == "AK74")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook);
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook);
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 1210)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 1210)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 16;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 1210 && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 1210)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 1210)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 1210)
                            {
                                player2.health -= 10;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 22;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 22;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 22;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 22;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 1210)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 1210)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 16;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 1210 && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 1210)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 1210)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 1210)
                            {
                                player4.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 22;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 22;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 22;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 22;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 22;
                            if (!Gorilla.dead)
                            {
                                p3damage += 22;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 22;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 22;
                            if (!player3.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 22;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 22;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "M4SOPMOD")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 14;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 18;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 7;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 18;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 14;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 18;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 7;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 18;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p3damage += 18;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 18;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 18;
                            if (!player3.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "hk21")
            {
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p3damage += 55;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 55;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 22;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 55;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 55;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 22;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 55;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 55;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 55;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 55;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "R870")
            {
                foreach (shotpellet pellet in pellets3)
                {
                    if (player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player3.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    pellet.ray = new Ray(player3.Position, pellet.FireDirection);
                    if (player3.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere2);
                            float? hit2 = pellet.ray.Intersects(playersphere4);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (player3.room == player2.room)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 10;
                                }
                                else if (player3.room == "room1" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "room2" && player2.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player2.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player2.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player2.room == "deepwater")
                                {
                                    player2.health -= 6;
                                }
                                else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                                {
                                    player2.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                                {
                                    player2.health -= 10;
                                }
                                else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                                {
                                    player2.health -= 10;
                                }
                                if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player2.health -= 10;
                                }
                                else
                                {
                                    player2.health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 10;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player4.health -= 2;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater")
                                {
                                    player4.health -= 6;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                                {
                                    player4.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player4.health -= 10;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player4.health -= 10;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player4.health -= 10;
                                }
                                else
                                {
                                    player4.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p3damage += 10;
                                }
                                Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere2);
                            if (hit2 != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere4);
                            if (hit3 != null)
                            {
                                player4.health -= 10;
                                if (!player4.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player3.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player3.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player3.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player3.weapon == "python")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 15;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 15;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p3damage += 40;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 40;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 40;
                            if (!player2.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player3.weapon == "AK47")
            {
                if (player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player3.ads)
                {
                    fireDirection3.X = -(float)Math.Sin(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Z = -(float)Math.Cos(player3.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection3.Y = (float)Math.Sin(player3.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player3.Position, fireDirection3);
                if (player3.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere2);
                        float? hit2 = BulletRay.Intersects(playersphere4);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (player3.room == player2.room)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X < 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X < 127)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player2.room == "poolroom")
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "janitorcloset")
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "room1" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "room2" && player2.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room1" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player2.room == "room2" && player3.room == "janitorcloset")
                            {
                                player2.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player2.room == "deepwater")
                            {
                                player2.health -= 2;
                            }
                            else if (player2.room == "poolroom" && player3.room == "deepwater" && player2.Position.Y < 4)
                            {
                                player2.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player2.room == "hallway2" && player3.Position.X >= 127 && player2.Position.X >= 125)
                            {
                                player2.health -= 40;
                            }
                            else if (player2.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player2.Position.X >= 127)
                            {
                                player2.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway2" && player2.Position.X >= 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player2.room == "hallway1" && player2.Position.X >= 127)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player2.room == "poolroom" && player2.Position.X < 125)
                            {
                                player2.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player2.room == "poolroom" && player2.Position.X < 127)
                            {
                                player2.health -= 15;
                            }
                            if (player3.room == "hallway1" && player2.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player3.room == "hallway2" && player2.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            if (player2.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player2.health -= 40;
                            }
                            else
                            {
                                player2.health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player4.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater")
                            {
                                player4.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater" && player4.Position.Y < 4)
                            {
                                player4.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player4.health -= 40;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player4.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player4.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player4.health -= 15;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player4.health -= 40;
                            }
                            else
                            {
                                player4.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p3damage += 40;
                            }
                            Gorilla.rotation = (player3.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 40;
                            if (!dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 40;
                            if (!player3.dead)
                            {
                                gorePosition3 = player3.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere4);
                        if (hit3 != null)
                        {
                            player4.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition3 = player3.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player3.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition3 = player3.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player3.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "M9")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p4damage += 10;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "glock18")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p4damage += 10;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "M4SOPMOD")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p4damage += 18;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 18;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere3);
                        if (hit3 != null)
                        {
                            player3.health -= 18;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 18;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 7;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "AK74")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(1))) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook);
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook);
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 22;
                            if (!Gorilla.dead)
                            {
                                p4damage += 22;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 22;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 22;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere3);
                        if (hit3 != null)
                        {
                            player3.health -= 22;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 1210)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 1210)
                            {
                                health -= 22;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 22;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 16;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 1210)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 1210)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 1210 && player4.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 1210)
                            {
                                health -= 22;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 22;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 22;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 22;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 22;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 1210)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 1210)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 16;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 1210)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 1210)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 1210 && player4.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 1210)
                            {
                                player3.health -= 22;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 22;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 22;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 22;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 22;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 22;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "R870")
            {
                foreach (shotpellet pellet in pellets4)
                {
                    if (player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    pellet.ray = new Ray(player4.Position, pellet.FireDirection);
                    if (player4.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player4.room)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    health -= 10;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p4damage += 10;
                                }
                                Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere2);
                            if (hit3 != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player4.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player4.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player4.weapon == "uzi")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 11;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 11;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 11;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 11;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 11;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 11;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 11;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 11;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 11;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 11;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 11;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 11;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 11;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 11;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 11;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 11;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 11;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 11;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 11;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 11;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 11;
                            if (!Gorilla.dead)
                            {
                                p4damage += 11;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 11;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 11;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 11;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 11;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "hipower")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 6;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 6;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 6;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 15;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 15;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 15;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 15;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 6;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 6;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 6;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 15;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 15;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 15;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 15;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 15;
                            if (!Gorilla.dead)
                            {
                                p4damage += 15;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 15;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 15;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 15;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 15;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "mac10")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 24;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 24;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 24;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 24;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 24;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 24;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 24;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 5;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 24;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 24;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 24;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 24;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 24;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 24;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 24;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 5;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 24;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 24;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 24;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 24;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 24;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 24;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 25;
                            if (!Gorilla.dead)
                            {
                                p4damage += 25;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 24;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 24;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 24;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 24;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "winchester1887")
            {
                foreach (shotpellet pellet in pellets4)
                {
                    if (player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(player4.Position, pellet.FireDirection);
                    if (player4.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player4.room)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    health -= 15;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p4damage += 15;
                                }
                                Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 15;
                                if (!dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 15;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere2);
                            if (hit3 != null)
                            {
                                player2.health -= 15;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player4.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player4.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player4.weapon == "pkm")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 60;
                            if (!Gorilla.dead)
                            {
                                p4damage += 60;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 60;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 60;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 60;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 60;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 60;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 60;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 60;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 60;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 60;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 60;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 60;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 60;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 60;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 60;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 60;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 60;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 60;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 60;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 60;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 60;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "m134")
            {
                fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 45;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 45;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 45;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 45;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 45;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 45;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 45;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 45;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 45;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 45;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 45;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 45;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 45;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 45;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 45;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 45;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 45;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 45;
                            if (!Gorilla.dead)
                            {
                                p4damage += 45;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 45;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 45;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 45;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 45;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "R700" || player4.weapon == "R700Sniper")
            {
                fireDirection4.X = -(float)Math.Sin(player4.Rotation);
                fireDirection4.Z = -(float)Math.Cos(player4.Rotation);
                fireDirection4.Y = (float)Math.Sin(player4.freeLook);
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p4damage += 100;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 100;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 37;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 37;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 37;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 37;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 37;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 100;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 100;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 100;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        float? bothit = BulletRay.Intersects(botsphere);
                        if (bothit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (bothit.Value * fireDirection4);
                            }
                        }
                    }

                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "S&W500")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 75;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 75;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 75;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 75;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 75;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 75;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 75;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 30;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 75;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 75;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 75;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 75;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 75;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 75;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 75;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 75;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 75;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 75;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 75;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 75;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 75;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 75;
                            if (!Gorilla.dead)
                            {
                                p4damage += 75;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 75;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 75;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 75;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 75;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "hk21")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p4damage += 55;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 55;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 55;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 55;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 55;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "SPAS12")
            {
                foreach (shotpellet pellet in pellets4)
                {
                    if (player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(player4.Position, pellet.FireDirection);
                    if (player4.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player4.room)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    health -= 10;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p4damage += 10;
                                }
                                Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere2);
                            if (hit3 != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player4.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player4.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player4.weapon == "aa12")
            {
                foreach (shotpellet pellet in pellets4)
                {
                    if (player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    }
                    if (!player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    pellet.ray = new Ray(player4.Position, pellet.FireDirection);
                    if (player4.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player4.room)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    health -= 10;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    health -= 10;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    health -= 10;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 10;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 10;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 10;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player3.health -= 10;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 10;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 10;
                                if (!Gorilla.dead)
                                {
                                    p4damage += 10;
                                }
                                Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 10;
                                if (!dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 10;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere2);
                            if (hit3 != null)
                            {
                                player2.health -= 10;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player4.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 10;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player4.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player4.weapon == "anaconda")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 55;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 55;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 20;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 55;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 55;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 55;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 55;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 55;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 55;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 55;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 55;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 55;
                            if (!Gorilla.dead)
                            {
                                p4damage += 55;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 55;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 55;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 55;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 55;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "magnum24")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(6))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 80;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 30;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p4damage += 80;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 80;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 80;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 80;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "M249")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 20;
                            if (!Gorilla.dead)
                            {
                                p4damage += 20;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 20;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 20;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere3);
                        if (hit3 != null)
                        {
                            player3.health -= 20;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 20;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 20;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 20;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 20;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 20;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 14;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 7;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 7;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 20;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 20;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 20;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 20;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 20;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 20;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 20;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 14;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 7;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 20;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 20;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 20;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 20;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 20;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 20;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 20;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "dbshotgun")
            {
                foreach (shotpellet pellet in pellets4)
                {
                    if (player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    }
                    if (!player4.ads)
                    {
                        pellet.FireDirection.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                        pellet.FireDirection.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(8))) + MathHelper.ToRadians(4.0f));
                    }
                    pellet.ray = new Ray(player4.Position, pellet.FireDirection);
                    if (player4.firing)
                    {
                        float? melonhit = pellet.ray.Intersects(watermelonsphere);
                        if (melonhit != null)
                        {
                            watermelondestroyed = true;
                        }
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            float? hit = pellet.ray.Intersects(gorillasphere);
                            if (hit != null)
                            {
                                Gorilla.health -= 15;
                                if (!Gorilla.dead)
                                {
                                    p4damage += 15;
                                }
                                Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                            }
                        }
                        if (mode == "tdm4")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            float? entrancehit1 = pellet.ray.Intersects(room1sphere);
                            float? entrancehit2 = pellet.ray.Intersects(room2sphere);
                            if (hit != null)
                            {
                                if (room == player4.room)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                else if (room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    health -= 15;
                                }
                                else if (room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    health -= 15;
                                }
                                else if (room == "room1" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (room == "room2" && player4.room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room1" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "room2" && room == "janitorcloset")
                                {
                                    health -= 2;
                                }
                                else if (player4.room == "poolroom" && room == "deepwater")
                                {
                                    health -= 6;
                                }
                                else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                                {
                                    health -= 6;
                                }
                                else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                                {
                                    health -= 15;
                                }
                                else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                                {
                                    health -= 15;
                                }
                                if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                                {
                                    health -= 15;
                                }
                                else
                                {
                                    health -= 0;
                                }
                            }
                            if (hit2 != null)
                            {
                                if (player3.room == player4.room)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 15;
                                }
                                else if (player3.room == "room1" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player3.room == "room2" && player4.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room1" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "room2" && player3.room == "janitorcloset")
                                {
                                    player3.health -= 2;
                                }
                                else if (player4.room == "poolroom" && player3.room == "deepwater")
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                                {
                                    player3.health -= 6;
                                }
                                else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                                {
                                    player3.health -= 15;
                                }
                                else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                                {
                                    player3.health -= 15;
                                }
                                else
                                {
                                    player3.health -= 0;
                                }
                            }
                        }
                        if (mode == "coop" || mode == "class")
                        {
                            float? hit = pellet.ray.Intersects(playersphere);
                            if (hit != null)
                            {
                                health -= 15;
                                if (!dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit2 = pellet.ray.Intersects(playersphere3);
                            if (hit2 != null)
                            {
                                player3.health -= 15;
                                if (!player3.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit2.Value * pellet.ray.Direction);
                                }
                            }
                            float? hit3 = pellet.ray.Intersects(playersphere2);
                            if (hit3 != null)
                            {
                                player2.health -= 15;
                                if (!player2.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit3.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        if (player4.firing)
                        {
                            float? hit = pellet.ray.Intersects(botsphere);
                            if (hit != null)
                            {
                                enemy.health -= 15;
                                if (!enemy.dead)
                                {
                                    pellet.goreposition = player4.Position + (hit.Value * pellet.ray.Direction);
                                }
                            }
                        }
                    }
                    foreach (target melon in watermelons)
                    {
                        BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                        if (player4.firing)
                        {
                            float? melonhit = pellet.ray.Intersects(melonsphere);
                            if (melonhit != null)
                            {
                                melon.destroyed = true;
                            }
                        }
                    }
                }
            }
            if (player4.weapon == "python")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 40;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 15;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            else
                            {
                                health -= 0;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 15;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p4damage += 40;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 40;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 40;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 40;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "m14")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation);
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation);
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook);
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 50;
                            if (!Gorilla.dead)
                            {
                                p4damage += 50;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 50;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 50;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 50;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 50;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 50;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 50;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 50;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 45;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 22;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 22;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 50;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 50;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 50;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 50;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 50;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 50;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 50;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 45;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 22;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 50;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 50;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 50;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 50;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 50;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 50;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 50;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 50;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 50;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 50;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "m21")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation);
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation);
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook);
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 80;
                            if (!Gorilla.dead)
                            {
                                p4damage += 80;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 80;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 80;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 60;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 30;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 30;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 80;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 80;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 80;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 80;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 80;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 60;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 80;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 80;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 80;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 80;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 80;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 80;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 80;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "svd")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation);
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation);
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook);
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 100;
                            if (!Gorilla.dead)
                            {
                                p4damage += 100;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 100;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 100;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 70;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 35;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 35;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 35;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 35;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 100;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 100;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 100;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 100;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 100;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 70;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 35;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 100;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 100;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 100;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 100;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 100;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 100;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "cz550")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation);
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation);
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook);
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 350;
                            if (!Gorilla.dead)
                            {
                                p4damage += 350;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 350;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 350;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 350;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 350;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 350;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 350;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 350;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 200;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 99;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 99;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 99;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 99;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 350;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 350;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 350;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 350;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 350;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 350;
                            }
                            else
                            {
                                health -= 10;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 350;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 200;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 99;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 350;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 350;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 350;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 350;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 350;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 350;
                            }
                            else
                            {
                                player3.health -= 10;
                            }
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 350;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 350;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 350;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    foreach (bot enemy in bots)
                    {
                        BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                        float? bothit = BulletRay.Intersects(botsphere);
                        if (bothit != null)
                        {
                            enemy.health -= 350;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (bothit.Value * fireDirection4);
                            }
                        }
                    }

                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "mp5k")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 4;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 4;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 4;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 4;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 4;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p4damage += 10;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "mp40")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(5))) + MathHelper.ToRadians(2.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 18;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 18;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 8;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 8;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 8;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 18;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 18;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 18;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 18;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 18;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 8;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 8;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 8;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 18;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 18;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 18;
                            if (!Gorilla.dead)
                            {
                                p4damage += 18;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 18;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 18;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 18;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 18;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "volcanic")
            {
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3))) + MathHelper.ToRadians(1.0f));
                }
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(3) / 2)) + MathHelper.ToRadians(0.5f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 10;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 10;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 2;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 10;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 10;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 10;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 10;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 10;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 2;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 10;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 10;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 10;
                            if (!Gorilla.dead)
                            {
                                p4damage += 10;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 10;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        if (hit2 != null)
                        {
                            player3.health -= 10;
                            if (!player3.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere2);
                        if (hit3 != null)
                        {
                            player2.health -= 10;
                            if (!player2.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 10;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }
            if (player4.weapon == "AK47")
            {
                if (player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(2))) + MathHelper.ToRadians(1.0f));
                }
                if (!player4.ads)
                {
                    fireDirection4.X = -(float)Math.Sin(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Z = -(float)Math.Cos(player4.Rotation - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                    fireDirection4.Y = (float)Math.Sin(player4.freeLook - (MathHelper.ToRadians(random.Next(4))) + MathHelper.ToRadians(2.0f));
                }
                Ray BulletRay = new Ray(player4.Position, fireDirection4);
                if (player4.firing)
                {
                    float? melonhit = BulletRay.Intersects(watermelonsphere);
                    if (melonhit != null)
                    {
                        watermelondestroyed = true;
                    }
                    foreach (gorilla Gorilla in gorillas)
                    {
                        BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                        float? hit = BulletRay.Intersects(gorillasphere);
                        if (hit != null)
                        {
                            Gorilla.health -= 40;
                            if (!Gorilla.dead)
                            {
                                p4damage += 40;
                            }
                            Gorilla.rotation = (player4.Rotation + MathHelper.Pi);
                        }
                    }
                    if (mode == "coop" || mode == "class")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        if (hit != null)
                        {
                            health -= 40;
                            if (!dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                        float? hit2 = BulletRay.Intersects(playersphere2);
                        if (hit2 != null)
                        {
                            player2.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit2.Value * BulletRay.Direction);
                            }
                        }
                        float? hit3 = BulletRay.Intersects(playersphere3);
                        if (hit3 != null)
                        {
                            player3.health -= 40;
                            if (!player4.dead)
                            {
                                gorePosition4 = player4.Position + (hit3.Value * BulletRay.Direction);
                            }
                        }
                    }
                    if (mode == "tdm4")
                    {
                        float? hit = BulletRay.Intersects(playersphere);
                        float? hit2 = BulletRay.Intersects(playersphere3);
                        float? entrancehit1 = BulletRay.Intersects(room1sphere);
                        float? entrancehit2 = BulletRay.Intersects(room2sphere);
                        if (hit != null)
                        {
                            if (room == player4.room)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            else if (room == "janitorcloset" && player4.room == "poolroom")
                            {
                                health -= 40;
                            }
                            else if (room == "poolroom" && player4.room == "janitorcloset")
                            {
                                health -= 40;
                            }
                            else if (room == "room1" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (room == "room2" && player4.room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room1" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "room2" && room == "janitorcloset")
                            {
                                health -= 30;
                            }
                            else if (player4.room == "poolroom" && room == "deepwater")
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "deepwater" && playerPosition.Y < 4)
                            {
                                health -= 2;
                            }
                            else if (room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                health -= 15;
                            }
                            else if (room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                health -= 15;
                            }
                            else if (room == "hallway1" && player4.room == "hallway2" && playerPosition.X >= 127 && player4.Position.X >= 125)
                            {
                                health -= 40;
                            }
                            else if (player4.room == "hallway1" && room == "hallway2" && playerPosition.X >= 125 && player4.Position.X >= 127)
                            {
                                health -= 40;
                            }
                            if (room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (player4.room == "hallway1" && room == "room1" && entrancehit1 != null)
                            {
                                health -= 40;
                            }
                            if (room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                            if (player4.room == "hallway2" && room == "room2" && entrancehit2 != null)
                            {
                                health -= 40;
                            }
                            else
                            {
                                health -= 0;
                            }
                        }
                        if (hit2 != null)
                        {
                            if (player3.room == player4.room)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X < 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X < 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "janitorcloset" && player4.room == "poolroom")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "poolroom" && player4.room == "janitorcloset")
                            {
                                player3.health -= 40;
                            }
                            else if (player3.room == "room1" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player3.room == "room2" && player4.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room1" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "room2" && player3.room == "janitorcloset")
                            {
                                player3.health -= 30;
                            }
                            else if (player4.room == "poolroom" && player3.room == "deepwater")
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "deepwater" && player3.Position.Y < 4)
                            {
                                player3.health -= 2;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway2" && player4.Position.X >= 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "poolroom" && player4.room == "hallway1" && player4.Position.X >= 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway2" && player4.room == "poolroom" && player4.Position.X < 125)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "poolroom" && player4.Position.X < 127)
                            {
                                player3.health -= 15;
                            }
                            else if (player3.room == "hallway1" && player4.room == "hallway2" && player3.Position.X >= 127 && player4.Position.X >= 125)
                            {
                                player3.health -= 40;
                            }
                            else if (player4.room == "hallway1" && player3.room == "hallway2" && player3.Position.X >= 125 && player4.Position.X >= 127)
                            {
                                player3.health -= 40;
                            }
                            if (player3.room == "hallway1" && player4.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player4.room == "hallway1" && player3.room == "room1" && entrancehit1 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player3.room == "hallway2" && player4.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                            if (player4.room == "hallway2" && player3.room == "room2" && entrancehit2 != null)
                            {
                                player3.health -= 40;
                            }
                            else
                            {
                                player3.health -= 0;
                            }
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 5.0f);
                    if (player4.firing)
                    {
                        float? hit = BulletRay.Intersects(botsphere);
                        if (hit != null)
                        {
                            enemy.health -= 40;
                            if (!enemy.dead)
                            {
                                gorePosition4 = player4.Position + (hit.Value * BulletRay.Direction);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    BoundingSphere melonsphere = new BoundingSphere(melon.position, watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                    if (player4.firing)
                    {
                        float? melonhit = BulletRay.Intersects(melonsphere);
                        if (melonhit != null)
                        {
                            melon.destroyed = true;
                        }
                    }
                }
            }

            if ((ads && weapon == "R700Sniper") || (ads && weapon == "m21") || (ads && weapon == "svd"))
            {
                fov = 10;
            }
            else
            {
                fov = 45;
            }
            if ((player2.ads && player2.weapon == "R700Sniper") || (player2.ads && player2.weapon == "m21") || (player2.ads && player2.weapon == "svd"))
            {
                player2.fov = 10;
            }
            else
            {
                player2.fov = 45;
            }
            if ((player3.ads && player3.weapon == "R700Sniper") || (player3.ads && player3.weapon == "m21") || (player3.ads && player3.weapon == "svd"))
            {
                player3.fov = 10;
            }
            else
            {
                player3.fov = 45;
            }
            if ((player4.ads && player4.weapon == "R700Sniper") || (player4.ads && player4.weapon == "m21") || (player4.ads && player4.weapon == "svd"))
            {
                player4.fov = 10;
            }
            else
            {
                player4.fov = 45;
            }
            if (mode == "juggernaut4")
            {
                Input2();
                Input3();
                Input4();
                if (playerPosition.Z < -4800)
                {
                    playerPosition.Z = -4800;
                }
                if (playerPosition.Z > 4800)
                {
                    playerPosition.Z = 4800;
                }
                if (playerPosition.X < -5100)
                {
                    playerPosition.X = -5100;
                }
                if (playerPosition.X > 4600)
                {
                    playerPosition.X = 4600;
                }
                if (player2.Position.Z < -4800)
                {
                    player2.Position.Z = -4800;
                }
                if (player2.Position.Z > 4800)
                {
                    player2.Position.Z = 4800;
                }
                if (player2.Position.X < -5100)
                {
                    player2.Position.X = -5100;
                }
                if (player2.Position.X > 4600)
                {
                    player2.Position.X = 4600;
                }
                if (player3.Position.Z < -4800)
                {
                    player3.Position.Z = -4800;
                }
                if (player3.Position.Z > 4800)
                {
                    player3.Position.Z = 4800;
                }
                if (player3.Position.X < -5100)
                {
                    player3.Position.X = -5100;
                }
                if (player3.Position.X > 4600)
                {
                    player3.Position.X = 4600;
                }
                if (player4.Position.Z < -4800)
                {
                    player4.Position.Z = -4800;
                }
                if (player4.Position.Z > 4800)
                {
                    player4.Position.Z = 4800;
                }
                if (player4.Position.X < -5100)
                {
                    player4.Position.X = -5100;
                }
                if (player4.Position.X > 4600)
                {
                    player4.Position.X = 4600;
                }
                playerPosition.Y += jumpspeed;
                player2.Position.Y += player2.jumpspeed;
                player3.Position.Y += player3.jumpspeed;
                player4.Position.Y += player4.jumpspeed;
                if (playerPosition.Y > (oldY + 30))
                {
                    jumpspeed = -2.0f;
                }
                if (playerPosition.Y < oldY)
                {
                    playerPosition.Y = oldY;
                    canjump = true;
                }
                if (player2.Position.Y > (player2.oldY + 30))
                {
                    player2.jumpspeed = -2.0f;
                }
                if (player2.Position.Y < player2.oldY)
                {
                    player2.Position.Y = player2.oldY;
                    player2.canjump = true;
                }
                if (player3.Position.Y > (player3.oldY + 30))
                {
                    player3.jumpspeed = -2.0f;
                }
                if (player3.Position.Y < player3.oldY)
                {
                    player3.Position.Y = player3.oldY;
                    player3.canjump = true;
                }
                if (player4.Position.Y > (player4.oldY + 30))
                {
                    player4.jumpspeed = -2.0f;
                }
                if (player4.Position.Y < player4.oldY)
                {
                    player4.Position.Y = player4.oldY;
                    player4.canjump = true;
                }
                BoundingSphere magnumsphere = new BoundingSphere(new Vector3(-150.0f, playerPosition.Y, -200.0f), anaconda_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere r700sphere = new BoundingSphere(new Vector3(150.0f, playerPosition.Y, 100.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m4sphere = new BoundingSphere(new Vector3(1000.0f, playerPosition.Y, -1500.0f), m4sopmod_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aksphere = new BoundingSphere(new Vector3(-750.0f, playerPosition.Y, -2000.0f), ak47_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere mp5sphere = new BoundingSphere(new Vector3(3250.0f, playerPosition.Y, 1776.0f), mp5k_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere pythonsphere = new BoundingSphere(new Vector3(-4650.0f, playerPosition.Y, 270.0f), python_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere medicsphere = new BoundingSphere(new Vector3(2500.0f, playerPosition.Y, 3000.0f), medpack_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m14sphere = new BoundingSphere(new Vector3(1945.0f, playerPosition.Y, 200.0f), m14_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere Remingtonsphere = new BoundingSphere(new Vector3(-2000.0f, playerPosition.Y, 1000.0f), Rem870_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere uzisphere = new BoundingSphere(new Vector3(300.0f, playerPosition.Y, -100.0f), uzi_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m21sphere = new BoundingSphere(new Vector3(0.0f, playerPosition.Y, -2800.0f), m21_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere SPASsphere = new BoundingSphere(new Vector3(-300.0f, playerPosition.Y, 0.0f), SPAS_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aa12sphere = new BoundingSphere(new Vector3(800.0f, playerPosition.Y, 3000.0f), aa12_world.Meshes[0].BoundingSphere.Radius * 4);
                watermelonsphere = new BoundingSphere(new Vector3(10.0f, -45.0f, 0.0f), watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                BoundingSphere snipersphere = new BoundingSphere(new Vector3(-200.0f, playerPosition.Y, 200.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m249sphere = new BoundingSphere(new Vector3(-3500.0f, playerPosition.Y, 2008.0f), m249_world.Meshes[0].BoundingSphere.Radius * 4);
                if (playersphere.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "anaconda")
                {
                    weapon = "anaconda";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere.Intersects(pythonsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "python")
                {
                    weapon = "python";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere.Intersects(m21sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "m21")
                {
                    weapon = "m21";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 11;
                }
                if (playersphere.Intersects(m249sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "M249")
                {
                    weapon = "M249";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 101;
                }
                if (playersphere.Intersects(mp5sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "mp5k")
                {
                    weapon = "mp5k";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                if (playersphere.Intersects(m14sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "m14")
                {
                    weapon = "m14";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 21;
                }
                if (playersphere.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700")
                {
                    weapon = "R700";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(medicsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "medic")
                {
                    weapon = "medic";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 2;
                }
                if (playersphere.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700Sniper")
                {
                    weapon = "R700Sniper";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(SPASsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "SPAS12")
                {
                    weapon = "SPAS12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 9;
                }
                if (playersphere.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "aa12")
                {
                    weapon = "aa12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "uzi")
                {
                    weapon = "uzi";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(m4sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "M4SOPMOD")
                {
                    weapon = "M4SOPMOD";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                if (playersphere.Intersects(aksphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "AK47")
                {
                    weapon = "AK47";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                if (playersphere.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R870")
                {
                    weapon = "R870";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 9;
                }
                if (playersphere2.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "anaconda")
                {
                    player2.weapon = "anaconda";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 7;
                }
                if (playersphere2.Intersects(pythonsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "python")
                {
                    player2.weapon = "python";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 7;
                }
                if (playersphere2.Intersects(mp5sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "mp5k")
                {
                    player2.weapon = "mp5k";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 31;
                }
                if (playersphere2.Intersects(m21sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "m21")
                {
                    player2.weapon = "m21";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 11;
                }
                if (playersphere2.Intersects(m249sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "M249")
                {
                    player2.weapon = "M249";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 101;
                }
                if (playersphere2.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R700")
                {
                    player2.weapon = "R700";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(m14sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "m14")
                {
                    player2.weapon = "m14";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 21;
                }
                if (playersphere2.Intersects(medicsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "medic")
                {
                    player2.weapon = "medic";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 2;
                }
                if (playersphere2.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R700Sniper")
                {
                    player2.weapon = "R700Sniper";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "aa12")
                {
                    player2.weapon = "aa12";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 33;
                }
                if (playersphere2.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "uzi")
                {
                    player2.weapon = "uzi";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 33;
                }
                if (playersphere2.Intersects(m4sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "M4SOPMOD")
                {
                    player2.weapon = "M4SOPMOD";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 31;
                }
                if (playersphere2.Intersects(aksphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "AK47")
                {
                    player2.weapon = "AK47";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 31;
                }
                if (playersphere2.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R870")
                {
                    player2.weapon = "R870";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 9;
                }
                if (playersphere3.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "anaconda")
                {
                    player3.weapon = "anaconda";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 7;
                }
                if (playersphere3.Intersects(pythonsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "python")
                {
                    player3.weapon = "python";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 7;
                }
                if (playersphere3.Intersects(mp5sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "mp5k")
                {
                    player3.weapon = "mp5k";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 31;
                }
                if (playersphere3.Intersects(m21sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "m21")
                {
                    player3.weapon = "m21";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 11;
                }
                if (playersphere3.Intersects(m249sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "M249")
                {
                    player3.weapon = "M249";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 101;
                }
                if (playersphere3.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "R700")
                {
                    player3.weapon = "R700";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 6;
                }
                if (playersphere3.Intersects(m14sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "m14")
                {
                    player3.weapon = "m14";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 21;
                }
                if (playersphere3.Intersects(medicsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "medic")
                {
                    player3.weapon = "medic";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 2;
                }
                if (playersphere3.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "R700Sniper")
                {
                    player3.weapon = "R700Sniper";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 6;
                }
                if (playersphere3.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "aa12")
                {
                    player3.weapon = "aa12";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 33;
                }
                if (playersphere3.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "uzi")
                {
                    player3.weapon = "uzi";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 33;
                }
                if (playersphere3.Intersects(m4sphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "M4SOPMOD")
                {
                    player3.weapon = "M4SOPMOD";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 31;
                }
                if (playersphere3.Intersects(aksphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "AK47")
                {
                    player3.weapon = "AK47";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 31;
                }
                if (playersphere3.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "R870")
                {
                    player3.weapon = "R870";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 9;
                }
                if (playersphere4.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "anaconda")
                {
                    player4.weapon = "anaconda";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 7;
                }
                if (playersphere4.Intersects(pythonsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "python")
                {
                    player4.weapon = "python";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 7;
                }
                if (playersphere4.Intersects(mp5sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "mp5k")
                {
                    player4.weapon = "mp5k";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 31;
                }
                if (playersphere4.Intersects(m21sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "m21")
                {
                    player4.weapon = "m21";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 11;
                }
                if (playersphere4.Intersects(m249sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "M249")
                {
                    player4.weapon = "M249";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 101;
                }
                if (playersphere4.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "R700")
                {
                    player4.weapon = "R700";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 6;
                }
                if (playersphere4.Intersects(m14sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "m14")
                {
                    player4.weapon = "m14";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 21;
                }
                if (playersphere4.Intersects(medicsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "medic")
                {
                    player4.weapon = "medic";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 2;
                }
                if (playersphere4.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "R700Sniper")
                {
                    player4.weapon = "R700Sniper";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 6;
                }
                if (playersphere4.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "aa12")
                {
                    player4.weapon = "aa12";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 33;
                }
                if (playersphere4.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "uzi")
                {
                    player4.weapon = "uzi";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 33;
                }
                if (playersphere4.Intersects(m4sphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "M4SOPMOD")
                {
                    player4.weapon = "M4SOPMOD";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 31;
                }
                if (playersphere4.Intersects(aksphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "AK47")
                {
                    player4.weapon = "AK47";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 31;
                }
                if (playersphere4.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "R870")
                {
                    player4.weapon = "R870";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 9;
                }
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if (Gorilla.health <= 0)
                        {
                            Gorilla.dead = true;
                        }
                        if (Gorilla.position.Z < -4100)
                        {
                            Gorilla.position.Z = -4100;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        if (Gorilla.position.Z > 5100)
                        {
                            Gorilla.position.Z = 5100;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        if (Gorilla.position.X < -4100)
                        {
                            Gorilla.position.X = -4100;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        if (Gorilla.position.X > 4900)
                        {
                            Gorilla.position.X = 4900;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        Gorilla.attentionrayleft = new Ray(Gorilla.position, new Vector3(-(float)Math.Sin(Gorilla.rotation + MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(Gorilla.rotation + MathHelper.ToRadians(5))));
                        Gorilla.attentionraycenter = new Ray(Gorilla.position, new Vector3(-(float)Math.Sin(Gorilla.rotation), 0.0f, -(float)Math.Cos(Gorilla.rotation)));
                        Gorilla.attentionrayright = new Ray(Gorilla.position, new Vector3(-(float)Math.Sin(Gorilla.rotation - MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(Gorilla.rotation - MathHelper.ToRadians(5))));
                        Gorilla.position += new Vector3(-(float)Math.Sin(Gorilla.rotation), 0.0f, -(float)Math.Cos(Gorilla.rotation)) * 24f;
                        float? p1detectedleft = Gorilla.attentionrayleft.Intersects(playersphere);
                        float? p1detected = Gorilla.attentionraycenter.Intersects(playersphere);
                        float? p1detectedright = Gorilla.attentionrayright.Intersects(playersphere);
                        if (!dead)
                        {
                            if (p1detectedleft != null)
                            {
                                Gorilla.rotation += 0.04f;
                            }
                            if (p1detected != null && p1detected < 300)
                            {
                                Gorilla.alertp1 = true;
                            }
                            if (p1detectedright != null)
                            {
                                Gorilla.rotation -= 0.04f;
                            }
                        }
                        if (p1detected == null)
                        {
                            Gorilla.alertp1 = false;
                        }
                        if (Gorilla.alertp1)
                        {
                            if (!dead)
                            {
                                if (Gorilla.clip > 0)
                                {
                                    if (Gorilla.firepause == 0)
                                    {
                                        Gorilla.firing = true;
                                    }
                                    if (Gorilla.firepause > 0)
                                    {
                                        Gorilla.firing = false;
                                    }
                                    if (!Gorilla.firing)
                                    {
                                        if (Gorilla.firepause >= 170)
                                        {
                                            Gorilla.firepause = 0;
                                        }
                                        Gorilla.firepause += 1;
                                    }
                                    if (Gorilla.firing)
                                    {
                                        Gorilla.clip -= 1;
                                        health -= 50;
                                    }
                                }
                            }
                        }
                        float? p2detectedleft = Gorilla.attentionrayleft.Intersects(playersphere2);
                        float? p2detected = Gorilla.attentionraycenter.Intersects(playersphere2);
                        float? p2detectedright = Gorilla.attentionrayright.Intersects(playersphere2);
                        if (!player2.dead)
                        {
                            if (p2detectedleft != null)
                            {
                                Gorilla.rotation += 0.04f;
                            }
                            if (p2detected != null && p2detected < 300)
                            {
                                Gorilla.alertp2 = true;
                            }
                            if (p2detectedright != null)
                            {
                                Gorilla.rotation -= 0.04f;
                            }
                        }
                        if (p2detected == null)
                        {
                            Gorilla.alertp2 = false;
                        }
                        if (Gorilla.alertp2)
                        {
                            if (!player2.dead)
                            {
                                if (Gorilla.clip > 0)
                                {
                                    if (Gorilla.firepause == 0)
                                    {
                                        Gorilla.firing = true;
                                    }
                                    if (Gorilla.firepause > 0)
                                    {
                                        Gorilla.firing = false;
                                    }
                                    if (!Gorilla.firing)
                                    {
                                        if (Gorilla.firepause >= 170)
                                        {
                                            Gorilla.firepause = 0;
                                        }
                                        Gorilla.firepause += 1;
                                    }
                                    if (Gorilla.firing)
                                    {
                                        Gorilla.clip -= 1;
                                        player2.health -= 50;
                                    }
                                }
                            }
                        }
                        float? p3detectedleft = Gorilla.attentionrayleft.Intersects(playersphere3);
                        float? p3detected = Gorilla.attentionraycenter.Intersects(playersphere3);
                        float? p3detectedright = Gorilla.attentionrayright.Intersects(playersphere3);
                        if (!player3.dead)
                        {
                            if (p3detectedleft != null)
                            {
                                Gorilla.rotation += 0.04f;
                            }
                            if (p3detected != null && p3detected < 300)
                            {
                                Gorilla.alertp3 = true;
                            }
                            if (p3detectedright != null)
                            {
                                Gorilla.rotation -= 0.04f;
                            }
                        }
                        if (p3detected == null)
                        {
                            Gorilla.alertp3 = false;
                        }
                        if (Gorilla.alertp3)
                        {
                            if (!player3.dead)
                            {
                                if (Gorilla.clip > 0)
                                {
                                    if (Gorilla.firepause == 0)
                                    {
                                        Gorilla.firing = true;
                                    }
                                    if (Gorilla.firepause > 0)
                                    {
                                        Gorilla.firing = false;
                                    }
                                    if (!Gorilla.firing)
                                    {
                                        if (Gorilla.firepause >= 170)
                                        {
                                            Gorilla.firepause = 0;
                                        }
                                        Gorilla.firepause += 1;
                                    }
                                    if (Gorilla.firing)
                                    {
                                        Gorilla.clip -= 1;
                                        player3.health -= 50;
                                    }
                                }
                            }
                        }
                        float? p4detectedleft = Gorilla.attentionrayleft.Intersects(playersphere4);
                        float? p4detected = Gorilla.attentionraycenter.Intersects(playersphere4);
                        float? p4detectedright = Gorilla.attentionrayright.Intersects(playersphere4);
                        if (!player4.dead)
                        {
                            if (p4detectedleft != null)
                            {
                                Gorilla.rotation += 0.04f;
                            }
                            if (p4detected != null && p4detected < 300)
                            {
                                Gorilla.alertp4 = true;
                            }
                            if (p4detectedright != null)
                            {
                                Gorilla.rotation -= 0.04f;
                            }
                        }
                        if (p4detected == null)
                        {
                            Gorilla.alertp4 = false;
                        }
                        if (Gorilla.alertp4)
                        {
                            if (!player4.dead)
                            {
                                if (Gorilla.clip > 0)
                                {
                                    if (Gorilla.firepause == 0)
                                    {
                                        Gorilla.firing = true;
                                    }
                                    if (Gorilla.firepause > 0)
                                    {
                                        Gorilla.firing = false;
                                    }
                                    if (!Gorilla.firing)
                                    {
                                        if (Gorilla.firepause >= 170)
                                        {
                                            Gorilla.firepause = 0;
                                        }
                                        Gorilla.firepause += 1;
                                    }
                                    if (Gorilla.firing)
                                    {
                                        Gorilla.clip -= 1;
                                        player4.health -= 50;
                                    }
                                }
                            }
                        }

                        if (Gorilla.clip <= 0)
                        {
                            Gorilla.reloadTimeNum += 1;
                            Gorilla.firing = false;
                            if (Gorilla.reloadTimeNum >= 100)
                            {
                                Gorilla.clip = 1;
                                Gorilla.reloadTimeNum = 0;
                            }
                        }
                    }
                }
            }
            if (mode == "sp")
            {
                if (playerPosition.Z < -4800)
                {
                    playerPosition.Z = -4800;
                }
                if (playerPosition.Z > 4800)
                {
                    playerPosition.Z = 4800;
                }
                if (playerPosition.X < -5100)
                {
                    playerPosition.X = -5100;
                }
                if (playerPosition.X > 4600)
                {
                    playerPosition.X = 4600;
                }
                playerPosition.Y += jumpspeed;
                player2.Position.Y += player2.jumpspeed;
                if (playerPosition.Y > (oldY + 30))
                {
                    jumpspeed = -2.0f;
                }
                if (playerPosition.Y < oldY)
                {
                    playerPosition.Y = oldY;
                    canjump = true;
                }
                BoundingSphere magnumsphere = new BoundingSphere(new Vector3(-150.0f, playerPosition.Y, -200.0f), anaconda_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere r700sphere = new BoundingSphere(new Vector3(150.0f, playerPosition.Y, 100.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere uzisphere = new BoundingSphere(new Vector3(300.0f, playerPosition.Y, -100.0f), uzi_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere pythonsphere = new BoundingSphere(new Vector3(-4650.0f, playerPosition.Y, 270.0f), python_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aksphere = new BoundingSphere(new Vector3(-750.0f, playerPosition.Y, -2000.0f), ak47_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere SPASsphere = new BoundingSphere(new Vector3(-300.0f, playerPosition.Y, 0.0f), SPAS_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aa12sphere = new BoundingSphere(new Vector3(800.0f, playerPosition.Y, 3000.0f), aa12_world.Meshes[0].BoundingSphere.Radius * 4);
                watermelonsphere = new BoundingSphere(new Vector3(10.0f, -45.0f, 0.0f), watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                BoundingSphere snipersphere = new BoundingSphere(new Vector3(-200.0f, playerPosition.Y, 200.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                if (playersphere.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "anaconda")
                {
                    weapon = "anaconda";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700")
                {
                    weapon = "R700";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700Sniper")
                {
                    weapon = "R700Sniper";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(pythonsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "python")
                {
                    weapon = "python";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere.Intersects(SPASsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "SPAS12")
                {
                    weapon = "SPAS12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 9;
                }
                if (playersphere.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "aa12")
                {
                    weapon = "aa12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "uzi")
                {
                    weapon = "uzi";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(aksphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "AK47")
                {
                    weapon = "AK47";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                foreach (bot enemy in bots)
                {
                    if (enemy.position.Z < -3200)
                    {
                        enemy.position.Z = -3200;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (enemy.position.Z > 4200)
                    {
                        enemy.position.Z = 4200;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (enemy.position.X < -3500)
                    {
                        enemy.position.X = -3500;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (enemy.position.X > 4000)
                    {
                        enemy.position.X = 4000;
                        enemy.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    enemy.attentionrayleft = new Ray(enemy.position, new Vector3(-(float)Math.Sin(enemy.rotation + MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(enemy.rotation + MathHelper.ToRadians(5))));
                    enemy.attentionraycenter = new Ray(enemy.position, new Vector3(-(float)Math.Sin(enemy.rotation), 0.0f, -(float)Math.Cos(enemy.rotation)));
                    enemy.attentionrayright = new Ray(enemy.position, new Vector3(-(float)Math.Sin(enemy.rotation - MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(enemy.rotation - MathHelper.ToRadians(5))));
                    if (enemy.dead)
                    {
                        enemy.respawnTime += 1;
                        if (enemy.respawnTime >= 100)
                        {
                            enemy.health = 100;
                            enemy.dead = false;
                            enemy.respawnTime = 0;
                            enemy.position = new Vector3(random.Next(500) - 250, -5, random.Next(500) - 250);
                        }
                    }
                    if (!enemy.dead)
                    {
                        if (enemy.health <= 0)
                        {
                            enemy.dead = true;
                        }
                        foreach (bot ally in goodbots)
                        {
                            BoundingSphere botsphere = new BoundingSphere(ally.position, soldier.Meshes[0].BoundingSphere.Radius * 3);
                            float? botdetectedleft = enemy.attentionrayleft.Intersects(botsphere);
                            float? botdetected = enemy.attentionraycenter.Intersects(botsphere);
                            float? botdetectedright = enemy.attentionrayright.Intersects(botsphere);
                            if (!ally.dead)
                            {
                                if (botdetectedleft != null)
                                {
                                    enemy.rotation += 0.04f;
                                }
                                if (botdetected != null)
                                {
                                    enemy.alertp2 = true;
                                }
                                if (botdetectedright != null)
                                {
                                    enemy.rotation -= 0.04f;
                                }
                            }
                            if (botdetected == null)
                            {
                                enemy.alertp2 = false;
                            }
                            if (!enemy.alertp2)
                            {
                                enemy.firing = false;
                            }
                            if (enemy.alertp2)
                            {
                                if (!ally.dead)
                                {
                                    if (enemy.clip > 0)
                                    {
                                        if (enemy.firepause == 0)
                                        {
                                            enemy.firing = true;
                                        }
                                        if (enemy.firepause > 0)
                                        {
                                            enemy.firing = false;
                                        }
                                        if (!enemy.firing)
                                        {
                                            if (enemy.firepause >= 170)
                                            {
                                                enemy.firepause = 0;
                                            }
                                            enemy.firepause += 1;
                                        }
                                        if (enemy.firing)
                                        {
                                            int hitnum = random.Next(7);
                                            gunsoundbank.PlayCue("M9Fire");
                                            enemy.clip -= 1;
                                            if (hitnum == 1)
                                            {
                                                ally.health -= 10;
                                                if (ally.health <= 0 && ally.dead == false)
                                                {
                                                    botkills += 1;
                                                }
                                            }
                                        }
                                    }
                                    if (enemy.clip < 0)
                                    {
                                        gunsoundbank.PlayCue("uzi_reload");
                                    }
                                }
                            }
                            if (enemy.clip <= 0)
                            {
                                enemy.reloadTimeNum += 1;
                                enemy.firing = false;
                                if (enemy.reloadTimeNum >= 150)
                                {
                                    enemy.clip = 30;
                                    enemy.reloadTimeNum = 0;
                                }
                            }
                        }
                        if (enemy.health <= 0)
                        {
                            enemy.dead = true;
                        }
                        if (!enemy.firing)
                        {
                            enemy.position += new Vector3(-(float)Math.Sin(enemy.rotation), 0.0f, -(float)Math.Cos(enemy.rotation)) * 3;
                        }
                        float? p1detectedleft = enemy.attentionrayleft.Intersects(playersphere);
                        float? p1detected = enemy.attentionraycenter.Intersects(playersphere);
                        float? p1detectedright = enemy.attentionrayright.Intersects(playersphere);
                        if (!dead)
                        {
                            if (p1detectedleft != null)
                            {
                                enemy.rotation += 0.04f;
                            }
                            if (p1detected != null)
                            {
                                enemy.alertp1 = true;
                            }
                            if (p1detectedright != null)
                            {
                                enemy.rotation -= 0.04f;
                            }
                        }
                        if (p1detected == null)
                        {
                            enemy.alertp1 = false;
                        }
                        if (!enemy.alertp1)
                        {
                            enemy.firing = false;
                        }
                        if (enemy.alertp1)
                        {
                            if (!dead)
                            {
                                if (enemy.clip > 0)
                                {
                                    if (enemy.firepause == 0)
                                    {
                                        enemy.firing = true;
                                    }
                                    if (enemy.firepause > 0)
                                    {
                                        enemy.firing = false;
                                    }
                                    if (!enemy.firing)
                                    {
                                        if (enemy.firepause >= 170)
                                        {
                                            enemy.firepause = 0;
                                        }
                                        enemy.firepause += 1;
                                    }
                                    if (enemy.firing)
                                    {
                                        int hitnum = random.Next(7);
                                        gunsoundbank.PlayCue("M9Fire");
                                        enemy.clip -= 1;
                                        if (hitnum == 1)
                                        {
                                            health -= 10;
                                            if (health <= 0 && dead == false)
                                            {
                                                botkills += 1;
                                            }
                                        }
                                    }
                                }
                                if (enemy.clip < 0)
                                {
                                    gunsoundbank.PlayCue("uzi_reload");
                                }
                            }
                        }
                        if (enemy.clip <= 0)
                        {
                            enemy.reloadTimeNum += 1;
                            enemy.firing = false;
                            if (enemy.reloadTimeNum >= 150)
                            {
                                enemy.clip = 30;
                                enemy.reloadTimeNum = 0;
                            }
                        }
                    }
                }
                foreach (bot ally in goodbots)
                {
                    if (ally.position.Z < -3200)
                    {
                        ally.position.Z = -3200;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (ally.position.Z > 4200)
                    {
                        ally.position.Z = 4200;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (ally.position.X < -3500)
                    {
                        ally.position.X = -3500;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (ally.position.X > 4000)
                    {
                        ally.position.X = 4000;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    ally.attentionrayleft = new Ray(ally.position, new Vector3(-(float)Math.Sin(ally.rotation + MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(ally.rotation + MathHelper.ToRadians(5))));
                    ally.attentionraycenter = new Ray(ally.position, new Vector3(-(float)Math.Sin(ally.rotation), 0.0f, -(float)Math.Cos(ally.rotation)));
                    ally.attentionrayright = new Ray(ally.position, new Vector3(-(float)Math.Sin(ally.rotation - MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(ally.rotation - MathHelper.ToRadians(5))));
                    if (ally.dead)
                    {
                        ally.respawnTime += 1;
                        if (ally.respawnTime >= 100)
                        {
                            ally.health = 100;
                            ally.dead = false;
                            ally.respawnTime = 0;
                            ally.position = new Vector3(random.Next(500) - 250, -5, random.Next(500) - 250);
                        }
                    }
                    if (!ally.dead)
                    {
                        if (ally.health <= 0)
                        {
                            ally.dead = true;
                        }
                        foreach (bot enemy in bots)
                        {
                            if (!ally.firing)
                            {
                                ally.position += new Vector3(-(float)Math.Sin(ally.rotation), 0.0f, -(float)Math.Cos(ally.rotation)) * 1.5f;
                            }
                            BoundingSphere botsphere = new BoundingSphere(enemy.position, soldier.Meshes[0].BoundingSphere.Radius * 3);
                            float? botdetectedleft = ally.attentionrayleft.Intersects(botsphere);
                            float? botdetected = ally.attentionraycenter.Intersects(botsphere);
                            float? botdetectedright = ally.attentionrayright.Intersects(botsphere);
                            if (!enemy.dead)
                            {
                                if (botdetectedleft != null)
                                {
                                    ally.rotation += 0.04f;
                                }
                                if (botdetected != null)
                                {
                                    ally.alertp1 = true;
                                }
                                if (botdetectedright != null)
                                {
                                    ally.rotation -= 0.04f;
                                }
                            }
                            if (botdetected == null)
                            {
                                ally.alertp1 = false;
                            }
                            if (!ally.alertp1)
                            {
                                ally.firing = false;
                            }
                            if (ally.alertp1)
                            {
                                if (!enemy.dead)
                                {
                                    if (ally.clip > 0)
                                    {
                                        if (ally.firepause == 0)
                                        {
                                            ally.firing = true;
                                        }
                                        if (ally.firepause > 0)
                                        {
                                            ally.firing = false;
                                        }
                                        if (!ally.firing)
                                        {
                                            if (ally.firepause >= 170)
                                            {
                                                ally.firepause = 0;
                                            }
                                            ally.firepause += 1;
                                        }
                                        if (ally.firing)
                                        {
                                            int hitnum = random.Next(7);
                                            ally.clip -= 1;
                                            if (hitnum == 1)
                                            {
                                                enemy.health -= 9;
                                                if (enemy.health <= 0 && enemy.dead == false)
                                                {
                                                    teamkills += 1;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if (ally.clip <= 0)
                            {
                                ally.reloadTimeNum += 1;
                                ally.firing = false;
                                if (ally.reloadTimeNum >= 150)
                                {
                                    ally.clip = 50;
                                    ally.reloadTimeNum = 0;
                                }
                            }
                        }
                    }
                }
            }
            if (health <= 0)
            {
                dead = true;
            }
            if (player2.health <= 0)
            {
                player2.dead = true;
            }
            if (player3.health <= 0)
            {
                player3.dead = true;
            }
            if (player4.health <= 0)
            {
                player4.dead = true;
            }
            if (mode == "juggernaut2")
            {
                Input2();
                if (playerPosition.Z < -4800)
                {
                    playerPosition.Z = -4800;
                }
                if (playerPosition.Z > 4800)
                {
                    playerPosition.Z = 4800;
                }
                if (playerPosition.X < -5100)
                {
                    playerPosition.X = -5100;
                }
                if (playerPosition.X > 4600)
                {
                    playerPosition.X = 4600;
                }
                if (player2.Position.Z < -4800)
                {
                    player2.Position.Z = -4800;
                }
                if (player2.Position.Z > 4800)
                {
                    player2.Position.Z = 4800;
                }
                if (player2.Position.X < -5100)
                {
                    player2.Position.X = -5100;
                }
                if (player2.Position.X > 4600)
                {
                    player2.Position.X = 4600;
                }
                playerPosition.Y += jumpspeed;
                player2.Position.Y += player2.jumpspeed;
                if (playerPosition.Y > (oldY + 30))
                {
                    jumpspeed = -2.0f;
                }
                if (playerPosition.Y < oldY)
                {
                    playerPosition.Y = oldY;
                    canjump = true;
                }
                if (player2.Position.Y > (player2.oldY + 30))
                {
                    player2.jumpspeed = -2.0f;
                }
                if (player2.Position.Y < player2.oldY)
                {
                    player2.Position.Y = player2.oldY;
                    player2.canjump = true;
                }
                BoundingSphere magnumsphere = new BoundingSphere(new Vector3(-150.0f, playerPosition.Y, -200.0f), anaconda_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere r700sphere = new BoundingSphere(new Vector3(150.0f, playerPosition.Y, 100.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m4sphere = new BoundingSphere(new Vector3(1000.0f, playerPosition.Y, -1500.0f), m4sopmod_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aksphere = new BoundingSphere(new Vector3(-750.0f, playerPosition.Y, -2000.0f), ak47_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere mp5sphere = new BoundingSphere(new Vector3(3250.0f, playerPosition.Y, 1776.0f), mp5k_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere pythonsphere = new BoundingSphere(new Vector3(-4650.0f, playerPosition.Y, 270.0f), python_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere medicsphere = new BoundingSphere(new Vector3(2500.0f, playerPosition.Y, 3000.0f), medpack_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m14sphere = new BoundingSphere(new Vector3(1945.0f, playerPosition.Y, 200.0f), m14_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere Remingtonsphere = new BoundingSphere(new Vector3(-2000.0f, playerPosition.Y, 1000.0f), Rem870_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere uzisphere = new BoundingSphere(new Vector3(300.0f, playerPosition.Y, -100.0f), uzi_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m21sphere = new BoundingSphere(new Vector3(0.0f, playerPosition.Y, -2800.0f), m21_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere SPASsphere = new BoundingSphere(new Vector3(-300.0f, playerPosition.Y, 0.0f), SPAS_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aa12sphere = new BoundingSphere(new Vector3(800.0f, playerPosition.Y, 3000.0f), aa12_world.Meshes[0].BoundingSphere.Radius * 4);
                watermelonsphere = new BoundingSphere(new Vector3(10.0f, -45.0f, 0.0f), watermelon.Meshes[0].BoundingSphere.Radius * 0.5f);
                BoundingSphere snipersphere = new BoundingSphere(new Vector3(-200.0f, playerPosition.Y, 200.0f), R700_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere m249sphere = new BoundingSphere(new Vector3(-3500.0f, playerPosition.Y, 2008.0f), m249_world.Meshes[0].BoundingSphere.Radius * 4);
                if (playersphere.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "anaconda")
                {
                    weapon = "anaconda";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere.Intersects(pythonsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "python")
                {
                    weapon = "python";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere.Intersects(m21sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "m21")
                {
                    weapon = "m21";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 11;
                }
                if (playersphere.Intersects(m249sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "M249")
                {
                    weapon = "M249";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 101;
                }
                if (playersphere.Intersects(mp5sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "mp5k")
                {
                    weapon = "mp5k";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                if (playersphere.Intersects(m14sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "m14")
                {
                    weapon = "m14";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 21;
                }
                if (playersphere.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700")
                {
                    weapon = "R700";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(medicsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "medic")
                {
                    weapon = "medic";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 2;
                }
                if (playersphere.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R700Sniper")
                {
                    weapon = "R700Sniper";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 6;
                }
                if (playersphere.Intersects(SPASsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "SPAS12")
                {
                    weapon = "SPAS12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 9;
                }
                if (playersphere.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "aa12")
                {
                    weapon = "aa12";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "uzi")
                {
                    weapon = "uzi";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(m4sphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "M4SOPMOD")
                {
                    weapon = "M4SOPMOD";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                if (playersphere.Intersects(aksphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "AK47")
                {
                    weapon = "AK47";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                if (playersphere.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R870")
                {
                    weapon = "R870";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 9;
                }
                if (playersphere2.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "anaconda")
                {
                    player2.weapon = "anaconda";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 7;
                }
                if (playersphere2.Intersects(pythonsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "python")
                {
                    player2.weapon = "python";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 7;
                }
                if (playersphere2.Intersects(mp5sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "mp5k")
                {
                    player2.weapon = "mp5k";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 31;
                }
                if (playersphere2.Intersects(m21sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "m21")
                {
                    player2.weapon = "m21";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 11;
                }
                if (playersphere2.Intersects(m249sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "M249")
                {
                    player2.weapon = "M249";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 101;
                }
                if (playersphere2.Intersects(r700sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R700")
                {
                    player2.weapon = "R700";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(m14sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "m14")
                {
                    player2.weapon = "m14";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 21;
                }
                if (playersphere2.Intersects(medicsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "medic")
                {
                    player2.weapon = "medic";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 2;
                }
                if (playersphere2.Intersects(snipersphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R700Sniper")
                {
                    player2.weapon = "R700Sniper";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 6;
                }
                if (playersphere2.Intersects(aa12sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "aa12")
                {
                    player2.weapon = "aa12";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 33;
                }
                if (playersphere2.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "uzi")
                {
                    player2.weapon = "uzi";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 33;
                }
                if (playersphere2.Intersects(m4sphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "M4SOPMOD")
                {
                    player2.weapon = "M4SOPMOD";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 31;
                }
                if (playersphere2.Intersects(aksphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "AK47")
                {
                    player2.weapon = "AK47";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 31;
                }
                if (playersphere2.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R870")
                {
                    player2.weapon = "R870";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 9;
                }
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if (Gorilla.health <= 0)
                        {
                            Gorilla.dead = true;
                        }
                        if (Gorilla.position.Z < -4100)
                        {
                            Gorilla.position.Z = -4100;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        if (Gorilla.position.Z > 5100)
                        {
                            Gorilla.position.Z = 5100;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        if (Gorilla.position.X < -4100)
                        {
                            Gorilla.position.X = -4100;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        if (Gorilla.position.X > 4900)
                        {
                            Gorilla.position.X = 4900;
                            Gorilla.rotation += MathHelper.ToRadians(random.Next(150));
                        }
                        Gorilla.attentionrayleft = new Ray(Gorilla.position, new Vector3(-(float)Math.Sin(Gorilla.rotation + MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(Gorilla.rotation + MathHelper.ToRadians(5))));
                        Gorilla.attentionraycenter = new Ray(Gorilla.position, new Vector3(-(float)Math.Sin(Gorilla.rotation), 0.0f, -(float)Math.Cos(Gorilla.rotation)));
                        Gorilla.attentionrayright = new Ray(Gorilla.position, new Vector3(-(float)Math.Sin(Gorilla.rotation - MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(Gorilla.rotation - MathHelper.ToRadians(5))));
                        Gorilla.position += new Vector3(-(float)Math.Sin(Gorilla.rotation), 0.0f, -(float)Math.Cos(Gorilla.rotation)) * 24f;
                        float? p1detectedleft = Gorilla.attentionrayleft.Intersects(playersphere);
                        float? p1detected = Gorilla.attentionraycenter.Intersects(playersphere);
                        float? p1detectedright = Gorilla.attentionrayright.Intersects(playersphere);
                        if (!dead)
                        {
                            if (p1detectedleft != null)
                            {
                                Gorilla.rotation += 0.04f;
                            }
                            if (p1detected != null && p1detected < 300)
                            {
                                Gorilla.alertp1 = true;
                            }
                            if (p1detectedright != null)
                            {
                                Gorilla.rotation -= 0.04f;
                            }
                        }
                        if (p1detected == null)
                        {
                            Gorilla.alertp1 = false;
                        }
                        if (Gorilla.alertp1)
                        {
                            if (!dead)
                            {
                                if (Gorilla.clip > 0)
                                {
                                    if (Gorilla.firepause == 0)
                                    {
                                        Gorilla.firing = true;
                                    }
                                    if (Gorilla.firepause > 0)
                                    {
                                        Gorilla.firing = false;
                                    }
                                    if (!Gorilla.firing)
                                    {
                                        if (Gorilla.firepause >= 170)
                                        {
                                            Gorilla.firepause = 0;
                                        }
                                        Gorilla.firepause += 1;
                                    }
                                    if (Gorilla.firing)
                                    {
                                        Gorilla.clip -= 1;
                                        health -= 50;
                                    }
                                }
                            }
                        }
                        float? p2detectedleft = Gorilla.attentionrayleft.Intersects(playersphere2);
                        float? p2detected = Gorilla.attentionraycenter.Intersects(playersphere2);
                        float? p2detectedright = Gorilla.attentionrayright.Intersects(playersphere2);
                        if (!player2.dead)
                        {
                            if (p2detectedleft != null)
                            {
                                Gorilla.rotation += 0.04f;
                            }
                            if (p2detected != null && p2detected < 300)
                            {
                                Gorilla.alertp2 = true;
                            }
                            if (p2detectedright != null)
                            {
                                Gorilla.rotation -= 0.04f;
                            }
                        }
                        if (p2detected == null)
                        {
                            Gorilla.alertp2 = false;
                        }
                        if (Gorilla.alertp2)
                        {
                            if (!player2.dead)
                            {
                                if (Gorilla.clip > 0)
                                {
                                    if (Gorilla.firepause == 0)
                                    {
                                        Gorilla.firing = true;
                                    }
                                    if (Gorilla.firepause > 0)
                                    {
                                        Gorilla.firing = false;
                                    }
                                    if (!Gorilla.firing)
                                    {
                                        if (Gorilla.firepause >= 170)
                                        {
                                            Gorilla.firepause = 0;
                                        }
                                        Gorilla.firepause += 1;
                                    }
                                    if (Gorilla.firing)
                                    {
                                        Gorilla.clip -= 1;
                                        player2.health -= 50;
                                    }
                                }
                            }
                        }

                        foreach (bot ally in goodbots)
                        {
                            BoundingSphere botsphere = new BoundingSphere(ally.position, soldier.Meshes[0].BoundingSphere.Radius * 3);
                            float? botdetectedleft = Gorilla.attentionrayleft.Intersects(botsphere);
                            float? botdetected = Gorilla.attentionraycenter.Intersects(botsphere);
                            float? botdetectedright = Gorilla.attentionrayright.Intersects(botsphere);
                            if (!ally.dead)
                            {
                                if (botdetectedleft != null)
                                {
                                    Gorilla.rotation += 0.04f;
                                }
                                if (botdetected != null && botdetected < 300)
                                {
                                    Gorilla.alertbot = true;
                                }
                                if (botdetectedright != null)
                                {
                                    Gorilla.rotation -= 0.04f;
                                }
                            }
                            if (botdetected == null)
                            {
                                Gorilla.alertbot = false;
                            }
                            if (Gorilla.alertbot)
                            {
                                if (!ally.dead)
                                {
                                    if (Gorilla.clip > 0)
                                    {
                                        if (Gorilla.firepause == 0)
                                        {
                                            Gorilla.firing = true;
                                        }
                                        if (Gorilla.firepause > 0)
                                        {
                                            Gorilla.firing = false;
                                        }
                                        if (!Gorilla.firing)
                                        {
                                            if (Gorilla.firepause >= 170)
                                            {
                                                Gorilla.firepause = 0;
                                            }
                                            Gorilla.firepause += 1;
                                        }
                                        if (Gorilla.firing)
                                        {
                                            Gorilla.clip -= 1;
                                            ally.health -= 50;
                                        }
                                    }
                                }
                            }
                        }
                        if (Gorilla.clip <= 0)
                        {
                            Gorilla.reloadTimeNum += 1;
                            Gorilla.firing = false;
                            if (Gorilla.reloadTimeNum >= 100)
                            {
                                Gorilla.clip = 1;
                                Gorilla.reloadTimeNum = 0;
                            }
                        }
                    }
                }
                foreach (bot ally in goodbots)
                {
                    if (ally.position.Z < -3200)
                    {
                        ally.position.Z = -3200;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (ally.position.Z > 4200)
                    {
                        ally.position.Z = 4200;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (ally.position.X < -3500)
                    {
                        ally.position.X = -3500;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    if (ally.position.X > 4000)
                    {
                        ally.position.X = 4000;
                        ally.rotation += MathHelper.ToRadians(random.Next(150));
                    }
                    ally.attentionrayleft = new Ray(ally.position, new Vector3(-(float)Math.Sin(ally.rotation + MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(ally.rotation + MathHelper.ToRadians(5))));
                    ally.attentionraycenter = new Ray(ally.position, new Vector3(-(float)Math.Sin(ally.rotation), 0.0f, -(float)Math.Cos(ally.rotation)));
                    ally.attentionrayright = new Ray(ally.position, new Vector3(-(float)Math.Sin(ally.rotation - MathHelper.ToRadians(5)), 0.0f, -(float)Math.Cos(ally.rotation - MathHelper.ToRadians(5))));
                    if (ally.dead)
                    {
                        ally.respawnTime += 1;
                        if (ally.respawnTime >= 100)
                        {
                            ally.health = 100;
                            ally.dead = false;
                            ally.respawnTime = 0;
                            ally.position = new Vector3(random.Next(500) - 250, -5, random.Next(500) - 250);
                        }
                    }
                    if (!ally.dead)
                    {
                        foreach (gorilla Gorilla in gorillas)
                        {
                            BoundingSphere gorillasphere = new BoundingSphere(Gorilla.position, armored_gorilla.Meshes[0].BoundingSphere.Radius * 5);
                            if (ally.health <= 0)
                            {
                                ally.dead = true;
                            }
                            if (!ally.firing)
                            {
                                ally.position += new Vector3(-(float)Math.Sin(ally.rotation), 0.0f, -(float)Math.Cos(ally.rotation)) * 1.5f;
                            }
                            float? gorilladetectedleft = ally.attentionrayleft.Intersects(gorillasphere);
                            float? gorilladetected = ally.attentionraycenter.Intersects(gorillasphere);
                            float? gorilladetectedright = ally.attentionrayright.Intersects(gorillasphere);
                            if (!Gorilla.dead)
                            {
                                if (gorilladetectedleft != null)
                                {
                                    ally.rotation += 0.04f;
                                }
                                if (gorilladetected != null)
                                {
                                    ally.alertp1 = true;
                                }
                                if (gorilladetectedright != null)
                                {
                                    ally.rotation -= 0.04f;
                                }
                            }
                            if (gorilladetected == null)
                            {
                                ally.alertp1 = false;
                            }
                            if (!ally.alertp1)
                            {
                                ally.firing = false;
                            }
                            if (ally.alertp1)
                            {
                                if (!Gorilla.dead)
                                {
                                    if (ally.clip > 0)
                                    {
                                        if (ally.firepause == 0)
                                        {
                                            ally.firing = true;
                                        }
                                        if (ally.firepause > 0)
                                        {
                                            ally.firing = false;
                                        }
                                        if (!ally.firing)
                                        {
                                            if (ally.firepause >= 170)
                                            {
                                                ally.firepause = 0;
                                            }
                                            ally.firepause += 1;
                                        }
                                        if (ally.firing)
                                        {
                                            int hitnum = random.Next(3);
                                            ally.clip -= 1;
                                            gunsoundbank.PlayCue("M9Fire");
                                            if (hitnum == 1)
                                            {
                                                Gorilla.health -= 10;
                                                botdamage += 10;
                                                Gorilla.rotation = (ally.rotation + MathHelper.Pi);
                                            }
                                        }
                                    }
                                }
                            }
                            if (ally.clip <= 0)
                            {
                                ally.reloadTimeNum += 1;
                                ally.firing = false;
                                if (ally.reloadTimeNum >= 150)
                                {
                                    ally.clip = 60;
                                    ally.reloadTimeNum = 0;
                                }
                            }
                        }
                    }
                }
            }
            if (mode == "deathmatch2")
            {
                Input2();
                entrances[4].sphere = new BoundingSphere(new Vector3(entrances[4].position.X, playerPosition.Y, entrances[4].position.Z), 50);
                if (area == "road")
                {
                    if (playerPosition.Z > 289)
                    {
                        playerPosition.Z = 289;
                    }
                    if (playerPosition.Z < -612)
                    {
                        playerPosition.Z = -612;
                    }
                    if (playerPosition.X < -108)
                    {
                        playerPosition.X = -108;
                    }
                    if (playerPosition.X > 109)
                    {
                        playerPosition.X = 109;
                    }
                }
                if (playersphere.Intersects(entrances[0].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "oneroombuilding";
                }
                if (playersphere.Intersects(entrances[0].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[0].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "oneroombuilding";
                }
                if (playersphere.Intersects(entrances[0].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[1].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[1].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "smallbuildingroom1";
                }
                if (playersphere.Intersects(entrances[1].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[1].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "smallbuildingroom1";
                }
                if (playersphere.Intersects(entrances[2].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "smallbuildingroom1";
                }
                if (playersphere.Intersects(entrances[2].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "smallbuildingroom2";
                }
                if (playersphere.Intersects(entrances[2].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "smallbuildingroom1";
                }
                if (playersphere.Intersects(entrances[2].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "smallbuildingroom2";
                }
                if (playersphere.Intersects(entrances[3].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[3].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "2storymain";
                }
                if (playersphere.Intersects(entrances[3].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[3].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "2storymain";
                }
                if (playersphere.Intersects(entrances[4].sphere) && playerPosition.Y >= 4)
                {
                    area = "2storybasement";
                    oldY = -175;
                    canjump = false;
                }
                if (!playersphere.Intersects(entrances[4].sphere) && playerPosition.Y == 4 && area == "2storymain")
                {
                    area = "2storymain";
                    oldY = 4;
                }
                if (playersphere.Intersects(entrances[5].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[5].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "b1room1";
                }
                if (playersphere.Intersects(entrances[5].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[5].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "b1room1";
                }
                if (playersphere.Intersects(entrances[6].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 4)
                {
                    area = "b1room1";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[6].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 4)
                {
                    area = "b1elevator";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[6].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 4)
                {
                    area = "b1room1";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[6].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 4)
                {
                    area = "b1elevator";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[7].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 280)
                {
                    area = "b1room3";
                    playerlevel = 3;
                }
                if (playersphere.Intersects(entrances[7].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 280)
                {
                    area = "b1elevator";
                    playerlevel = 3;
                }
                if (playersphere.Intersects(entrances[7].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 280)
                {
                    area = "b1room3";
                    playerlevel = 3;
                }
                if (playersphere.Intersects(entrances[7].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 280)
                {
                    area = "b1elevator";
                    playerlevel = 3;
                }
                if (playersphere.Intersects(entrances[8].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "b1room2";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere.Intersects(entrances[8].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "b1elevator";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere.Intersects(entrances[8].sphere) && (float)Math.Cos(Rotation) >= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "b1room2";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere.Intersects(entrances[8].sphere) && (float)Math.Cos(Rotation) < 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "b1elevator";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere.Intersects(entrances[4].sphere) && canjump && playerPosition.Y < 4)
                {
                    if (GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y > 0)
                    {
                        playerPosition.Y += 2;
                        oldY += 2;
                        playerPosition.X = -336;
                    }
                    if (GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed)
                    {
                        playerPosition.X += 30;
                        oldY = -175;
                    }
                    if (playerPosition.Y >= 3)
                    {
                        playerPosition.Z += 40;
                        playerPosition.Y = 4;
                        area = "2storymain";
                    }
                }
                if (!playersphere.Intersects(entrances[4].sphere) && canjump && playerPosition.Y < 4 && area == "2storybasement")
                {
                    oldY = -175;
                }
                if (playersphere.Intersects(entrances[9].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "b2room1";
                }
                if (playersphere.Intersects(entrances[9].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[9].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "b2room1";
                }
                if (playersphere.Intersects(entrances[9].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "road";
                }
                if (playersphere.Intersects(entrances[10].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "b2room1";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[10].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevator2Position.Y == 4)
                {
                    area = "b2elevator";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[10].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 4)
                {
                    area = "b2room1";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[10].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 4)
                {
                    area = "b2elevator";
                    playerlevel = 1;
                }
                if (playersphere.Intersects(entrances[11].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "b2room2";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere.Intersects(entrances[11].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    area = "b2elevator";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere.Intersects(entrances[11].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "b2room2";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere.Intersects(entrances[11].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0)
                {
                    area = "b2elevator";
                    playerlevel = 2;
                    playerPosition.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere.Intersects(entrances[12].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevator2Position.Y == 280)
                {
                    area = "b2room3";
                    playerlevel = 3;
                }
                if (playersphere.Intersects(entrances[12].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevator2Position.Y == 280)
                {
                    area = "b2elevator";
                    playerlevel = 3;
                }
                if (playersphere.Intersects(entrances[12].sphere) && (float)Math.Sin(Rotation) <= 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 280)
                {
                    area = "b2room3";
                    playerlevel = 3;
                }
                if (playersphere.Intersects(entrances[12].sphere) && (float)Math.Sin(Rotation) > 0 && GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 280)
                {
                    area = "b2elevator";
                    playerlevel = 3;
                }
                if (area == "oneroombuilding")
                {
                    if (playerPosition.X < 170)
                    {
                        playerPosition.X = 170;
                    }
                    if (playerPosition.X > 375)
                    {
                        playerPosition.X = 375;
                    }
                    if (playerPosition.Z > -160)
                    {
                        playerPosition.Z = -160;
                    }
                    if (playerPosition.Z < -567)
                    {
                        playerPosition.Z = -567;
                    }
                }
                if (area == "smallbuildingroom1")
                {
                    if (playerPosition.X > -174)
                    {
                        playerPosition.X = -174;
                    }
                    if (playerPosition.X < -376)
                    {
                        playerPosition.X = -376;
                    }
                    if (playerPosition.Z > -160)
                    {
                        playerPosition.Z = -160;
                    }
                    if (playerPosition.Z < -380)
                    {
                        playerPosition.Z = -380;
                    }
                }
                if (area == "smallbuildingroom2")
                {
                    if (playerPosition.Z < -590)
                    {
                        playerPosition.Z = -590;
                    }
                    if (playerPosition.X > -174)
                    {
                        playerPosition.X = -174;
                    }
                    if (playerPosition.X < -376)
                    {
                        playerPosition.X = -376;
                    }
                    if (playerPosition.Z > -450)
                    {
                        playerPosition.Z = -450;
                    }
                }
                if (area == "2storymain")
                {
                    if (playerPosition.X > -174)
                    {
                        playerPosition.X = -174;
                    }
                    if (playerPosition.X < -376)
                    {
                        playerPosition.X = -376;
                    }
                    if (playerPosition.Z < -65)
                    {
                        playerPosition.Z = -65;
                    }
                    if (playerPosition.Z > 255)
                    {
                        playerPosition.Z = 255;
                    }
                }
                if (area == "2storybasement")
                {
                    if (playerPosition.X > -174)
                    {
                        playerPosition.X = -174;
                    }
                    if (playerPosition.X < -376)
                    {
                        playerPosition.X = -376;
                    }
                    if (playerPosition.Z < -65)
                    {
                        playerPosition.Z = -65;
                    }
                    if (playerPosition.Z > 255)
                    {
                        playerPosition.Z = 255;
                    }
                }
                if (area == "b1room1" || area == "b1room2" || area == "b1room3")
                {
                    if (playerPosition.Z > -673)
                    {
                        playerPosition.Z = -673;
                    }
                    if (playerPosition.X > 90)
                    {
                        playerPosition.X = 90;
                    }
                    if (playerPosition.X < -88)
                    {
                        playerPosition.X = -88;
                    }
                    if (playerPosition.Z < -760)
                    {
                        playerPosition.Z = -760;
                    }
                    if (GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed)
                    {
                        if (playerlevel < elevatorlevel)
                        {
                            elevatorvelocity = -5.5f;
                        }
                        if (playerlevel > elevatorlevel)
                        {
                            elevatorvelocity = 5.5f;
                        }
                        if (playerlevel == elevatorlevel)
                        {
                            elevatorvelocity = 0;
                        }
                    }
                }
                elevatorPosition.Y += elevatorvelocity;
                if (elevatorPosition.Y < 4)
                {
                    elevatorvelocity = 0;
                    elevatorPosition.Y = 4;
                    elevatorlevel = 1;
                }
                if (elevatorPosition.Y >= 145 && elevatorPosition.Y <= 155)
                {
                    elevatorlevel = 2;
                    if (playerlevel == 2 && elevatorvelocity != 0)
                    {
                        elevatorvelocity = 0;
                        elevatorPosition.Y = 150;
                    }
                }
                if (elevatorPosition.Y > 280)
                {
                    elevatorvelocity = 0;
                    elevatorPosition.Y = 280;
                    elevatorlevel = 3;
                }
                elevator2Position.Y += elevator2velocity;
                if (elevator2Position.Y < 4)
                {
                    elevator2velocity = 0;
                    elevator2Position.Y = 4;
                    elevator2level = 1;
                }
                if (elevator2Position.Y >= 145 && elevator2Position.Y <= 155)
                {
                    elevator2level = 2;
                    if (playerlevel == 2 && elevator2velocity != 0)
                    {
                        elevator2velocity = 0;
                        elevator2Position.Y = 150;
                    }
                }
                if (elevator2Position.Y > 280)
                {
                    elevator2velocity = 0;
                    elevator2Position.Y = 280;
                    elevator2level = 3;
                }
                if (area == "b1elevator")
                {
                    playerPosition.Y += elevatorvelocity;
                    if (playerPosition.Z > -855)
                    {
                        playerPosition.Z = -855;
                    }
                    if (playerPosition.Z < -873)
                    {
                        playerPosition.Z = -873;
                    }
                    if (playerPosition.X > 65)
                    {
                        playerPosition.X = 65;
                    }
                    if (playerPosition.X < 17)
                    {
                        playerPosition.X = 17;
                    }
                    canjump = false;
                    oldY = playerPosition.Y;
                    playerPosition.Y = elevatorPosition.Y;
                    if (GamePad.GetState(PlayerIndex.One).DPad.Up == ButtonState.Pressed)
                    {
                        elevatorvelocity = 5.5f;
                    }
                    if (GamePad.GetState(PlayerIndex.One).DPad.Down == ButtonState.Pressed)
                    {
                        elevatorvelocity = -5.5f;
                    }
                }
                if (area == "b2room1" || area == "b2room2" || area == "b2room3")
                {
                    if (playerPosition.Z < -65)
                    {
                        playerPosition.Z = -65;
                    }
                    if (playerPosition.Z > 270)
                    {
                        playerPosition.Z = 270;
                    }
                    if (playerPosition.X < 165)
                    {
                        playerPosition.X = 165;
                    }
                    if (playerPosition.X > 270)
                    {
                        playerPosition.X = 270;
                    }
                    if (GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed)
                    {
                        if (playerlevel < elevator2level)
                        {
                            elevator2velocity = -5.5f;
                        }
                        if (playerlevel > elevator2level)
                        {
                            elevator2velocity = 5.5f;
                        }
                        if (playerlevel == elevator2level)
                        {
                            elevator2velocity = 0;
                        }
                    }
                }
                if (area == "b2elevator")
                {
                    playerPosition.Y += elevator2velocity;
                    if (playerPosition.X < 340)
                    {
                        playerPosition.X = 340;
                    }
                    if (playerPosition.X > 355)
                    {
                        playerPosition.X = 355;
                    }
                    if (playerPosition.Z < 50)
                    {
                        playerPosition.Z = 50;
                    }
                    if (playerPosition.Z > 95)
                    {
                        playerPosition.Z = 95;
                    }
                    canjump = false;
                    oldY = playerPosition.Y;
                    playerPosition.Y = elevator2Position.Y;
                    if (GamePad.GetState(PlayerIndex.One).DPad.Up == ButtonState.Pressed)
                    {
                        elevator2velocity = 5.5f;
                    }
                    if (GamePad.GetState(PlayerIndex.One).DPad.Down == ButtonState.Pressed)
                    {
                        elevator2velocity = -5.5f;
                    }
                }
                entrances[4].sphere = new BoundingSphere(new Vector3(entrances[4].position.X, player2.Position.Y, entrances[4].position.Z), 50);
                if (player2.area == "road")
                {
                    if (player2.Position.Z > 289)
                    {
                        player2.Position.Z = 289;
                    }
                    if (player2.Position.Z < -612)
                    {
                        player2.Position.Z = -612;
                    }
                    if (player2.Position.X < -108)
                    {
                        player2.Position.X = -108;
                    }
                    if (player2.Position.X > 109)
                    {
                        player2.Position.X = 109;
                    }
                }
                if (playersphere2.Intersects(entrances[0].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "oneroombuilding";
                }
                if (playersphere2.Intersects(entrances[0].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[0].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "oneroombuilding";
                }
                if (playersphere2.Intersects(entrances[0].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[1].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[1].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "smallbuildingroom1";
                }
                if (playersphere2.Intersects(entrances[1].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[1].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "smallbuildingroom1";
                }
                if (playersphere2.Intersects(entrances[2].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "smallbuildingroom1";
                }
                if (playersphere2.Intersects(entrances[2].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "smallbuildingroom2";
                }
                if (playersphere2.Intersects(entrances[2].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "smallbuildingroom1";
                }
                if (playersphere2.Intersects(entrances[2].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "smallbuildingroom2";
                }
                if (playersphere2.Intersects(entrances[3].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[3].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "2storymain";
                }
                if (playersphere2.Intersects(entrances[3].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[3].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "2storymain";
                }
                if (playersphere2.Intersects(entrances[4].sphere) && player2.Position.Y >= 4)
                {
                    player2.area = "2storybasement";
                    player2.oldY = -175;
                    player2.canjump = false;
                }
                if (!playersphere2.Intersects(entrances[4].sphere) && player2.Position.Y == 4 && player2.area == "2storymain")
                {
                    player2.area = "2storymain";
                    player2.oldY = 4;
                }
                if (playersphere2.Intersects(entrances[5].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[5].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "b1room1";
                }
                if (playersphere2.Intersects(entrances[5].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[5].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "b1room1";
                }
                if (playersphere2.Intersects(entrances[6].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 4)
                {
                    player2.area = "b1room1";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[6].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 4)
                {
                    player2.area = "b1elevator";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[6].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 4)
                {
                    player2.area = "b1room1";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[6].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 4)
                {
                    player2.area = "b1elevator";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[7].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 280)
                {
                    player2.area = "b1room3";
                    player2.level = 3;
                }
                if (playersphere2.Intersects(entrances[7].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevatorPosition.Y == 280)
                {
                    player2.area = "b1elevator";
                    player2.level = 3;
                }
                if (playersphere2.Intersects(entrances[7].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 280)
                {
                    player2.area = "b1room3";
                    player2.level = 3;
                }
                if (playersphere2.Intersects(entrances[7].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevatorPosition.Y == 280)
                {
                    player2.area = "b1elevator";
                    player2.level = 3;
                }
                if (playersphere2.Intersects(entrances[8].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "b1room2";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere2.Intersects(entrances[8].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "b1elevator";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere2.Intersects(entrances[8].sphere) && (float)Math.Cos(player2.Rotation) >= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "b1room2";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere2.Intersects(entrances[8].sphere) && (float)Math.Cos(player2.Rotation) < 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "b1elevator";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevatorPosition.Y = 150;
                }
                if (playersphere2.Intersects(entrances[4].sphere) && player2.canjump && player2.Position.Y < 4)
                {
                    if (GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                    {
                        player2.Position.Y += 2;
                        player2.oldY += 2;
                        player2.Position.X = -336;
                    }
                    if (Keyboard.GetState().IsKeyDown(Keys.Space))
                    {
                        player2.Position.X += 30;
                        player2.oldY = -175;
                    }
                    if (player2.Position.Y >= 3)
                    {
                        player2.Position.Z += 40;
                        player2.Position.Y = 4;
                        player2.area = "2storymain";
                    }
                }
                if (!playersphere2.Intersects(entrances[4].sphere) && player2.canjump && player2.Position.Y < 4 && player2.area == "2storybasement")
                {
                    player2.oldY = -175;
                }
                if (playersphere2.Intersects(entrances[9].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "b2room1";
                }
                if (playersphere2.Intersects(entrances[9].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[9].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "b2room1";
                }
                if (playersphere2.Intersects(entrances[9].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "road";
                }
                if (playersphere2.Intersects(entrances[10].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "b2room1";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[10].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevator2Position.Y == 4)
                {
                    player2.area = "b2elevator";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[10].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 4)
                {
                    player2.area = "b2room1";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[10].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 4)
                {
                    player2.area = "b2elevator";
                    player2.level = 1;
                }
                if (playersphere2.Intersects(entrances[11].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "b2room2";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere2.Intersects(entrances[11].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0)
                {
                    player2.area = "b2elevator";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere2.Intersects(entrances[11].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "b2room2";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere2.Intersects(entrances[11].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0)
                {
                    player2.area = "b2elevator";
                    player2.level = 2;
                    player2.Position.Y = 150;
                    elevator2Position.Y = 150;
                }
                if (playersphere2.Intersects(entrances[12].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevator2Position.Y == 280)
                {
                    player2.area = "b2room3";
                    player2.level = 3;
                }
                if (playersphere2.Intersects(entrances[12].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y >= 0 && elevator2Position.Y == 280)
                {
                    player2.area = "b2elevator";
                    player2.level = 3;
                }
                if (playersphere2.Intersects(entrances[12].sphere) && (float)Math.Sin(player2.Rotation) <= 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 280)
                {
                    player2.area = "b2room3";
                    player2.level = 3;
                }
                if (playersphere2.Intersects(entrances[12].sphere) && (float)Math.Sin(player2.Rotation) > 0 && GamePad.GetState(PlayerIndex.Two).ThumbSticks.Left.Y < 0 && elevator2Position.Y == 280)
                {
                    player2.area = "b2elevator";
                    player2.level = 3;
                }
                if (player2.area == "oneroombuilding")
                {
                    if (player2.Position.X < 170)
                    {
                        player2.Position.X = 170;
                    }
                    if (player2.Position.X > 375)
                    {
                        player2.Position.X = 375;
                    }
                    if (player2.Position.Z > -160)
                    {
                        player2.Position.Z = -160;
                    }
                    if (player2.Position.Z < -567)
                    {
                        player2.Position.Z = -567;
                    }
                }
                if (player2.area == "smallbuildingroom1")
                {
                    if (player2.Position.X > -174)
                    {
                        player2.Position.X = -174;
                    }
                    if (player2.Position.X < -376)
                    {
                        player2.Position.X = -376;
                    }
                    if (player2.Position.Z > -160)
                    {
                        player2.Position.Z = -160;
                    }
                    if (player2.Position.Z < -380)
                    {
                        player2.Position.Z = -380;
                    }
                }
                if (player2.area == "smallbuildingroom2")
                {
                    if (player2.Position.Z < -590)
                    {
                        player2.Position.Z = -590;
                    }
                    if (player2.Position.X > -174)
                    {
                        player2.Position.X = -174;
                    }
                    if (player2.Position.X < -376)
                    {
                        player2.Position.X = -376;
                    }
                    if (player2.Position.Z > -450)
                    {
                        player2.Position.Z = -450;
                    }
                }
                if (player2.area == "2storymain")
                {
                    if (player2.Position.X > -174)
                    {
                        player2.Position.X = -174;
                    }
                    if (player2.Position.X < -376)
                    {
                        player2.Position.X = -376;
                    }
                    if (player2.Position.Z < -65)
                    {
                        player2.Position.Z = -65;
                    }
                    if (player2.Position.Z > 255)
                    {
                        player2.Position.Z = 255;
                    }
                }
                if (player2.area == "2storybasement")
                {
                    if (player2.Position.X > -174)
                    {
                        player2.Position.X = -174;
                    }
                    if (player2.Position.X < -376)
                    {
                        player2.Position.X = -376;
                    }
                    if (player2.Position.Z < -65)
                    {
                        player2.Position.Z = -65;
                    }
                    if (player2.Position.Z > 255)
                    {
                        player2.Position.Z = 255;
                    }
                }
                if (player2.area == "b1room1" || player2.area == "b1room2" || player2.area == "b1room3")
                {
                    if (player2.Position.Z > -673)
                    {
                        player2.Position.Z = -673;
                    }
                    if (player2.Position.X > 90)
                    {
                        player2.Position.X = 90;
                    }
                    if (player2.Position.X < -88)
                    {
                        player2.Position.X = -88;
                    }
                    if (player2.Position.Z < -760)
                    {
                        player2.Position.Z = -760;
                    }
                    if (Keyboard.GetState().IsKeyDown(Keys.F))
                    {
                        if (player2.level < elevatorlevel)
                        {
                            elevatorvelocity = -5.5f;
                        }
                        if (player2.level > elevatorlevel)
                        {
                            elevatorvelocity = 5.5f;
                        }
                        if (player2.level == elevatorlevel)
                        {
                            elevatorvelocity = 0;
                        }
                    }
                }
                elevatorPosition.Y += elevatorvelocity;
                if (elevatorPosition.Y < 4)
                {
                    elevatorvelocity = 0;
                    elevatorPosition.Y = 4;
                    elevatorlevel = 1;
                }
                if (elevatorPosition.Y >= 145 && elevatorPosition.Y <= 155)
                {
                    elevatorlevel = 2;
                    if (player2.level == 2 && elevatorvelocity != 0)
                    {
                        elevatorvelocity = 0;
                        elevatorPosition.Y = 150;
                    }
                }
                if (elevatorPosition.Y > 280)
                {
                    elevatorvelocity = 0;
                    elevatorPosition.Y = 280;
                    elevatorlevel = 3;
                }
                elevator2Position.Y += elevator2velocity;
                if (elevator2Position.Y < 4)
                {
                    elevator2velocity = 0;
                    elevator2Position.Y = 4;
                    elevator2level = 1;
                }
                if (elevator2Position.Y >= 145 && elevator2Position.Y <= 155)
                {
                    elevator2level = 2;
                    if (player2.level == 2 && elevator2velocity != 0)
                    {
                        elevator2velocity = 0;
                        elevator2Position.Y = 150;
                    }
                }
                if (elevator2Position.Y > 280)
                {
                    elevator2velocity = 0;
                    elevator2Position.Y = 280;
                    elevator2level = 3;
                }
                if (player2.area == "b1elevator")
                {
                    player2.Position.Y += elevatorvelocity;
                    if (player2.Position.Z > -855)
                    {
                        player2.Position.Z = -855;
                    }
                    if (player2.Position.Z < -873)
                    {
                        player2.Position.Z = -873;
                    }
                    if (player2.Position.X > 65)
                    {
                        player2.Position.X = 65;
                    }
                    if (player2.Position.X < 17)
                    {
                        player2.Position.X = 17;
                    }
                    player2.canjump = false;
                    player2.oldY = player2.Position.Y;
                    player2.Position.Y = elevatorPosition.Y;
                    if (Keyboard.GetState().IsKeyDown(Keys.E))
                    {
                        elevatorvelocity = 5.5f;
                    }
                    if (Keyboard.GetState().IsKeyDown(Keys.F))
                    {
                        elevatorvelocity = -5.5f;
                    }
                }
                if (player2.area == "b2room1" || player2.area == "b2room2" || player2.area == "b2room3")
                {
                    if (player2.Position.Z < -65)
                    {
                        player2.Position.Z = -65;
                    }
                    if (player2.Position.Z > 270)
                    {
                        player2.Position.Z = 270;
                    }
                    if (player2.Position.X < 165)
                    {
                        player2.Position.X = 165;
                    }
                    if (player2.Position.X > 270)
                    {
                        player2.Position.X = 270;
                    }
                    if (GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed)
                    {
                        if (player2.level < elevator2level)
                        {
                            elevator2velocity = -5.5f;
                        }
                        if (player2.level > elevator2level)
                        {
                            elevator2velocity = 5.5f;
                        }
                        if (player2.level == elevator2level)
                        {
                            elevator2velocity = 0;
                        }
                    }
                }
                if (player2.area == "b2elevator")
                {
                    player2.Position.Y += elevator2velocity;
                    if (player2.Position.X < 340)
                    {
                        player2.Position.X = 340;
                    }
                    if (player2.Position.X > 355)
                    {
                        player2.Position.X = 355;
                    }
                    if (player2.Position.Z < 50)
                    {
                        player2.Position.Z = 50;
                    }
                    if (player2.Position.Z > 95)
                    {
                        player2.Position.Z = 95;
                    }
                    player2.canjump = false;
                    player2.oldY = player2.Position.Y;
                    player2.Position.Y = elevator2Position.Y;
                    if (Keyboard.GetState().IsKeyDown(Keys.E))
                    {
                        elevator2velocity = 5.5f;
                    }
                    if (Keyboard.GetState().IsKeyDown(Keys.F))
                    {
                        elevator2velocity = -5.5f;
                    }
                }
                player2.Position.Y += player2.jumpspeed;
                if (player2.jumpspeed < 0)
                {
                    player2.jumpspeed *= 1.05f;
                }
                if (player2.Position.Y > (player2.oldY + 30))
                {
                    player2.jumpspeed = -1.0f;
                }
                if (player2.Position.Y < player2.oldY)
                {
                    player2.Position.Y = player2.oldY;
                    player2.canjump = true;
                }
                playerPosition.Y += jumpspeed;
                if (jumpspeed < 0)
                {
                    jumpspeed *= 1.05f;
                }
                if (playerPosition.Y > (oldY + 30))
                {
                    jumpspeed = -1.0f;
                }
                if (playerPosition.Y < oldY)
                {
                    playerPosition.Y = oldY;
                    canjump = true;
                }
            }
            if (mode == "class")
            {
                Input2();
                Input3();
                Input4();
                if (playerPosition.Z < -4800)
                {
                    playerPosition.Z = -4800;
                }
                if (playerPosition.Z > 4800)
                {
                    playerPosition.Z = 4800;
                }
                if (playerPosition.X < -5100)
                {
                    playerPosition.X = -5100;
                }
                if (playerPosition.X > 4600)
                {
                    playerPosition.X = 4600;
                }
                if (player2.Position.Z < -4800)
                {
                    player2.Position.Z = -4800;
                }
                if (player2.Position.Z > 4800)
                {
                    player2.Position.Z = 4800;
                }
                if (player2.Position.X < -5100)
                {
                    player2.Position.X = -5100;
                }
                if (player2.Position.X > 4600)
                {
                    player2.Position.X = 4600;
                }
                if (player3.Position.Z < -4800)
                {
                    player3.Position.Z = -4800;
                }
                if (player3.Position.Z > 4800)
                {
                    player3.Position.Z = 4800;
                }
                if (player3.Position.X < -5100)
                {
                    player3.Position.X = -5100;
                }
                if (player3.Position.X > 4600)
                {
                    player3.Position.X = 4600;
                }
                if (player4.Position.Z < -4800)
                {
                    player4.Position.Z = -4800;
                }
                if (player4.Position.Z > 4800)
                {
                    player4.Position.Z = 4800;
                }
                if (player4.Position.X < -5100)
                {
                    player4.Position.X = -5100;
                }
                if (player4.Position.X > 4600)
                {
                    player4.Position.X = 4600;
                }
                playerPosition.Y += jumpspeed;
                player2.Position.Y += player2.jumpspeed;
                player3.Position.Y += player3.jumpspeed;
                player4.Position.Y += player4.jumpspeed;
                if (playerPosition.Y > (oldY + 30))
                {
                    jumpspeed = -2.0f;
                }
                if (playerPosition.Y < oldY)
                {
                    playerPosition.Y = oldY;
                    canjump = true;
                }
                if (player2.Position.Y > (player2.oldY + 30))
                {
                    player2.jumpspeed = -2.0f;
                }
                if (player2.Position.Y < player2.oldY)
                {
                    player2.Position.Y = player2.oldY;
                    player2.canjump = true;
                }
                if (player3.Position.Y > (player3.oldY + 30))
                {
                    player3.jumpspeed = -2.0f;
                }
                if (player3.Position.Y < player3.oldY)
                {
                    player3.Position.Y = player3.oldY;
                    player3.canjump = true;
                }
                if (player4.Position.Y > (player4.oldY + 30))
                {
                    player4.jumpspeed = -2.0f;
                }
                if (player4.Position.Y < player4.oldY)
                {
                    player4.Position.Y = player4.oldY;
                    player4.canjump = true;
                }
            }
            if (mode == "tdm4")
            {
                Input2();
                Input3();
                Input4();
                if (health <= 0)
                {
                    dead = true;
                }
                if (player2.health <= 0)
                {
                    player2.dead = true;
                }
                if (player3.health <= 0)
                {
                    player3.dead = true;
                }
                if (player4.health <= 0)
                {
                    player4.dead = true;
                }
                if (playerPosition.Z > 215 && playerPosition.X > 164 && playerPosition.X < 510 && playerPosition.Z < 235)
                {
                    playerPosition.Z = 215;
                }
                if (playerPosition.Z > 215 && playerPosition.X < 142 && playerPosition.X > -162 && playerPosition.Z < 235)
                {
                    playerPosition.Z = 215;
                }
                if (playerPosition.Z < -205 && playerPosition.X > 159 && playerPosition.X < 510 && playerPosition.Z > -225)
                {
                    playerPosition.Z = -205;
                }
                if (playerPosition.Z < -205 && playerPosition.X < 140 && playerPosition.X > -162 && playerPosition.Z > -225)
                {
                    playerPosition.Z = -205;
                }
                if (playerPosition.Z <= -225 && playerPosition.X > 159)
                {
                    playerPosition.X = 159;
                }
                if (playerPosition.X > 490 && playerPosition.Z > -225 && playerPosition.Z < 235)
                {
                    playerPosition.X = 490;
                }
                if (playerPosition.Z < -294)
                {
                    playerPosition.Z = -294;
                }
                if (playerPosition.Z > -264 && playerPosition.Z < -235 && playerPosition.X < 140 && playerPosition.X > -193)
                {
                    playerPosition.Z = -264;
                }
                if (playerPosition.Z > -88 && playerPosition.Z <= -48 && playerPosition.X <= -173)
                {
                    playerPosition.Z = -88;
                }
                if (playerPosition.X > -193 && playerPosition.X <= -162 && playerPosition.Z > -244 && playerPosition.Z <= -48)
                {
                    playerPosition.X = -193;
                }
                if (playerPosition.X < -142 && playerPosition.Z < -10 && playerPosition.Z > -225 && playerPosition.X > -160)
                {
                    playerPosition.X = -142;
                }
                if (playerPosition.X < -142 && playerPosition.Z > 10 && playerPosition.Z < 235 && playerPosition.X > -160)
                {
                    playerPosition.X = -142;
                }
                if (playerPosition.X <= -160 && playerPosition.Z > 40 && playerPosition.Z < 60)
                {
                    playerPosition.Z = 40;
                }
                if (playerPosition.X <= -160 && playerPosition.Z < -28 && playerPosition.Z > -48)
                {
                    playerPosition.Z = -28;
                }
                if (playerPosition.X < -236 && playerPosition.Z < 60 && playerPosition.Z > -48 && playerPosition.X > -256)
                {
                    playerPosition.X = -236;
                }
                if (playerPosition.X > -191 && playerPosition.Z < -10 && playerPosition.Z > -48 && playerPosition.X <= -160)
                {
                    playerPosition.X = -191;
                }
                if (playerPosition.X > -191 && playerPosition.Z > 10 && playerPosition.Z < 60 && playerPosition.X <= -160)
                {
                    playerPosition.X = -191;
                }
                if (playerPosition.Z >= 235 && playerPosition.X > 160)
                {
                    playerPosition.X = 160;
                }
                if (playerPosition.Z >= 235 && playerPosition.Z < 275 && playerPosition.X < 142 && playerPosition.X > -188)
                {
                    playerPosition.Z = 275;
                }
                if (playerPosition.Z > 307)
                {
                    playerPosition.Z = 307;
                }
                if (playerPosition.Z < 90 && playerPosition.Z >= 60 && playerPosition.X <= -188)
                {
                    playerPosition.Z = 90;
                }
                if (playerPosition.X > -210 && playerPosition.Z >= 60 && playerPosition.X <= -160 && playerPosition.Z < 275)
                {
                    playerPosition.X = -210;
                }
                if (playerPosition.X < -416)
                {
                    playerPosition.X = -416;
                }
                if (playerPosition.X > -44 && playerPosition.X <= 318 && playerPosition.Z < 115 && playerPosition.Z > -100 && playerPosition.Y >= 4)
                {
                    oldY = -40;
                }
                if (playerPosition.X > 318 && playerPosition.X <= 393 && playerPosition.Z < 115 && playerPosition.Z > -100 && playerPosition.Y >= 4)
                {
                    oldY = -128;
                }
                if (playerPosition.Y < 4)
                {
                    if (playerPosition.Y >= -40)
                    {
                        if (playerPosition.X < -24)
                        {
                            playerPosition.X = -24;
                        }
                    }
                    if (playerPosition.X > 373)
                    {
                        playerPosition.X = 373;
                    }
                    if (playerPosition.Z < -80)
                    {
                        playerPosition.Z = -80;
                    }
                    if (playerPosition.Z > 95)
                    {
                        playerPosition.Z = 95;
                    }
                    if (playerPosition.Y >= -40)
                    {
                        if (playerPosition.X <= -24 && GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed)
                        {
                            playerPosition.X -= 40;
                            playerPosition.Y = 4;
                            oldY = 4;
                            canjump = true;
                        }
                        if (playerPosition.Y > -40)
                        {
                            playerPosition.Y = -40;
                        }
                        if (playerPosition.X >= 373 && GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed)
                        {
                            playerPosition.X += 40;
                            playerPosition.Y = 4;
                            oldY = 4;
                            canjump = true;
                        }
                        if (playerPosition.Z <= -80 && GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed)
                        {
                            playerPosition.Z -= 40;
                            playerPosition.Y = 4;
                            oldY = 4;
                            canjump = true;
                        }
                        if (playerPosition.Z >= 95 && GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed)
                        {
                            playerPosition.Z += 40;
                            playerPosition.Y = 4;
                            oldY = 4;
                            canjump = true;
                        }
                    }
                    if (playerPosition.Y < -40)
                    {
                        if (GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed)
                        {
                            jumpspeed = 0.8f;
                            oldY += 1;
                        }
                        if (playerPosition.X < 318)
                        {
                            playerPosition.X = 318;
                        }
                    }
                }
                if (playerPosition.X >= -160 && playerPosition.Z < 60 && playerPosition.Z > -48)
                {
                    room = "janitorcloset";
                }
                else if (playerPosition.X > 318 && playerPosition.X <= 393 && playerPosition.Z < 115 && playerPosition.Z > -100 && playerPosition.Y < -95)
                {
                    room = "deepwater";
                }
                else if (playerPosition.Z <= -244 && playerPosition.X > -193)
                {
                    room = "hallway2";
                }
                else if (playerPosition.Z <= -48 && playerPosition.X <= -193)
                {
                    room = "room2";
                }
                else if (playerPosition.Z >= 255 && playerPosition.X > -188)
                {
                    room = "hallway1";
                }
                else if (playerPosition.Z > 60 && playerPosition.X <= -188)
                {
                    room = "room1";
                }
                else
                {
                    room = "poolroom";
                }
                if (player2.Position.Z > 215 && player2.Position.X > 164 && player2.Position.X < 510 && player2.Position.Z < 235)
                {
                    player2.Position.Z = 215;
                }
                if (player2.Position.Z > 215 && player2.Position.X < 142 && player2.Position.X > -162 && player2.Position.Z < 235)
                {
                    player2.Position.Z = 215;
                }
                if (player2.Position.Z < -205 && player2.Position.X > 159 && player2.Position.X < 510 && player2.Position.Z > -225)
                {
                    player2.Position.Z = -205;
                }
                if (player2.Position.Z < -205 && player2.Position.X < 140 && player2.Position.X > -162 && player2.Position.Z > -225)
                {
                    player2.Position.Z = -205;
                }
                if (player2.Position.Z <= -225 && player2.Position.X > 159)
                {
                    player2.Position.X = 159;
                }
                if (player2.Position.X > 490 && player2.Position.Z > -225 && player2.Position.Z < 235)
                {
                    player2.Position.X = 490;
                }
                if (player2.Position.Z < -294)
                {
                    player2.Position.Z = -294;
                }
                if (player2.Position.Z > -264 && player2.Position.Z < -235 && player2.Position.X < 140 && player2.Position.X > -193)
                {
                    player2.Position.Z = -264;
                }
                if (player2.Position.Z > -88 && player2.Position.Z <= -48 && player2.Position.X <= -173)
                {
                    player2.Position.Z = -88;
                }
                if (player2.Position.X > -193 && player2.Position.X <= -162 && player2.Position.Z > -244 && player2.Position.Z <= -48)
                {
                    player2.Position.X = -193;
                }
                if (player2.Position.X < -142 && player2.Position.Z < -10 && player2.Position.Z > -225 && player2.Position.X > -160)
                {
                    player2.Position.X = -142;
                }
                if (player2.Position.X < -142 && player2.Position.Z > 10 && player2.Position.Z < 235 && player2.Position.X > -160)
                {
                    player2.Position.X = -142;
                }
                if (player2.Position.X <= -160 && player2.Position.Z > 40 && player2.Position.Z < 60)
                {
                    player2.Position.Z = 40;
                }
                if (player2.Position.X <= -160 && player2.Position.Z < -28 && player2.Position.Z > -48)
                {
                    player2.Position.Z = -28;
                }
                if (player2.Position.X < -236 && player2.Position.Z < 60 && player2.Position.Z > -48 && player2.Position.X > -256)
                {
                    player2.Position.X = -236;
                }
                if (player2.Position.X > -191 && player2.Position.Z < -10 && player2.Position.Z > -48 && player2.Position.X <= -160)
                {
                    player2.Position.X = -191;
                }
                if (player2.Position.X > -191 && player2.Position.Z > 10 && player2.Position.Z < 60 && player2.Position.X <= -160)
                {
                    player2.Position.X = -191;
                }
                if (player2.Position.Z >= 235 && player2.Position.X > 160)
                {
                    player2.Position.X = 160;
                }
                if (player2.Position.Z >= 235 && player2.Position.Z < 275 && player2.Position.X < 142 && player2.Position.X > -188)
                {
                    player2.Position.Z = 275;
                }
                if (player2.Position.Z > 307)
                {
                    player2.Position.Z = 307;
                }
                if (player2.Position.Z < 90 && player2.Position.Z >= 60 && player2.Position.X <= -188)
                {
                    player2.Position.Z = 90;
                }
                if (player2.Position.X > -210 && player2.Position.Z >= 60 && player2.Position.X <= -160 && player2.Position.Z < 275)
                {
                    player2.Position.X = -210;
                }
                if (player2.Position.X < -416)
                {
                    player2.Position.X = -416;
                }
                if (player2.Position.X > -44 && player2.Position.X <= 318 && player2.Position.Z < 115 && player2.Position.Z > -100 && player2.Position.Y >= 4)
                {
                    player2.oldY = -40;
                }
                if (player2.Position.X > 318 && player2.Position.X <= 393 && player2.Position.Z < 115 && player2.Position.Z > -100 && player2.Position.Y >= 4)
                {
                    player2.oldY = -128;
                }
                if (player2.Position.Y < 4)
                {
                    if (player2.Position.Y >= -40)
                    {
                        if (player2.Position.X < -24)
                        {
                            player2.Position.X = -24;
                        }
                    }
                    if (player2.Position.Y > -40)
                    {
                        player2.Position.Y = -40;
                    }
                    if (player2.Position.X > 373)
                    {
                        player2.Position.X = 373;
                    }
                    if (player2.Position.Z < -80)
                    {
                        player2.Position.Z = -80;
                    }
                    if (player2.Position.Z > 95)
                    {
                        player2.Position.Z = 95;
                    }
                    if (player2.Position.Y == -40)
                    {
                        if (player2.Position.X <= -24 && GamePad.GetState(PlayerIndex.Two).Buttons.A == ButtonState.Pressed)
                        {
                            player2.Position.X -= 40;
                            player2.Position.Y = 4;
                            player2.oldY = 4;
                            player2.canjump = true;
                        }
                        if (player2.Position.X >= 373 && GamePad.GetState(PlayerIndex.Two).Buttons.A == ButtonState.Pressed)
                        {
                            player2.Position.X += 40;
                            player2.Position.Y = 4;
                            player2.oldY = 4;
                            player2.canjump = true;
                        }
                        if (player2.Position.Z <= -80 && GamePad.GetState(PlayerIndex.Two).Buttons.A == ButtonState.Pressed)
                        {
                            player2.Position.Z -= 40;
                            player2.Position.Y = 4;
                            player2.oldY = 4;
                            player2.canjump = true;
                        }
                        if (player2.Position.Z >= 95 && GamePad.GetState(PlayerIndex.Two).Buttons.A == ButtonState.Pressed)
                        {
                            player2.Position.Z += 40;
                            player2.Position.Y = 4;
                            player2.oldY = 4;
                            player2.canjump = true;
                        }
                    }
                    if (player2.Position.Y < -40)
                    {
                        if (GamePad.GetState(PlayerIndex.Two).Buttons.A == ButtonState.Pressed)
                        {
                            player2.jumpspeed = 0.8f;
                            player2.oldY += 1;
                        }
                        if (player2.Position.X < 318)
                        {
                            player2.Position.X = 318;
                        }
                    }
                }
                if (player2.Position.X >= -160 && player2.Position.Z < 60 && player2.Position.Z > -48)
                {
                    player2.room = "janitorcloset";
                }
                else if (player2.Position.X > 318 && player2.Position.X <= 393 && player2.Position.Z < 115 && player2.Position.Z > -100 && player2.Position.Y < -95)
                {
                    player2.room = "deepwater";
                }
                else if (player2.Position.Z <= -244 && player2.Position.X > -193)
                {
                    player2.room = "hallway2";
                }
                else if (player2.Position.Z <= -48 && player2.Position.X <= -193)
                {
                    player2.room = "room2";
                }
                else if (player2.Position.Z >= 255 && player2.Position.X > -188)
                {
                    player2.room = "hallway1";
                }
                else if (player2.Position.Z > 60 && player2.Position.X <= -188)
                {
                    player2.room = "room1";
                }
                else
                {
                    player2.room = "poolroom";

                }
                player2.Position.Y += player2.jumpspeed;
                if (player2.jumpspeed < 0)
                {
                    player2.jumpspeed *= 1.05f;
                }
                if (player2.Position.Y >= -10)
                {
                    if (player2.Position.Y > (player2.oldY + 30))
                    {
                        player2.jumpspeed = -1.0f;
                    }
                    if (player2.Position.Y < player2.oldY)
                    {
                        player2.Position.Y = player2.oldY;
                        player2.canjump = true;
                    }
                }
                if (player2.Position.Y < -10)
                {
                    if (player2.Position.Y > (player2.oldY + 2))
                    {
                        player2.jumpspeed = -1.0f;
                    }
                    if (player2.Position.Y < player2.oldY)
                    {
                        player2.Position.Y = player2.oldY;
                    }
                }
                if (player3.Position.Z > 215 && player3.Position.X > 164 && player3.Position.X < 510 && player3.Position.Z < 235)
                {
                    player3.Position.Z = 215;
                }
                if (player3.Position.Z > 215 && player3.Position.X < 142 && player3.Position.X > -162 && player3.Position.Z < 235)
                {
                    player3.Position.Z = 215;
                }
                if (player3.Position.Z < -205 && player3.Position.X > 159 && player3.Position.X < 510 && player3.Position.Z > -225)
                {
                    player3.Position.Z = -205;
                }
                if (player3.Position.Z < -205 && player3.Position.X < 140 && player3.Position.X > -162 && player3.Position.Z > -225)
                {
                    player3.Position.Z = -205;
                }
                if (player3.Position.Z <= -225 && player3.Position.X > 159)
                {
                    player3.Position.X = 159;
                }
                if (player3.Position.X > 490 && player3.Position.Z > -225 && player3.Position.Z < 235)
                {
                    player3.Position.X = 490;
                }
                if (player3.Position.Z < -294)
                {
                    player3.Position.Z = -294;
                }
                if (player3.Position.Z > -264 && player3.Position.Z < -235 && player3.Position.X < 140 && player3.Position.X > -193)
                {
                    player3.Position.Z = -264;
                }
                if (player3.Position.Z > -88 && player3.Position.Z <= -48 && player3.Position.X <= -173)
                {
                    player3.Position.Z = -88;
                }
                if (player3.Position.X > -193 && player3.Position.X <= -162 && player3.Position.Z > -244 && player3.Position.Z <= -48)
                {
                    player3.Position.X = -193;
                }
                if (player3.Position.X < -142 && player3.Position.Z < -10 && player3.Position.Z > -225 && player3.Position.X > -160)
                {
                    player3.Position.X = -142;
                }
                if (player3.Position.X < -142 && player3.Position.Z > 10 && player3.Position.Z < 235 && player3.Position.X > -160)
                {
                    player3.Position.X = -142;
                }
                if (player3.Position.X <= -160 && player3.Position.Z > 40 && player3.Position.Z < 60)
                {
                    player3.Position.Z = 40;
                }
                if (player3.Position.X <= -160 && player3.Position.Z < -28 && player3.Position.Z > -48)
                {
                    player3.Position.Z = -28;
                }
                if (player3.Position.X < -236 && player3.Position.Z < 60 && player3.Position.Z > -48 && player3.Position.X > -256)
                {
                    player3.Position.X = -236;
                }
                if (player3.Position.X > -191 && player3.Position.Z < -10 && player3.Position.Z > -48 && player3.Position.X <= -160)
                {
                    player3.Position.X = -191;
                }
                if (player3.Position.X > -191 && player3.Position.Z > 10 && player3.Position.Z < 60 && player3.Position.X <= -160)
                {
                    player3.Position.X = -191;
                }
                if (player3.Position.Z >= 235 && player3.Position.X > 160)
                {
                    player3.Position.X = 160;
                }
                if (player3.Position.Z >= 235 && player3.Position.Z < 275 && player3.Position.X < 142 && player3.Position.X > -188)
                {
                    player3.Position.Z = 275;
                }
                if (player3.Position.Z > 307)
                {
                    player3.Position.Z = 307;
                }
                if (player3.Position.Z < 90 && player3.Position.Z >= 60 && player3.Position.X <= -188)
                {
                    player3.Position.Z = 90;
                }
                if (player3.Position.X > -210 && player3.Position.Z >= 60 && player3.Position.X <= -160 && player3.Position.Z < 275)
                {
                    player3.Position.X = -210;
                }
                if (player3.Position.X < -416)
                {
                    player3.Position.X = -416;
                }
                if (player3.Position.X > -44 && player3.Position.X <= 318 && player3.Position.Z < 115 && player3.Position.Z > -100 && player3.Position.Y >= 4)
                {
                    player3.oldY = -40;
                }
                if (player3.Position.X > 318 && player3.Position.X <= 393 && player3.Position.Z < 115 && player3.Position.Z > -100 && player3.Position.Y >= 4)
                {
                    player3.oldY = -128;
                }
                if (player3.Position.Y < 4)
                {
                    if (player3.Position.Y >= -40)
                    {
                        if (player3.Position.X < -24)
                        {
                            player3.Position.X = -24;
                        }
                    }
                    if (player3.Position.Y > -40)
                    {
                        player3.Position.Y = -40;
                    }
                    if (player3.Position.X > 373)
                    {
                        player3.Position.X = 373;
                    }
                    if (player3.Position.Z < -80)
                    {
                        player3.Position.Z = -80;
                    }
                    if (player3.Position.Z > 95)
                    {
                        player3.Position.Z = 95;
                    }
                    if (player3.Position.Y == -40)
                    {
                        if (player3.Position.X <= -24 && GamePad.GetState(PlayerIndex.Three).Buttons.A == ButtonState.Pressed)
                        {
                            player3.Position.X -= 40;
                            player3.Position.Y = 4;
                            player3.oldY = 4;
                            player3.canjump = true;
                        }
                        if (player3.Position.X >= 373 && GamePad.GetState(PlayerIndex.Three).Buttons.A == ButtonState.Pressed)
                        {
                            player3.Position.X += 40;
                            player3.Position.Y = 4;
                            player3.oldY = 4;
                            player3.canjump = true;
                        }
                        if (player3.Position.Z <= -80 && GamePad.GetState(PlayerIndex.Three).Buttons.A == ButtonState.Pressed)
                        {
                            player3.Position.Z -= 40;
                            player3.Position.Y = 4;
                            player3.oldY = 4;
                            player3.canjump = true;
                        }
                        if (player3.Position.Z >= 95 && GamePad.GetState(PlayerIndex.Three).Buttons.A == ButtonState.Pressed)
                        {
                            player3.Position.Z += 40;
                            player3.Position.Y = 4;
                            player3.oldY = 4;
                            player3.canjump = true;
                        }
                    }
                    if (player3.Position.Y < -40)
                    {
                        if (GamePad.GetState(PlayerIndex.Three).Buttons.A == ButtonState.Pressed)
                        {
                            player3.jumpspeed = 0.8f;
                            player3.oldY += 1;
                        }
                        if (player3.Position.X < 318)
                        {
                            player3.Position.X = 318;
                        }
                    }
                }
                if (player3.Position.X >= -160 && player3.Position.Z < 60 && player3.Position.Z > -48)
                {
                    player3.room = "janitorcloset";
                }
                else if (player3.Position.X > 318 && player3.Position.X <= 393 && player3.Position.Z < 115 && player3.Position.Z > -100 && player3.Position.Y < -95)
                {
                    player3.room = "deepwater";
                }
                else if (player3.Position.Z <= -244 && player3.Position.X > -193)
                {
                    player3.room = "hallway2";
                }
                else if (player3.Position.Z <= -48 && player3.Position.X <= -193)
                {
                    player3.room = "room2";
                }
                else if (player3.Position.Z >= 255 && player3.Position.X > -188)
                {
                    player3.room = "hallway1";
                }
                else if (player3.Position.Z > 60 && player3.Position.X <= -188)
                {
                    player3.room = "room1";
                }
                else
                {
                    player3.room = "poolroom";

                }
                player3.Position.Y += player3.jumpspeed;
                if (player3.jumpspeed < 0)
                {
                    player3.jumpspeed *= 1.05f;
                }
                if (player3.Position.Y >= -10)
                {
                    if (player3.Position.Y > (player3.oldY + 30))
                    {
                        player3.jumpspeed = -1.0f;
                    }
                    if (player3.Position.Y < player3.oldY)
                    {
                        player3.Position.Y = player3.oldY;
                        player3.canjump = true;
                    }
                }
                if (player3.Position.Y < -10)
                {
                    if (player3.Position.Y > (player3.oldY + 2))
                    {
                        player3.jumpspeed = -1.0f;
                    }
                    if (player3.Position.Y < player3.oldY)
                    {
                        player3.Position.Y = player3.oldY;
                    }
                }
                if (player4.Position.Z > 215 && player4.Position.X > 164 && player4.Position.X < 510 && player4.Position.Z < 235)
                {
                    player4.Position.Z = 215;
                }
                if (player4.Position.Z > 215 && player4.Position.X < 142 && player4.Position.X > -162 && player4.Position.Z < 235)
                {
                    player4.Position.Z = 215;
                }
                if (player4.Position.Z < -205 && player4.Position.X > 159 && player4.Position.X < 510 && player4.Position.Z > -225)
                {
                    player4.Position.Z = -205;
                }
                if (player4.Position.Z < -205 && player4.Position.X < 140 && player4.Position.X > -162 && player4.Position.Z > -225)
                {
                    player4.Position.Z = -205;
                }
                if (player4.Position.Z <= -225 && player4.Position.X > 159)
                {
                    player4.Position.X = 159;
                }
                if (player4.Position.X > 490 && player4.Position.Z > -225 && player4.Position.Z < 235)
                {
                    player4.Position.X = 490;
                }
                if (player4.Position.Z < -294)
                {
                    player4.Position.Z = -294;
                }
                if (player4.Position.Z > -264 && player4.Position.Z < -235 && player4.Position.X < 140 && player4.Position.X > -193)
                {
                    player4.Position.Z = -264;
                }
                if (player4.Position.Z > -88 && player4.Position.Z <= -48 && player4.Position.X <= -173)
                {
                    player4.Position.Z = -88;
                }
                if (player4.Position.X > -193 && player4.Position.X <= -162 && player4.Position.Z > -244 && player4.Position.Z <= -48)
                {
                    player4.Position.X = -193;
                }
                if (player4.Position.X < -142 && player4.Position.Z < -10 && player4.Position.Z > -225 && player4.Position.X > -160)
                {
                    player4.Position.X = -142;
                }
                if (player4.Position.X < -142 && player4.Position.Z > 10 && player4.Position.Z < 235 && player4.Position.X > -160)
                {
                    player4.Position.X = -142;
                }
                if (player4.Position.X <= -160 && player4.Position.Z > 40 && player4.Position.Z < 60)
                {
                    player4.Position.Z = 40;
                }
                if (player4.Position.X <= -160 && player4.Position.Z < -28 && player4.Position.Z > -48)
                {
                    player4.Position.Z = -28;
                }
                if (player4.Position.X < -236 && player4.Position.Z < 60 && player4.Position.Z > -48 && player4.Position.X > -256)
                {
                    player4.Position.X = -236;
                }
                if (player4.Position.X > -191 && player4.Position.Z < -10 && player4.Position.Z > -48 && player4.Position.X <= -160)
                {
                    player4.Position.X = -191;
                }
                if (player4.Position.X > -191 && player4.Position.Z > 10 && player4.Position.Z < 60 && player4.Position.X <= -160)
                {
                    player4.Position.X = -191;
                }
                if (player4.Position.Z >= 235 && player4.Position.X > 160)
                {
                    player4.Position.X = 160;
                }
                if (player4.Position.Z >= 235 && player4.Position.Z < 275 && player4.Position.X < 142 && player4.Position.X > -188)
                {
                    player4.Position.Z = 275;
                }
                if (player4.Position.Z > 307)
                {
                    player4.Position.Z = 307;
                }
                if (player4.Position.Z < 90 && player4.Position.Z >= 60 && player4.Position.X <= -188)
                {
                    player4.Position.Z = 90;
                }
                if (player4.Position.X > -210 && player4.Position.Z >= 60 && player4.Position.X <= -160 && player4.Position.Z < 275)
                {
                    player4.Position.X = -210;
                }
                if (player4.Position.X < -416)
                {
                    player4.Position.X = -416;
                }
                if (player4.Position.X > -44 && player4.Position.X <= 318 && player4.Position.Z < 115 && player4.Position.Z > -100 && player4.Position.Y >= 4)
                {
                    player4.oldY = -40;
                }
                if (player4.Position.X > 318 && player4.Position.X <= 393 && player4.Position.Z < 115 && player4.Position.Z > -100 && player4.Position.Y >= 4)
                {
                    player4.oldY = -128;
                }
                if (player4.Position.Y < 4)
                {
                    if (player4.Position.Y >= -40)
                    {
                        if (player4.Position.X < -24)
                        {
                            player4.Position.X = -24;
                        }
                    }
                    if (player4.Position.Y > -40)
                    {
                        player4.Position.Y = -40;
                    }
                    if (player4.Position.X > 373)
                    {
                        player4.Position.X = 373;
                    }
                    if (player4.Position.Z < -80)
                    {
                        player4.Position.Z = -80;
                    }
                    if (player4.Position.Z > 95)
                    {
                        player4.Position.Z = 95;
                    }
                    if (player4.Position.Y == -40)
                    {
                        if (player4.Position.X <= -24 && GamePad.GetState(PlayerIndex.Four).Buttons.A == ButtonState.Pressed)
                        {
                            player4.Position.X -= 40;
                            player4.Position.Y = 4;
                            player4.oldY = 4;
                            player4.canjump = true;
                        }
                        if (player4.Position.X >= 373 && GamePad.GetState(PlayerIndex.Four).Buttons.A == ButtonState.Pressed)
                        {
                            player4.Position.X += 40;
                            player4.Position.Y = 4;
                            player4.oldY = 4;
                            player4.canjump = true;
                        }
                        if (player4.Position.Z <= -80 && GamePad.GetState(PlayerIndex.Four).Buttons.A == ButtonState.Pressed)
                        {
                            player4.Position.Z -= 40;
                            player4.Position.Y = 4;
                            player4.oldY = 4;
                            player4.canjump = true;
                        }
                        if (player4.Position.Z >= 95 && GamePad.GetState(PlayerIndex.Four).Buttons.A == ButtonState.Pressed)
                        {
                            player4.Position.Z += 40;
                            player4.Position.Y = 4;
                            player4.oldY = 4;
                            player4.canjump = true;
                        }
                    }
                    if (player4.Position.Y < -40)
                    {
                        if (GamePad.GetState(PlayerIndex.Four).Buttons.A == ButtonState.Pressed)
                        {
                            player4.jumpspeed = 0.8f;
                            player4.oldY += 1;
                        }
                        if (player4.Position.X < 318)
                        {
                            player4.Position.X = 318;
                        }
                    }
                }
                if (player4.Position.X >= -160 && player4.Position.Z < 60 && player4.Position.Z > -48)
                {
                    player4.room = "janitorcloset";
                }
                else if (player4.Position.X > 318 && player4.Position.X <= 393 && player4.Position.Z < 115 && player4.Position.Z > -100 && player4.Position.Y < -95)
                {
                    player4.room = "deepwater";
                }
                else if (player4.Position.Z <= -244 && player4.Position.X > -193)
                {
                    player4.room = "hallway2";
                }
                else if (player4.Position.Z <= -48 && player4.Position.X <= -193)
                {
                    player4.room = "room2";
                }
                else if (player4.Position.Z >= 255 && player4.Position.X > -188)
                {
                    player4.room = "hallway1";
                }
                else if (player4.Position.Z > 60 && player4.Position.X <= -188)
                {
                    player4.room = "room1";
                }
                else
                {
                    player4.room = "poolroom";

                }
                player4.Position.Y += player4.jumpspeed;
                if (player4.jumpspeed < 0)
                {
                    player4.jumpspeed *= 1.05f;
                }
                if (player4.Position.Y >= -10)
                {
                    if (player4.Position.Y > (player4.oldY + 30))
                    {
                        player4.jumpspeed = -1.0f;
                    }
                    if (player4.Position.Y < player4.oldY)
                    {
                        player4.Position.Y = player4.oldY;
                        player4.canjump = true;
                    }
                }
                if (player4.Position.Y < -10)
                {
                    if (player4.Position.Y > (player4.oldY + 2))
                    {
                        player4.jumpspeed = -1.0f;
                    }
                    if (player4.Position.Y < player4.oldY)
                    {
                        player4.Position.Y = player4.oldY;
                    }
                }
                playerPosition.Y += jumpspeed;
                if (jumpspeed < 0)
                {
                    jumpspeed *= 1.05f;
                }
                if (playerPosition.Y >= -10)
                {
                    if (playerPosition.Y > (oldY + 30))
                    {
                        jumpspeed = -1.0f;
                    }
                    if (playerPosition.Y < oldY)
                    {
                        playerPosition.Y = oldY;
                        canjump = true;
                    }
                }
                if (playerPosition.Y < -10)
                {
                    if (playerPosition.Y > (oldY + 2))
                    {
                        jumpspeed = -1.0f;
                    }
                    if (playerPosition.Y < oldY)
                    {
                        playerPosition.Y = oldY;
                    }
                }
                BoundingSphere Remingtonsphere = new BoundingSphere(new Vector3(-350, 4, 200), Rem870_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere uzisphere = new BoundingSphere(new Vector3(-200, 4, -270), uzi_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere aksphere = new BoundingSphere(new Vector3(350, -120, 10), ak47_world.Meshes[0].BoundingSphere.Radius * 4);
                BoundingSphere magnumsphere = new BoundingSphere(new Vector3(150.0f, -40, 0), anaconda_world.Meshes[0].BoundingSphere.Radius * 4);
                if (playersphere.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "R870")
                {
                    weapon = "R870";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 9;
                }
                if (playersphere.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "uzi")
                {
                    weapon = "uzi";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 33;
                }
                if (playersphere.Intersects(aksphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "AK47")
                {
                    weapon = "AK47";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 31;
                }
                if (playersphere.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.One).Buttons.B == ButtonState.Pressed && weapon != "anaconda")
                {
                    weapon = "anaconda";
                    canshoot = true;
                    reloadTimeNum = 0;
                    reloading = false;
                    clip = 7;
                }
                if (playersphere2.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "R870")
                {
                    player2.weapon = "R870";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 9;
                }
                if (playersphere2.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "uzi")
                {
                    player2.weapon = "uzi";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 33;
                }
                if (playersphere2.Intersects(aksphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "AK47")
                {
                    player2.weapon = "AK47";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 31;
                }
                if (playersphere2.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Two).Buttons.B == ButtonState.Pressed && player2.weapon != "anaconda")
                {
                    player2.weapon = "anaconda";
                    player2.canshoot = true;
                    player2.reloadTimeNum = 0;
                    player2.reloading = false;
                    player2.clip = 7;
                }
                if (playersphere3.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "R870")
                {
                    player3.weapon = "R870";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 9;
                }
                if (playersphere3.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "uzi")
                {
                    player3.weapon = "uzi";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 33;
                }
                if (playersphere3.Intersects(aksphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "AK47")
                {
                    player3.weapon = "AK47";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 31;
                }
                if (playersphere3.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Three).Buttons.B == ButtonState.Pressed && player3.weapon != "anaconda")
                {
                    player3.weapon = "anaconda";
                    player3.canshoot = true;
                    player3.reloadTimeNum = 0;
                    player3.reloading = false;
                    player3.clip = 7;
                }
                if (playersphere4.Intersects(Remingtonsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "R870")
                {
                    player4.weapon = "R870";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 9;
                }
                if (playersphere4.Intersects(uzisphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "uzi")
                {
                    player4.weapon = "uzi";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 33;
                }
                if (playersphere4.Intersects(aksphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "AK47")
                {
                    player4.weapon = "AK47";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 31;
                }
                if (playersphere4.Intersects(magnumsphere) && GamePad.GetState(PlayerIndex.Four).Buttons.B == ButtonState.Pressed && player4.weapon != "anaconda")
                {
                    player4.weapon = "anaconda";
                    player4.canshoot = true;
                    player4.reloadTimeNum = 0;
                    player4.reloading = false;
                    player4.clip = 7;
                }
            }
            // TODO: Add your update logic here
            base.Update(gameTime);
        }
        protected void Input()
        {
            GamePadState currentState = GamePad.GetState(PlayerIndex.One);
            if (currentState.IsConnected)
            {
                if (mode == "menu")
                {
                    if (currentState.ThumbSticks.Right.Y > 0)
                    {
                        cursorrect.Y -= 4;
                    }
                    if (currentState.ThumbSticks.Right.Y < 0)
                    {
                        cursorrect.Y += 4;
                    }
                    if (currentState.ThumbSticks.Right.Y == 0)
                    {
                        cursorrect.Y += 0;
                    }
                    if (currentState.ThumbSticks.Right.X > 0)
                    {
                        cursorrect.X += 4;
                    }
                    if (currentState.ThumbSticks.Right.X < 0)
                    {
                        cursorrect.X -= 4;
                    }
                    if (currentState.ThumbSticks.Right.X == 0)
                    {
                        cursorrect.X += 0;
                    }
                    if (cursorrect.Intersects(noobRect) && currentState.Buttons.A == ButtonState.Pressed && lastState.Buttons.A == ButtonState.Released && allownoobweapons)
                    {
                        allownoobweapons = false;
                    }
                    if (cursorrect.Intersects(noobRect) && currentState.Buttons.B == ButtonState.Pressed && lastState.Buttons.B == ButtonState.Released && !allownoobweapons)
                    {
                        allownoobweapons = true;
                    }
                    if (currentState.Buttons.A == ButtonState.Pressed && lastState.Buttons.A == ButtonState.Released)
                    {
                        if (cursorrect.Intersects(buttonRect1))
                        {
                            mode = "coop";
                            playerPosition = new Vector3(random.Next(300) - 150, 4, random.Next(300) - 150);
                            player2.Position = new Vector3(random.Next(300) - 150, 16, random.Next(300) - 150);
                            weapon = startingweapon;
                            player2.weapon = player2.startingweapon;
                            player3.weapon = player3.startingweapon;
                            player4.weapon = player4.startingweapon;
                        }
                        if (cursorrect.Intersects(buttonRect2))
                        {
                            mode = "sp";
                            playerPosition = new Vector3(random.Next(300) - 150, 4, random.Next(300) - 150);
                            weapon = startingweapon;
                        }
                        if (cursorrect.Intersects(buttonRect3))
                        {
                            mode = "juggernaut2";
                            playerPosition = new Vector3(random.Next(3000) - 1500, 4, random.Next(3000) - 1500);
                            player2.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            for (int i = 0; i < 3; i++)
                            {
                                goodbots[i].position = new Vector3(random.Next(3000) - 1500, 4, random.Next(3000) - 1500);
                                goodbots[i].clip = 100;
                            }
                            for (int j = 0; j < 2; j++)
                            {
                                gorillas[j].position = new Vector3(random.Next(3000) - 1500, 0, random.Next(3000) - 1500);
                            }
                        }
                        if (cursorrect.Intersects(buttonRect4))
                        {
                            mode = "deathmatch2";
                            playerPosition = new Vector3(random.Next(150) - 75, 4, random.Next(300) - 150);
                            player2.Position = new Vector3(random.Next(150) - 75, 4, random.Next(300) - 150);
                        }
                        if (cursorrect.Intersects(buttonRect5))
                        {
                            mode = "tdm4";
                            playerPosition = new Vector3(random.Next(50) - 250, 4, random.Next(5) + 275);
                            player2.Position = new Vector3(random.Next(50) + 250, 4, random.Next(5) - 275);
                            player3.Position = new Vector3(random.Next(50) - 250, 4, random.Next(5) + 275);
                            player4.Position = new Vector3(random.Next(50) + 250, 4, random.Next(5) - 275);
                        }
                        if (cursorrect.Intersects(buttonRect6))
                        {
                            mode = "class";
                            dead = true;
                            player2.dead = true;
                            player3.dead = true;
                            player4.dead = true;
                            menu = "chooseclass";
                            player2.menu = "chooseclass";
                            player3.menu = "chooseclass";
                            player4.menu = "chooseclass";
                            playerPosition = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player2.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player3.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player4.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                        }
                        if (cursorrect.Intersects(buttonRect7))
                        {
                            mode = "juggernaut4";
                            playerPosition = new Vector3(random.Next(3000) - 1500, 4, random.Next(3000) - 1500);
                            player2.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player3.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player4.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            for (int i = 0; i < 2; i++)
                            {
                                gorillas[i].position = new Vector3(random.Next(3000) - 1500, 0, random.Next(3000) - 1500);
                            }
                        }
                        if (cursorrect.Intersects(weaponRect))
                        {
                            startingweapon = "uzi";
                            startingclip = 33;
                            p1rect = new Rectangle(weaponRect.X - 10, weaponRect.Y, 10, 10);
                        }
                        if (cursorrect.Intersects(weaponRect2))
                        {
                            startingweapon = "winchester1887";
                            clip = 6;
                            startingclip = 6;
                            p1rect = new Rectangle(weaponRect2.X - 10, weaponRect2.Y, 10, 10);
                        }
                        if (cursorrect.Intersects(weaponRect3))
                        {
                            startingweapon = "R700";
                            clip = 6;
                            startingclip = 6;
                            p1rect = new Rectangle(weaponRect3.X - 10, weaponRect3.Y, 10, 10);
                        }
                        if (cursorrect.Intersects(weaponRect4))
                        {
                            startingweapon = "anaconda";
                            clip = 7;
                            startingclip = 7;
                            p1rect = new Rectangle(weaponRect4.X - 10, weaponRect4.Y, 10, 10);
                        }
                        if (cursorrect.Intersects(weaponRect5))
                        {
                            startingweapon = "mp5k";
                            startingclip = 31;
                            p1rect = new Rectangle(weaponRect5.X - 10, weaponRect5.Y, 10, 10);
                        }
                        if (cursorrect.Intersects(weaponRect6))
                        {
                            startingweapon = "mac10";
                            clip = 33;
                            startingclip = 33;
                            p1rect = new Rectangle(weaponRect6.X - 10, weaponRect6.Y, 10, 10);
                        }
                        if (cursorrect.Intersects(weaponRect7))
                        {
                            startingweapon = "R870";
                            clip = 9;
                            startingclip = 9;
                            p1rect = new Rectangle(weaponRect7.X - 10, weaponRect7.Y, 10, 10);
                        }
                        if (cursorrect.Intersects(weaponRect8))
                        {
                            startingweapon = "m14";
                            clip = 21;
                            startingclip = 21;
                            p1rect = new Rectangle(weaponRect8.X - 10, weaponRect8.Y, 10, 10);
                        }
                    }

                }
                if (mode == "class")
                {
                    if (menu == "")
                    {
                        if (currentState.Buttons.Back == ButtonState.Pressed && lastState.Buttons.Back == ButtonState.Released)
                        {
                            menu = "chooseclass";
                        }
                    }
                    if (menu == "chooseclass")
                    {
                        if (currentState.Buttons.Start == ButtonState.Pressed && lastState.Buttons.Start == ButtonState.Released)
                        {
                            menu = "";
                        }
                        if (currentState.ThumbSticks.Right.Y > 0)
                        {
                            cursorrect.Y -= 4;
                        }
                        if (currentState.ThumbSticks.Right.Y < 0)
                        {
                            cursorrect.Y += 4;
                        }
                        if (currentState.ThumbSticks.Right.Y == 0)
                        {
                            cursorrect.Y += 0;
                        }
                        if (currentState.ThumbSticks.Right.X > 0)
                        {
                            cursorrect.X += 4;
                        }
                        if (currentState.ThumbSticks.Right.X < 0)
                        {
                            cursorrect.X -= 4;
                        }
                        if (currentState.ThumbSticks.Right.X == 0)
                        {
                            cursorrect.X += 0;
                        }
                        if (currentState.Buttons.A == ButtonState.Pressed && lastState.Buttons.A == ButtonState.Released && dead)
                        {
                            if (cursorrect.Intersects(godclassrect))
                            {
                                mpclass = "godclass";
                                if (godupgrade)
                                {
                                    clip = 31;
                                    weapon = "AK47";
                                }
                                if (!godupgrade)
                                {
                                    clip = 31;
                                    weapon = "AK74";
                                }
                            }
                            if (cursorrect.Intersects(gunnerclassrect))
                            {
                                mpclass = "gunner";
                                if (gunnerupgrade)
                                {
                                    clip = 1001;
                                    weapon = "m134";
                                }
                                if (!gunnerupgrade)
                                {
                                    clip = 33;
                                    weapon = "uzi";
                                }
                            }
                            if (cursorrect.Intersects(mggunnerclassrect))
                            {
                                mpclass = "mggunner";
                                if (mgupgrade)
                                {
                                    clip = 101;
                                    weapon = "pkm";
                                }
                                if (!mgupgrade)
                                {
                                    clip = 101;
                                    weapon = "M249";
                                }
                            }
                            if (cursorrect.Intersects(sniperclassrect))
                            {
                                mpclass = "sniper";
                                if (sniperupgrade)
                                {
                                    clip = 11;
                                    weapon = "m21";
                                }
                                if (!sniperupgrade)
                                {
                                    clip = 6;
                                    weapon = "R700Sniper";
                                }
                            }
                            if (cursorrect.Intersects(specoprect))
                            {
                                mpclass = "specops";
                                if (specopupgrade)
                                {
                                    clip = 31;
                                    weapon = "M4SOPMOD";
                                }
                                if (!specopupgrade)
                                {
                                    clip = 31;
                                    weapon = "mp5k";
                                }
                            }
                        }
                        if (currentState.Buttons.X == ButtonState.Pressed && lastState.Buttons.X == ButtonState.Released)
                        {
                            if (cursorrect.Intersects(godclassrect) && godclasskills >= 25)
                            {
                                godupgrade = true;
                            }
                            if (cursorrect.Intersects(gunnerclassrect) && allownoobweapons && gunnerkills >= 25)
                            {
                                gunnerupgrade = true;
                            }
                            if (cursorrect.Intersects(mggunnerclassrect) && allownoobweapons && mgkills >= 25)
                            {
                                mgupgrade = true;
                            }
                            if (cursorrect.Intersects(sniperclassrect) && sniperkills >= 25)
                            {
                                sniperupgrade = true;
                            }
                            if (cursorrect.Intersects(specoprect) && specopkills >= 25)
                            {
                                specopupgrade = true;
                            }
                        }
                        if (currentState.Buttons.B == ButtonState.Pressed && lastState.Buttons.B == ButtonState.Released)
                        {
                            if (cursorrect.Intersects(godclassrect))
                            {
                                godupgrade = false;
                            }
                            if (cursorrect.Intersects(gunnerclassrect))
                            {
                                gunnerupgrade = false;
                            }
                            if (cursorrect.Intersects(mggunnerclassrect))
                            {
                                mgupgrade = false;
                            }
                            if (cursorrect.Intersects(sniperclassrect))
                            {
                                sniperupgrade = false;
                            }
                            if (cursorrect.Intersects(specoprect))
                            {
                                specopupgrade = false;
                            }
                        }
                    }
                    else
                    {
                        if (currentState.Buttons.Y == ButtonState.Pressed && lastState.Buttons.Y == ButtonState.Released)
                        {
                            if (mpclass == "godclass")
                            {
                                if (weapon == "AK74")
                                {
                                    if (ammo545 >= clip - 1)
                                    {
                                        ammo545 -= (30 - (clip - 1));
                                    }
                                    weapon = "python";
                                    if (ammo357magnum > 5)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo357magnum += 6;

                                    }
                                    if (ammo357magnum <= 5)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "AK47")
                                {
                                    if (ammo762x39 >= clip - 1)
                                    {
                                        ammo762x39 -= (30 - (clip - 1));
                                    }
                                    weapon = "glock18";
                                    if (ammo9mm > 32)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo9mm += 33;
                                    }
                                    if (ammo9mm <= 32)
                                    {
                                        clip = 0;
                                    }
                                }
                            }
                            if (mpclass == "gunner")
                            {
                                if (weapon == "uzi")
                                {
                                    if (ammoUzi >= clip - 1)
                                    {
                                        ammoUzi -= (32 - (clip - 1));
                                    }
                                    weapon = "volcanic";
                                    if (ammo41 > 9)
                                    {
                                        clip = 11;
                                        reloading = false;
                                        reloadTimeNum = 0;
                                    }
                                    if (ammo41 <= 9)
                                    {
                                        clip = 0;
                                        reloading = true;
                                    }
                                }
                                if (weapon == "m134")
                                {
                                    weapon = "volcanic";
                                    if (ammo41 > 9)
                                    {
                                        clip = 11;
                                        reloading = false;
                                        reloadTimeNum = 0;
                                    }
                                    if (ammo41 <= 9)
                                    {
                                        clip = 0;
                                        reloading = true;
                                    }

                                }
                            }
                            if (mpclass == "mggunner")
                            {
                                if (ammo556 >= clip - 1)
                                {
                                    ammo556 -= (100 - (clip - 1));
                                }
                                if (weapon == "M249")
                                {
                                    weapon = "M9";
                                    if (ammo9mm > 15)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo9mm += 15;
                                    }
                                    if (ammo9mm <= 15)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "pkm")
                                {
                                    if (ammo762x54 >= clip - 1)
                                    {
                                        ammo762x54 -= (100 - (clip - 1));
                                    }
                                    weapon = "magnum24";
                                    if (ammo20mm > 7)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo20mm += 8;
                                    }
                                    if (ammo20mm <= 7)
                                    {
                                        clip = 0;
                                    }
                                }
                            }
                            if (mpclass == "sniper")
                            {
                                if (weapon == "R700Sniper")
                                {
                                    if (ammo3006 >= clip - 1)
                                    {
                                        ammo3006 -= (5 - (clip - 1));
                                    }
                                    weapon = "M9";
                                    if (ammo9mm > 15)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo9mm += 15;
                                    }
                                    if (ammo9mm <= 15)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "m21")
                                {
                                    if (ammo762x51 >= clip - 1)
                                    {
                                        ammo762x51 -= (10 - (clip - 1));
                                    }
                                    weapon = "dbshotgun";
                                    if (ammo12Gauge > 1)
                                    {
                                        clip = 3;
                                        reloading = false;
                                        reloadTimeNum = 0;
                                    }
                                    if (ammo12Gauge <= 1)
                                    {
                                        clip = 0;
                                        reloading = true;
                                    }
                                }
                            }
                            if (mpclass == "specops")
                            {
                                if (weapon == "mp5k" && !specopupgrade)
                                {
                                    if (ammo9mm >= clip - 1)
                                    {
                                        ammo9mm -= (30 - (clip - 1));
                                    }
                                    weapon = "M9";
                                    if (ammo9mm > 15)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo9mm += 15;
                                    }
                                    if (ammo9mm <= 15)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "M4SOPMOD")
                                {
                                    if (ammo556 >= clip - 1)
                                    {
                                        ammo556 -= (30 - (clip - 1));
                                    }
                                    weapon = "mp5k";
                                    if (ammo9mm > 29)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo9mm += 30;
                                    }
                                    if (ammo9mm <= 29)
                                    {
                                        clip = 0;
                                    }
                                }
                            }
                        }
                        if (currentState.Buttons.RightShoulder == ButtonState.Pressed && lastState.Buttons.RightShoulder == ButtonState.Released)
                        {
                            if (mpclass == "godclass")
                            {
                                if (weapon == "python")
                                {
                                    if (ammo357magnum >= clip - 1)
                                    {
                                        ammo357magnum -= (6 - (clip - 1));
                                    }
                                    weapon = "AK74";
                                    if (ammo545 > 29)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo545 += 30;
                                    }
                                    if (ammo545 <= 29)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "glock18")
                                {
                                    if (ammo9mm >= clip - 1)
                                    {
                                        ammo9mm -= (33 - (clip - 1));
                                    }
                                    weapon = "AK47";
                                    if (ammo762x39 > 29)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo762x39 += 30;
                                    }
                                    if (ammo762x39 <= 29)
                                    {
                                        clip = 0;
                                    }
                                }
                            }
                            if (mpclass == "gunner")
                            {
                                if (weapon == "volcanic" && !gunnerupgrade)
                                {
                                    if (ammo41 >= clip - 1)
                                    {
                                        ammo41 -= (10 - (clip - 1));
                                    }
                                    weapon = "uzi";
                                    if (ammoUzi > 31)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammoUzi += 32;
                                    }
                                    if (ammoUzi <= 31)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "volcanic" && gunnerupgrade)
                                {
                                    if (ammo41 >= clip - 1)
                                    {
                                        ammo41 -= (10 - (clip - 1));
                                    }
                                    weapon = "m134";
                                    clip = 1001;
                                }
                            }
                            if (mpclass == "mggunner")
                            {
                                if (weapon == "M9")
                                {
                                    if (ammo9mm >= clip - 1)
                                    {
                                        ammo9mm -= (15 - (clip - 1));
                                    }
                                    weapon = "M249";
                                    if (ammo556 > 99)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo556 += 100;
                                    }
                                    if (ammo556 <= 99)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "magnum24")
                                {
                                    if (ammo20mm >= clip - 1)
                                    {
                                        ammo20mm -= (8 - (clip - 1));
                                    }
                                    weapon = "pkm";
                                    if (ammo762x54 > 99)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo762x54 += 100;
                                    }
                                    if (ammo762x54 <= 99)
                                    {
                                        clip = 0;
                                    }
                                }
                            }
                            if (mpclass == "sniper")
                            {
                                if (weapon == "M9")
                                {
                                    if (ammo9mm >= clip - 1)
                                    {
                                        ammo9mm -= (15 - (clip - 1));
                                    }
                                    weapon = "R700Sniper";
                                    if (ammo3006 > 4)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo3006 += 5;
                                    }
                                    if (ammo3006 <= 4)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "dbshotgun")
                                {
                                    if (ammo12Gauge >= clip - 1)
                                    {
                                        ammo12Gauge -= (2 - (clip - 1));
                                    }
                                    weapon = "m21";
                                    if (ammo762x51 > 9)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo762x51 += 10;
                                    }
                                    if (ammo762x51 <= 9)
                                    {
                                        clip = 0;
                                    }
                                }

                            }
                            if (mpclass == "specops")
                            {
                                if (weapon == "M9")
                                {
                                    if (ammo9mm >= clip - 1)
                                    {
                                        ammo9mm -= (15 - (clip - 1));
                                    }
                                    weapon = "mp5k";
                                    if (ammo9mm > 29)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo9mm += 30;
                                    }
                                    if (ammo9mm <= 29)
                                    {
                                        clip = 0;
                                    }
                                }
                                if (weapon == "mp5k" && specopupgrade)
                                {
                                    if (ammo9mm >= clip - 1)
                                    {
                                        ammo9mm -= (30 - (clip - 1));
                                    }
                                    weapon = "M4SOPMOD";
                                    if (ammo556 > 29)
                                    {
                                        clip = 0;
                                        reloading = true;
                                        reloadTimeNum = 1000;
                                        ammo556 += 30;
                                    }
                                    if (ammo556 <= 29)
                                    {
                                        clip = 0;
                                    }
                                }

                            }

                        }
                    }
                }
                if (mode == "coop" || mode == "sp" || mode == "juggernaut2" || mode == "deathmatch2" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
                {
                    freeLook = MathHelper.Clamp(freeLook, MathHelper.ToRadians(-89.9f), MathHelper.ToRadians(89.9f));
                    if (!dead && menu != "chooseclass")
                    {
                        if (!ads)
                        {
                            Rotation -= currentState.ThumbSticks.Right.X * 0.05f;
                            freeLook += currentState.ThumbSticks.Right.Y * 0.02f;
                        }
                        if (ads)
                        {
                            Rotation -= currentState.ThumbSticks.Right.X * 0.025f;
                            freeLook += currentState.ThumbSticks.Right.Y * 0.01f;
                        }
                        Vector3 velocityAdd = Vector3.Zero;
                        if (currentState.ThumbSticks.Left.Y > 0)
                        {
                            velocityAdd.Z -= 2.0f;
                        }
                        if (currentState.ThumbSticks.Left.Y < 0)
                        {
                            velocityAdd.Z += 2.0f;
                        }
                        if (currentState.ThumbSticks.Left.X > 0)
                        {
                            velocityAdd.X += 2.0f;
                        }
                        if (currentState.ThumbSticks.Left.X < 0)
                        {
                            velocityAdd.X -= 2.0f;
                        }
                        if (currentState.ThumbSticks.Left.Y > 0 && currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                        {
                            velocityAdd.Z -= 4.5f;
                        }
                        if (currentState.ThumbSticks.Left.Y < 0 && currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                        {
                            velocityAdd.Z += 4.5f;
                        }
                        if (currentState.ThumbSticks.Left.X > 0 && currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                        {
                            velocityAdd.X += 4.5f;
                        }
                        if (currentState.ThumbSticks.Left.X < 0 && currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                        {
                            velocityAdd.X -= 4.5f;
                        }
                        Matrix moveMatrix = Matrix.CreateRotationY(Rotation);
                        playerPosition += Vector3.Transform(velocityAdd, moveMatrix);
                        if (currentState.Buttons.A == ButtonState.Pressed && lastState.Buttons.A == ButtonState.Released)
                        {
                            if (canjump && posture == "standing")
                            {
                                jumpspeed = 1.5f;
                                canjump = false;
                                oldY = playerPosition.Y;
                            }
                            if (posture == "crouching")
                            {
                                posture = "standing";
                            }
                        }
                        if (currentState.Buttons.LeftStick == ButtonState.Pressed && lastState.Buttons.LeftStick == ButtonState.Released)
                        {
                            if (posture == "standing")
                            {
                                posture = "crouching";
                            }
                        }
                        if (weapon == "M9")
                        {
                            if (ammo9mm <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 10)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("M9Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo9mm >= 15)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("M9Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 16;
                                ammo9mm -= 15;
                            }
                        }
                        if (weapon == "magnum24")
                        {
                            if (ammo20mm <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 10)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("44Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo20mm >= 8)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("M9Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 9;
                                ammo20mm -= 8;
                            }
                        }
                        if (weapon == "uzi")
                        {
                            if (ammoUzi <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 5)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("uzi_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammoUzi >= 32)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammoUzi < 32 && ammoUzi > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("uzi_reload");
                            }
                            if (reloadTimeNum >= 150 && ammoUzi >= 32)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 33;
                                ammoUzi -= 32;
                            }
                            if (reloadTimeNum >= 150 && ammoUzi < 32 && ammoUzi > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammoUzi + 1;
                                ammoUzi = 0;
                            }
                        }
                        if (weapon == "hipower")
                        {
                            if (ammo9mm <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 8)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("M9Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo9mm >= 13)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("M9Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 14;
                                ammo9mm -= 13;
                            }
                        }
                        if (weapon == "mac10")
                        {
                            if (ammo45 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 5)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("357_Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo45 >= 32)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo45 < 32 && ammo45 > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("uzi_reload");
                            }
                            if (reloadTimeNum >= 150 && ammo45 >= 32)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 33;
                                ammo45 -= 32;
                            }
                            if (reloadTimeNum >= 150 && ammo45 < 32 && ammo45 > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo45 + 1;
                                ammo45 = 0;
                            }
                        }
                        if (weapon == "pkm")
                        {
                            if (ammo762x54 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 5)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("m14_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo762x54 >= 100)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo762x54 < 100 && ammo762x54 > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("m249_reload");
                            }
                            if (reloadTimeNum >= 300 && ammo762x54 >= 100)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 101;
                                ammo762x54 -= 100;
                            }
                            if (reloadTimeNum >= 300 && ammo762x54 < 100 && ammo762x54 > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo762x54 + 1;
                                ammo762x54 = 0;
                            }
                        }
                        if (weapon == "m134")
                        {
                            if (ammonull <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 2)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("mp5k_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammonull >= 1000)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammonull < 1000 && ammonull > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("m249_reload");
                            }
                            if (reloadTimeNum >= 300 && ammonull >= 1000)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 1001;
                                ammonull -= 1000;
                            }
                            if (reloadTimeNum >= 300 && ammonull < 1000 && ammonull > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammonull + 1;
                                ammonull = 0;
                            }
                        }
                        if (weapon == "M4SOPMOD")
                        {
                            if (ammo556 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 3)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("uzi_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo556 >= 30)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo556 < 30 && ammo556 > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("M9Reload");
                            }
                            if (reloadTimeNum >= 200 && ammo556 >= 30)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 31;
                                ammo556 -= 30;
                            }
                            if (reloadTimeNum >= 200 && ammo556 < 30 && ammo556 > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo556 + 1;
                                ammo556 = 0;
                            }
                        }
                        if (weapon == "hk21")
                        {
                            if (ammo762x51 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 4)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("m14_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo762x51 >= 100)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo762x51 < 100 && ammo762x51 > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("m249_reload");
                            }
                            if (reloadTimeNum >= 300 && ammo762x51 >= 100)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 101;
                                ammo762x51 -= 100;
                            }
                            if (reloadTimeNum >= 300 && ammo762x51 < 100 && ammo762x51 > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo762x51 + 1;
                                ammo762x51 = 0;
                            }
                        }
                        if (weapon == "AK47")
                        {
                            if (ammo762x39 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 5)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("AK47_Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo762x39 >= 30)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo762x39 < 30 && ammo762x39 > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("AK47_Reload");
                            }
                            if (reloadTimeNum >= 150 && ammo762x39 >= 30)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 31;
                                ammo762x39 -= 30;
                            }
                            if (reloadTimeNum >= 150 && ammo762x39 < 30 && ammo762x39 > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo762x39 + 1;
                                ammo762x39 = 0;
                            }
                        }
                        if (weapon == "AK74")
                        {
                            if (ammo545 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 4)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("m249_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo545 >= 30)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo545 < 30 && ammo545 > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("AK47_Reload");
                            }
                            if (reloadTimeNum >= 150 && ammo545 >= 30)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 31;
                                ammo545 -= 30;
                            }
                            if (reloadTimeNum >= 150 && ammo545 < 30 && ammo545 > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo545 + 1;
                                ammo545 = 0;
                            }
                        }
                        if (weapon == "m21")
                        {
                            if (ammo762x51 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 20)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("m14_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo762x51 >= 10)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("AK47_Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 11;
                                ammo762x51 -= 10;
                            }
                        }
                        if (weapon == "svd")
                        {
                            if (ammo762x54 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 25)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("svd_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo762x54 >= 5)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("AK47_Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 6;
                                ammo762x54 -= 5;
                            }
                        }
                        if (weapon == "m14")
                        {
                            if (ammo762x51 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 10)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("m14_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo762x51 >= 20)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("AK47_Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 21;
                                ammo762x51 -= 20;
                            }
                        }
                        if (weapon == "M249")
                        {
                            if (ammo556 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 4)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("m249_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo556 >= 100)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo556 < 100 && ammo556 > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("m249_reload");
                            }
                            if (reloadTimeNum >= 250 && ammo556 >= 100)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 101;
                                ammo556 -= 100;
                            }
                            if (reloadTimeNum >= 250 && ammo556 < 100 && ammo556 > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo556 + 1;
                                ammo556 = 0;
                            }
                        }
                        if (weapon == "mp5k")
                        {
                            if (ammo9mm <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 3)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("mp5k_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo9mm >= 30)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo9mm < 30 && ammo9mm > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("mp5k_reload");
                            }
                            if (reloadTimeNum >= 150 && ammo9mm >= 30)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 31;
                                ammo9mm -= 30;
                            }
                            if (reloadTimeNum >= 150 && ammo9mm < 30 && ammo9mm > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo9mm + 1;
                                ammo9mm = 0;
                            }
                        }
                        if (weapon == "mp40")
                        {
                            if (ammo9mm <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 6)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("mp5k_fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo9mm >= 32)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo9mm < 32 && ammo9mm > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("mp5k_reload");
                            }
                            if (reloadTimeNum >= 180 && ammo9mm >= 32)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 33;
                                ammo9mm -= 32;
                            }
                            if (reloadTimeNum >= 180 && ammo9mm < 32 && ammo9mm > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo9mm + 1;
                                ammo9mm = 0;
                            }
                        }
                        if (weapon == "medic")
                        {
                            if (medpacks <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 30)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                }
                            }
                            if (clip <= 0 && medpacks >= 1)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum >= 300)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 2;
                                medpacks -= 1;
                            }
                        }
                        if (weapon == "anaconda")
                        {
                            if (ammo44magnum <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 30)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("44Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo44magnum >= 6)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("44Reload");
                            }
                            if (reloadTimeNum >= 250)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 7;
                                ammo44magnum -= 6;
                            }
                        }
                        if (weapon == "S&W500")
                        {
                            if (ammo500magnum <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 37)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("44Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo500magnum >= 5)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("44Reload");
                            }
                            if (reloadTimeNum >= 250)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 6;
                                ammo500magnum -= 5;
                            }
                        }
                        if (weapon == "glock18")
                        {
                            if (ammo9mm <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 3)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("M9Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo9mm > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("M9Reload");
                            }
                            if (reloadTimeNum >= 150 && ammo9mm >= 33)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 34;
                                ammo9mm -= 33;
                            }
                            if (reloadTimeNum >= 150 && ammo9mm > 0 && ammo9mm <= 32)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo9mm + 1;
                                ammo9mm = 0;
                            }
                        }
                        if (weapon == "python")
                        {
                            if (ammo357magnum <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 20)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("357_Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo357magnum >= 6)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("44Reload");
                            }
                            if (reloadTimeNum >= 250)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 7;
                                ammo357magnum -= 6;
                            }
                        }
                        if (weapon == "dbshotgun")
                        {
                            if (ammo12Gauge <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 10)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("SPASFire");
                                    }
                                }
                            }
                            if (clip <= 0)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (clip < 3 && currentState.Buttons.X == ButtonState.Pressed)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (reloading)
                            {
                                reloadTimeNum += 1;
                                if (ammo12Gauge > 0)
                                {
                                    if (reloadTimeNum == 70 && clip < 3)
                                    {
                                        reloadTimeNum = 0;
                                        clip += 1;
                                        if (clip >= 2)
                                        {
                                            ammo12Gauge -= 1;
                                        }
                                    }
                                    if (currentState.Triggers.Right > 0 && lastState.Triggers.Right <= 0 && clip >= 2)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                    }
                                    if (clip == 3)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                    }
                                }
                                if (ammo12Gauge <= 0)
                                {
                                    reloading = false;
                                }
                            }
                        }
                        if (weapon == "rpg")
                        {
                            if (ammorpg <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 20)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("357_Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammorpg >= 1)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("44Reload");
                            }
                            if (reloadTimeNum >= 175)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 2;
                                ammorpg -= 1;
                            }
                        }
                        if (weapon == "winchester1887")
                        {
                            if (ammo10Gauge <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 80)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firepause == 1)
                                {
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("SPASFire");
                                    }
                                }
                            }
                            if (clip <= 0)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (clip < 6 && currentState.Buttons.X == ButtonState.Pressed)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (reloading)
                            {
                                reloadTimeNum += 1;
                                if (ammo10Gauge > 0)
                                {
                                    if (reloadTimeNum == 20 && clip < 6)
                                    {
                                        reloadTimeNum = 0;
                                        clip += 1;
                                        if (clip >= 2)
                                        {
                                            ammo10Gauge -= 1;
                                        }
                                    }
                                    if (currentState.Triggers.Right > 0 && lastState.Triggers.Right <= 0 && clip >= 2)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("SPASPump");
                                    }
                                    if (clip == 6)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("SPASPump");
                                    }
                                }
                                if (ammo10Gauge <= 0)
                                {
                                    reloading = false;
                                }
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("SPASReload");
                            }
                        }
                        if (weapon == "R870")
                        {
                            if (ammo12Gauge <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 55)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firepause == 1)
                                {
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("SPASFire");
                                    }
                                }
                            }
                            if (clip <= 0)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (clip < 9 && currentState.Buttons.X == ButtonState.Pressed)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (reloading)
                            {
                                reloadTimeNum += 1;
                                if (ammo12Gauge > 0)
                                {
                                    if (reloadTimeNum == 20 && clip < 9)
                                    {
                                        reloadTimeNum = 0;
                                        clip += 1;
                                        if (clip >= 2)
                                        {
                                            ammo12Gauge -= 1;
                                        }
                                    }
                                    if (currentState.Triggers.Right > 0 && lastState.Triggers.Right <= 0 && clip >= 2)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("SPASPump");
                                    }
                                    if (clip == 9)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("SPASPump");
                                    }
                                }
                                if (ammo12Gauge <= 0)
                                {
                                    reloading = false;
                                }
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("SPASReload");
                            }
                        }
                        if (weapon == "volcanic")
                        {
                            if (ammo41 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 40)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firepause == 1)
                                {
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("M9Fire");
                                    }
                                }
                            }
                            if (clip <= 0)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (clip < 6 && currentState.Buttons.X == ButtonState.Pressed)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (reloading)
                            {
                                reloadTimeNum += 1;
                                if (ammo41 > 0)
                                {
                                    if (reloadTimeNum == 14 && clip < 11)
                                    {
                                        reloadTimeNum = 0;
                                        clip += 1;
                                        if (clip >= 2)
                                        {
                                            ammo41 -= 1;
                                        }
                                    }
                                    if (currentState.Triggers.Right > 0 && lastState.Triggers.Right <= 0 && clip >= 2)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("R700Rechamber");
                                    }
                                    if (clip == 11)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("R700Rechamber");
                                    }
                                }
                                if (ammo41 <= 0)
                                {
                                    reloading = false;
                                }
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("SPASReload");
                            }
                        }
                        if (weapon == "R700" || weapon == "R700Sniper")
                        {
                            if (ammo3006 <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 80)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firepause == 1)
                                {
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("R700Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo3006 >= 5)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("R700Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 6;
                                ammo3006 -= 5;
                            }
                        }
                        if (weapon == "cz550")
                        {
                            if (ammo600overkill <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 80)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firepause == 1)
                                {
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("R700Fire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo600overkill >= 3)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("R700Reload");
                            }
                            if (reloadTimeNum >= 150)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 4;
                                ammo600overkill -= 3;
                            }
                        }
                        if (weapon == "aa12")
                        {
                            if (ammo12Gauge <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 10)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("SPASFire");
                                    }
                                }
                            }
                            if (clip <= 0 && ammo12Gauge >= 32)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;

                            }
                            if (clip <= 0 && ammo12Gauge < 32 && ammo12Gauge > 0)
                            {
                                reloading = true;
                                canshoot = false;
                                reloadTimeNum += 1;
                                firing = false;
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("AK47_Reload");
                            }
                            if (reloadTimeNum >= 150 && ammo12Gauge >= 32)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = 33;
                                ammo12Gauge -= 32;
                            }
                            if (reloadTimeNum >= 150 && ammo12Gauge < 32 && ammo12Gauge > 0)
                            {
                                reloadTimeNum = 0;
                                reloading = false;
                                canshoot = true;
                                clip = ammo12Gauge + 1;
                                ammo12Gauge = 0;
                            }
                        }
                        if (weapon == "SPAS12")
                        {
                            if (ammo12Gauge <= 0)
                            {
                                if (clip > 0)
                                {
                                    canshoot = true;
                                    reloading = false;
                                }
                                if (clip <= 0)
                                {
                                    canshoot = false;
                                    reloading = false;
                                    firing = false;
                                }
                            }
                            if (canshoot)
                            {

                                if (currentState.Triggers.Right > 0 && firepause == 0)
                                {
                                    if (clip > 0)
                                    {
                                        firing = true;
                                        firepause = 1;
                                    }
                                }
                                if (lastState.Triggers.Right > 0)
                                {
                                    firing = false;
                                    if (firepause >= 30)
                                    {
                                        firepause = 0;
                                        if (clip > 0)
                                        {
                                            firing = true;
                                        }
                                    }
                                }
                                firepause += 1;
                                if (firing)
                                {
                                    clip -= 1;
                                    if (clip > 0)
                                    {
                                        gunsoundbank.PlayCue("SPASFire");
                                    }
                                }
                            }
                            if (clip <= 0)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (clip < 9 && currentState.Buttons.X == ButtonState.Pressed)
                            {
                                reloading = true;
                                canshoot = false;
                                firing = false;
                            }
                            if (reloading)
                            {
                                reloadTimeNum += 1;
                                if (ammo12Gauge > 0)
                                {
                                    if (reloadTimeNum == 20 && clip < 9)
                                    {
                                        reloadTimeNum = 0;
                                        clip += 1;
                                        if (clip >= 2)
                                        {
                                            ammo12Gauge -= 1;
                                        }
                                    }
                                    if (currentState.Triggers.Right > 0 && lastState.Triggers.Right <= 0 && clip >= 2)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("SPASPump");
                                    }
                                    if (clip == 9)
                                    {
                                        reloadTimeNum = 0;
                                        canshoot = true;
                                        reloading = false;
                                        firing = false;
                                        gunsoundbank.PlayCue("SPASPump");
                                    }
                                }
                                if (ammo12Gauge <= 0)
                                {
                                    reloading = false;
                                }
                            }
                            if (reloadTimeNum == 1)
                            {
                                gunsoundbank.PlayCue("SPASReload");
                            }
                        }
                        if (currentState.Triggers.Left > 0)
                        {
                            ads = true;
                        }
                        if (currentState.Triggers.Left <= 0)
                        {
                            ads = false;
                        }
                        if (currentState.Triggers.Right <= 0)
                        {
                            firing = false;
                        }
                    }
                    if (dead)
                    {
                        if (currentState.Buttons.Start == ButtonState.Pressed)
                        {
                            dead = false;
                            if (mode == "coop" || mode == "sp")
                            {
                                weapon = startingweapon;
                                clip = startingclip;
                            }
                            else if (mode == "class")
                            {
                                if (mpclass == "specops")
                                {
                                    if (!specopupgrade)
                                    {
                                        weapon = "mp5k";
                                        clip = 31;
                                    }
                                    if (specopupgrade)
                                    {
                                        weapon = "M4SOPMOD";
                                        clip = 31;
                                    }
                                }
                                else if (mpclass == "sniper")
                                {
                                    if (!sniperupgrade)
                                    {
                                        weapon = "R700Sniper";
                                        clip = 6;
                                    }
                                    if (sniperupgrade)
                                    {
                                        weapon = "m21";
                                        clip = 11;
                                    }
                                }
                                else if (mpclass == "mggunner")
                                {
                                    if (!mgupgrade)
                                    {
                                        weapon = "M249";
                                        clip = 101;
                                    }
                                    if (mgupgrade)
                                    {
                                        weapon = "pkm";
                                        clip = 101;
                                    }
                                }
                                else if (mpclass == "gunner")
                                {
                                    if (!gunnerupgrade)
                                    {
                                        weapon = "uzi";
                                        clip = 33;
                                    }
                                    if (gunnerupgrade)
                                    {
                                        weapon = "m134";
                                        clip = 1001;
                                    }
                                }
                                else if (mpclass == "godclass")
                                {
                                    if (!godupgrade)
                                    {
                                        weapon = "AK74";
                                        clip = 31;
                                    }
                                    if (godupgrade)
                                    {
                                        weapon = "AK47";
                                        clip = 31;
                                    }
                                }
                                else
                                {
                                    mpclass = "specops";
                                    if (!specopupgrade)
                                    {
                                        weapon = "mp5k";
                                        clip = 31;
                                    }
                                    if (specopupgrade)
                                    {
                                        weapon = "M4SOPMOD";
                                        clip = 31;
                                    }
                                }
                            }
                            else
                            {
                                clip = 101;
                                weapon = "hk21";
                            }
                            health = 100;
                            ammo9mm = 420;
                            ammo44magnum = 54;
                            ammo3006 = 60;
                            ammo12Gauge = 64;
                            ammo10Gauge = 40;
                            ammoUzi = 320;
                            ammo45 = 224;
                            ammorpg = 5;
                            ammo762x39 = 180;
                            ammo762x54 = 300;
                            ammo762x51 = 100;
                            ammonull = 0;
                            ammo357magnum = 90;
                            ammo500magnum = 45;
                            ammo556 = 300;
                            ammo545 = 360;
                            medpacks = 2;
                            ammo20mm = 104;
                            ammo41 = 600;
                            if (mode != "tdm4" && mode != "class")
                            {
                                playerPosition = new Vector3(random.Next(300) - 150, -5, random.Next(300) - 150);
                            }
                            if (mode == "class")
                            {
                                playerPosition = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                                oldY = 16;
                            }
                            if (mode == "tdm4")
                            {
                                int spawnposition = random.Next(4);
                                if (spawnposition == 0)
                                {
                                    room = "room1";
                                    playerPosition = new Vector3(-240, 4, 200);
                                }
                                if (spawnposition == 1)
                                {
                                    room = "janitorcloset";
                                    playerPosition = new Vector3(-170, 4, 0);
                                }
                                if (spawnposition == 2)
                                {
                                    room = "room2";
                                    playerPosition = new Vector3(-240, 4, -200);
                                }
                                if (spawnposition == 3)
                                {
                                    room = "poolroom";
                                    playerPosition = new Vector3(410, 4, 50);
                                }
                            }
                            reloading = false;
                            canshoot = true;
                        }
                    }
                }

            }
            lastState = currentState;
        }
        protected void Input2()
        {
            player2.currentState = GamePad.GetState(PlayerIndex.Two);
            if (mode == "menu")
            {
                if (player2.currentState.ThumbSticks.Right.Y > 0)
                {
                    cursorrect2.Y -= 4;
                }
                if (player2.currentState.ThumbSticks.Right.Y < 0)
                {
                    cursorrect2.Y += 4;
                }
                if (player2.currentState.ThumbSticks.Right.Y == 0)
                {
                    cursorrect2.Y += 0;
                }
                if (player2.currentState.ThumbSticks.Right.X > 0)
                {
                    cursorrect2.X += 4;
                }
                if (player2.currentState.ThumbSticks.Right.X < 0)
                {
                    cursorrect2.X -= 4;
                }
                if (player2.currentState.ThumbSticks.Right.X == 0)
                {
                    cursorrect2.X += 0;
                }
                if (player2.currentState.Buttons.A == ButtonState.Pressed && player2.lastState.Buttons.A == ButtonState.Released)
                {
                    if (cursorrect2.Intersects(weaponRect))
                    {
                        player2.startingweapon = "uzi";
                        player2.startingclip = 33;
                        p2rect = new Rectangle(weaponRect.X - 10, weaponRect.Y + 10, 10, 10);
                    }
                    if (cursorrect2.Intersects(weaponRect2))
                    {
                        player2.startingweapon = "winchester1887";
                        player2.clip = 6;
                        player2.startingclip = 6;
                        p2rect = new Rectangle(weaponRect2.X - 10, weaponRect2.Y + 10, 10, 10);
                    }
                    if (cursorrect2.Intersects(weaponRect3))
                    {
                        player2.startingweapon = "R700";
                        player2.clip = 6;
                        player2.startingclip = 6;
                        p2rect = new Rectangle(weaponRect3.X - 10, weaponRect3.Y + 10, 10, 10);
                    }
                    if (cursorrect2.Intersects(weaponRect4))
                    {
                        player2.startingweapon = "anaconda";
                        player2.clip = 7;
                        player2.startingclip = 7;
                        p2rect = new Rectangle(weaponRect4.X - 10, weaponRect4.Y + 10, 10, 10);
                    }
                    if (cursorrect2.Intersects(weaponRect5))
                    {
                        player2.startingweapon = "mp5k";
                        player2.startingclip = 31;
                        p2rect = new Rectangle(weaponRect5.X - 10, weaponRect5.Y + 10, 10, 10);
                    }
                    if (cursorrect2.Intersects(weaponRect6))
                    {
                        player2.startingweapon = "mac10";
                        player2.clip = 33;
                        player2.startingclip = 33;
                        p2rect = new Rectangle(weaponRect6.X - 10, weaponRect6.Y + 10, 10, 10);
                    }
                    if (cursorrect2.Intersects(weaponRect7))
                    {
                        player2.startingweapon = "R870";
                        player2.clip = 9;
                        player2.startingclip = 9;
                        p2rect = new Rectangle(weaponRect7.X - 10, weaponRect7.Y + 10, 10, 10);
                    }
                    if (cursorrect2.Intersects(weaponRect8))
                    {
                        player2.startingweapon = "m14";
                        player2.clip = 21;
                        player2.startingclip = 21;
                        p2rect = new Rectangle(weaponRect8.X - 10, weaponRect8.Y + 10, 10, 10);
                    }
                }
            }
            if (mode == "class")
            {
                if (player2.menu == "")
                {
                    if (player2.currentState.Buttons.Back == ButtonState.Pressed && player2.lastState.Buttons.Back == ButtonState.Released)
                    {
                        player2.menu = "chooseclass";
                    }
                }
                if (player2.menu == "chooseclass")
                {
                    if (player2.currentState.Buttons.Start == ButtonState.Pressed && player2.lastState.Buttons.Start == ButtonState.Released)
                    {
                        player2.menu = "";
                    }
                    if (player2.currentState.ThumbSticks.Right.Y > 0)
                    {
                        cursorrect2.Y -= 4;
                    }
                    if (player2.currentState.ThumbSticks.Right.Y < 0)
                    {
                        cursorrect2.Y += 4;
                    }
                    if (player2.currentState.ThumbSticks.Right.Y == 0)
                    {
                        cursorrect2.Y += 0;
                    }
                    if (player2.currentState.ThumbSticks.Right.X > 0)
                    {
                        cursorrect2.X += 4;
                    }
                    if (player2.currentState.ThumbSticks.Right.X < 0)
                    {
                        cursorrect2.X -= 4;
                    }
                    if (player2.currentState.ThumbSticks.Right.X == 0)
                    {
                        cursorrect2.X += 0;
                    }
                    if (player2.currentState.Buttons.A == ButtonState.Pressed && player2.lastState.Buttons.A == ButtonState.Released && player2.dead)
                    {
                        if (cursorrect2.Intersects(godclassrect))
                        {
                            player2.mpclass = "godclass";
                            if (player2.godupgrade)
                            {
                                player2.clip = 31;
                                player2.weapon = "AK47";
                                player2.health = 100;
                                player2.dead = false;
                            }
                            if (!player2.godupgrade)
                            {
                                player2.clip = 31;
                                player2.weapon = "AK74";
                                player2.health = 100;
                                player2.dead = false;
                            }
                        }
                        if (cursorrect2.Intersects(gunnerclassrect))
                        {
                            player2.mpclass = "gunner";
                            if (player2.gunnerupgrade)
                            {
                                player2.clip = 1001;
                                player2.weapon = "m134";
                                player2.health = 100;
                                player2.dead = false;
                            }
                            if (!player2.gunnerupgrade)
                            {
                                player2.clip = 33;
                                player2.weapon = "uzi";
                                player2.health = 100;
                                player2.dead = false;
                            }
                        }
                        if (cursorrect2.Intersects(mggunnerclassrect))
                        {
                            player2.mpclass = "mggunner";
                            if (player2.mgupgrade)
                            {
                                player2.clip = 101;
                                player2.weapon = "pkm";
                                player2.health = 100;
                                player2.dead = false;
                            }
                            if (!player2.mgupgrade)
                            {
                                player2.clip = 101;
                                player2.weapon = "M249";
                                player2.health = 100;
                                player2.dead = false;
                            }
                        }
                        if (cursorrect2.Intersects(sniperclassrect))
                        {
                            player2.mpclass = "sniper";
                            if (player2.sniperupgrade)
                            {
                                player2.clip = 11;
                                player2.weapon = "m21";
                                player2.health = 100;
                                player2.dead = false;
                            }
                            if (!player2.sniperupgrade)
                            {
                                player2.clip = 6;
                                player2.weapon = "R700Sniper";
                                player2.health = 100;
                                player2.dead = false;
                            }
                        }
                        if (cursorrect2.Intersects(specoprect))
                        {
                            player2.mpclass = "specops";
                            if (player2.specopupgrade)
                            {
                                player2.clip = 31;
                                player2.weapon = "M4SOPMOD";
                                player2.health = 100;
                                player2.dead = false;
                            }
                            if (!player2.specopupgrade)
                            {
                                player2.clip = 31;
                                player2.weapon = "mp5k";
                                player2.health = 100;
                                player2.dead = false;
                            }
                        }
                    }
                    if (player2.currentState.Buttons.X == ButtonState.Pressed && player2.lastState.Buttons.X == ButtonState.Released)
                    {
                        if (cursorrect2.Intersects(godclassrect) && player2.godclasskills >= 25)
                        {
                            player2.godupgrade = true;
                        }
                        if (cursorrect2.Intersects(gunnerclassrect) && allownoobweapons && player2.gunnerkills >= 25)
                        {
                            player2.gunnerupgrade = true;
                        }
                        if (cursorrect2.Intersects(mggunnerclassrect) && allownoobweapons && player2.mgkills >= 25)
                        {
                            player2.mgupgrade = true;
                        }
                        if (cursorrect2.Intersects(sniperclassrect) && player2.sniperkills >= 25)
                        {
                            player2.sniperupgrade = true;
                        }
                        if (cursorrect2.Intersects(specoprect) && player2.specopkills >= 25)
                        {
                            player2.specopupgrade = true;
                        }
                    }
                    if (player2.currentState.Buttons.B == ButtonState.Pressed && player2.lastState.Buttons.B == ButtonState.Released)
                    {
                        if (cursorrect2.Intersects(godclassrect))
                        {
                            player2.godupgrade = false;
                        }
                        if (cursorrect2.Intersects(gunnerclassrect))
                        {
                            player2.gunnerupgrade = false;
                        }
                        if (cursorrect2.Intersects(mggunnerclassrect))
                        {
                            player2.mgupgrade = false;
                        }
                        if (cursorrect2.Intersects(sniperclassrect))
                        {
                            player2.sniperupgrade = false;
                        }
                        if (cursorrect2.Intersects(specoprect))
                        {
                            player2.specopupgrade = false;
                        }
                    }
                }
                else
                {
                    if (player2.currentState.Buttons.Y == ButtonState.Pressed && player2.lastState.Buttons.Y == ButtonState.Released)
                    {
                        if (player2.mpclass == "godclass")
                        {
                            if (player2.weapon == "AK74")
                            {
                                if (player2.ammo545 >= player2.clip - 1)
                                {
                                    player2.ammo545 -= (30 - (player2.clip - 1));
                                }
                                player2.weapon = "python";
                                if (player2.ammo357magnum > 5)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo357magnum += 6;
                                }
                                if (player2.ammo357magnum <= 5)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "AK47")
                            {
                                if (player2.ammo762x39 >= player2.clip - 1)
                                {
                                    player2.ammo762x39 -= (30 - (player2.clip - 1));
                                }
                                player2.weapon = "glock18";
                                if (player2.ammo9mm > 32)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo9mm += 33;
                                }
                                if (player2.ammo9mm <= 32)
                                {
                                    player2.clip = 0;
                                }
                            }
                        }
                        if (player2.mpclass == "gunner")
                        {
                            if (player2.weapon == "uzi")
                            {
                                if (player2.ammoUzi >= player2.clip - 1)
                                {
                                    player2.ammoUzi -= (32 - (player2.clip - 1));
                                }
                                player2.weapon = "volcanic";
                                player2.clip = 11;
                                player2.reloading = false;
                                player2.reloadTimeNum = 0;
                            }
                            if (player2.weapon == "m134")
                            {
                                player2.weapon = "volcanic";
                                player2.clip = 11;
                                player2.reloading = false;
                                player2.reloadTimeNum = 0;

                            }
                        }
                        if (player2.mpclass == "mggunner")
                        {
                            if (player2.weapon == "M249")
                            {
                                if (player2.ammo556 >= player2.clip - 1)
                                {
                                    player2.ammo556 -= (100 - (player2.clip - 1));
                                }
                                player2.weapon = "M9";
                                if (player2.ammo9mm > 15)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo9mm += 15;
                                }
                                if (player2.ammo9mm <= 15)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "pkm")
                            {
                                if (player2.ammo762x54 >= player2.clip - 1)
                                {
                                    player2.ammo762x54 -= (100 - (player2.clip - 1));
                                }
                                player2.weapon = "magnum24";
                                if (player2.ammo20mm > 7)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo20mm += 8;
                                }
                                if (player2.ammo20mm <= 7)
                                {
                                    player2.clip = 0;
                                }
                            }
                        }
                        if (player2.mpclass == "sniper")
                        {
                            if (player2.weapon == "R700Sniper")
                            {
                                if (player2.ammo3006 >= player2.clip - 1)
                                {
                                    player2.ammo3006 -= (5 - (player2.clip - 1));
                                }
                                player2.weapon = "M9";
                                if (player2.ammo9mm > 15)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo9mm += 15;
                                }
                                if (player2.ammo9mm <= 15)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "m21")
                            {
                                if (player2.ammo762x51 >= player2.clip - 1)
                                {
                                    player2.ammo762x51 -= (10 - (player2.clip - 1));
                                }
                                player2.weapon = "dbshotgun";
                                player2.clip = 3;
                                player2.reloading = false;
                                player2.reloadTimeNum = 0;
                            }
                        }
                        if (player2.mpclass == "specops")
                        {
                            if (player2.weapon == "mp5k" && !player2.specopupgrade)
                            {
                                if (player2.ammo9mm >= player2.clip - 1)
                                {
                                    player2.ammo9mm -= (30 - (player2.clip - 1));
                                }
                                player2.weapon = "M9";
                                if (player2.ammo9mm > 15)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo9mm += 15;
                                }
                                if (player2.ammo9mm <= 15)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "M4SOPMOD")
                            {
                                if (player2.ammo556 >= player2.clip - 1)
                                {
                                    player2.ammo556 -= (30 - (player2.clip - 1));
                                }
                                player2.weapon = "mp5k";
                                if (player2.ammo9mm > 29)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo9mm += 30;
                                }
                                if (player2.ammo9mm <= 29)
                                {
                                    player2.clip = 0;
                                }
                            }
                        }
                    }
                    if (player2.currentState.Buttons.RightShoulder == ButtonState.Pressed && player2.lastState.Buttons.RightShoulder == ButtonState.Released)
                    {
                        if (player2.mpclass == "godclass")
                        {
                            if (player2.weapon == "python")
                            {
                                if (player2.ammo357magnum >= player2.clip - 1)
                                {
                                    player2.ammo357magnum -= (6 - (player2.clip - 1));
                                }
                                player2.weapon = "AK74";
                                if (player2.ammo545 > 29)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo545 += 30;
                                }
                                if (player2.ammo545 <= 29)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "glock18")
                            {
                                if (player2.ammo9mm >= player2.clip - 1)
                                {
                                    player2.ammo9mm -= (33 - (player2.clip - 1));
                                }
                                player2.weapon = "AK47";
                                if (player2.ammo762x39 > 29)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo762x39 += 30;

                                }
                                if (player2.ammo762x39 <= 29)
                                {
                                    player2.clip = 0;
                                }
                            }
                        }
                        if (player2.mpclass == "gunner")
                        {
                            if (player2.weapon == "volcanic" && !player2.gunnerupgrade)
                            {
                                if (player2.ammo41 >= player2.clip - 1)
                                {
                                    player2.ammo41 -= (10 - (player2.clip - 1));
                                }
                                player2.weapon = "uzi";
                                if (player2.ammoUzi > 31)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammoUzi += 32;
                                }
                                if (player2.ammoUzi <= 31)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "volcanic" && player2.gunnerupgrade)
                            {
                                if (player2.ammo41 >= player2.clip - 1)
                                {
                                    player2.ammo41 -= (10 - (player2.clip - 1));
                                }
                                player2.weapon = "m134";
                                player2.clip = 1001;
                            }
                        }
                        if (player2.mpclass == "mggunner")
                        {
                            if (player2.weapon == "M9")
                            {
                                if (player2.ammo9mm >= player2.clip - 1)
                                {
                                    player2.ammo9mm -= (15 - (player2.clip - 1));
                                }
                                player2.weapon = "M249";
                                if (player2.ammo556 > 99)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo556 += 100;
                                }
                                if (player2.ammo556 <= 99)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "magnum24")
                            {
                                if (player2.ammo20mm >= player2.clip - 1)
                                {
                                    player2.ammo20mm -= (8 - (player2.clip - 1));
                                }
                                player2.weapon = "pkm";
                                if (player2.ammo762x54 > 99)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo762x54 += 100;
                                }
                                if (player2.ammo762x54 <= 99)
                                {
                                    player2.clip = 0;
                                }
                            }
                        }
                        if (player2.mpclass == "sniper")
                        {
                            if (player2.weapon == "M9")
                            {
                                if (player2.ammo9mm >= player2.clip - 1)
                                {
                                    player2.ammo9mm -= (15 - (player2.clip - 1));
                                }
                                player2.weapon = "R700Sniper";
                                if (player2.ammo3006 > 4)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo3006 += 5;
                                }
                                if (player2.ammo3006 <= 4)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "dbshotgun")
                            {
                                if (player2.ammo12Gauge >= player2.clip - 1)
                                {
                                    player2.ammo12Gauge -= (2 - (player2.clip - 1));
                                }
                                player2.weapon = "m21";
                                if (player2.ammo762x51 > 9)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo762x51 += 10;
                                }
                                if (player2.ammo762x51 <= 9)
                                {
                                    player2.clip = 0;
                                }
                            }

                        }
                        if (player2.mpclass == "specops")
                        {
                            if (player2.weapon == "M9")
                            {
                                if (player2.ammo9mm >= player2.clip - 1)
                                {
                                    player2.ammo9mm -= (15 - (player2.clip - 1));
                                }
                                player2.weapon = "mp5k";
                                if (player2.ammo9mm > 29)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo9mm += 30;
                                }
                                if (player2.ammo9mm <= 29)
                                {
                                    player2.clip = 0;
                                }
                            }
                            if (player2.weapon == "mp5k" && player2.specopupgrade)
                            {
                                if (player2.ammo9mm >= player2.clip - 1)
                                {
                                    player2.ammo9mm -= (30 - (player2.clip - 1));
                                }
                                player2.weapon = "M4SOPMOD";
                                if (player2.ammo556 > 29)
                                {
                                    player2.clip = 0;
                                    player2.reloading = true;
                                    player2.reloadTimeNum = 1000;
                                    player2.ammo556 += 30;
                                }
                                if (player2.ammo556 <= 29)
                                {
                                    player2.clip = 0;
                                }
                            }

                        }

                    }
                }
            }
            if (mode == "coop" || mode == "juggernaut2" || mode == "deathmatch2" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
            {
                player2.freeLook = MathHelper.Clamp(player2.freeLook, MathHelper.ToRadians(-89.9f), MathHelper.ToRadians(89.9f));
                if (!player2.dead && player2.menu != "chooseclass")
                {
                    if (!player2.ads)
                    {
                        player2.Rotation -= player2.currentState.ThumbSticks.Right.X * 0.05f;
                        player2.freeLook += player2.currentState.ThumbSticks.Right.Y * 0.02f;
                    }
                    if (player2.ads)
                    {
                        player2.Rotation -= player2.currentState.ThumbSticks.Right.X * 0.025f;
                        player2.freeLook += player2.currentState.ThumbSticks.Right.Y * 0.01f;
                    }
                    Vector3 velocityAdd = Vector3.Zero;
                    if (player2.currentState.ThumbSticks.Left.Y > 0)
                    {
                        velocityAdd.Z -= 2.0f;
                    }
                    if (player2.currentState.ThumbSticks.Left.Y < 0)
                    {
                        velocityAdd.Z += 2.0f;
                    }
                    if (player2.currentState.ThumbSticks.Left.X < 0)
                    {
                        velocityAdd.X -= 2.0f;
                    }
                    if (player2.currentState.ThumbSticks.Left.X > 0)
                    {
                        velocityAdd.X += 2.0f;
                    }
                    if (player2.currentState.ThumbSticks.Left.Y > 0 && player2.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.Z -= 4.5f;
                    }
                    if (player2.currentState.ThumbSticks.Left.Y < 0 && player2.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.Z += 4.5f;
                    }
                    if (player2.currentState.ThumbSticks.Left.X < 0 && player2.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.X -= 4.5f;
                    }
                    if (player2.currentState.ThumbSticks.Left.X > 0 && player2.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.X += 4.5f;
                    }
                    Matrix moveMatrix = Matrix.CreateRotationY(player2.Rotation);
                    player2.Position += Vector3.Transform(velocityAdd, moveMatrix);
                    if (player2.currentState.Buttons.A == ButtonState.Pressed && player2.lastState.Buttons.A == ButtonState.Pressed)
                    {
                        if (player2.canjump && player2.posture == "standing")
                        {
                            player2.jumpspeed = 1.5f;
                            player2.canjump = false;
                            player2.oldY = player2.Position.Y;
                        }
                        if (player2.posture == "crouching")
                        {
                            player2.posture = "standing";
                        }
                    }
                    if (player2.currentState.Buttons.LeftStick == ButtonState.Pressed && player2.lastState.Buttons.LeftStick == ButtonState.Released)
                    {
                        if (player2.posture == "standing")
                        {
                            player2.posture = "crouching";
                        }
                    }
                    if (player2.weapon == "M9")
                    {
                        if (player2.ammo9mm <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 10)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo9mm >= 15)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player2.reloadTimeNum >= 150)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 16;
                            player2.ammo9mm -= 15;
                        }
                    }
                    if (player2.weapon == "magnum24")
                    {
                        if (player2.ammo20mm <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 10)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo20mm >= 8)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player2.reloadTimeNum >= 150)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 9;
                            player2.ammo20mm -= 8;
                        }
                    }
                    if (player2.weapon == "glock18")
                    {
                        if (player2.ammo9mm <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 3)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo9mm > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo9mm >= 33)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 34;
                            player2.ammo9mm -= 33;
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo9mm > 0 && player2.ammo9mm <= 32)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo9mm + 1;
                            player2.ammo9mm = 0;
                        }
                    }
                    if (player2.weapon == "uzi")
                    {
                        if (player2.ammoUzi <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 5)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("uzi_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammoUzi >= 32)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammoUzi < 32 && player2.ammoUzi > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("uzi_reload");
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammoUzi >= 32)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 33;
                            player2.ammoUzi -= 32;
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammoUzi < 32 && player2.ammoUzi > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammoUzi + 1;
                            player2.ammoUzi = 0;
                        }
                    }
                    if (player2.weapon == "mac10")
                    {
                        if (player2.ammo45 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 5)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("357_Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo45 >= 32)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo45 < 32 && player2.ammo45 > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("uzi_reload");
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo45 >= 32)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 33;
                            player2.ammo45 -= 32;
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo45 < 32 && player2.ammo45 > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo45 + 1;
                            player2.ammo45 = 0;
                        }
                    }
                    if (player2.weapon == "hipower")
                    {
                        if (player2.ammo9mm <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 8)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo9mm >= 13)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player2.reloadTimeNum >= 130)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 14;
                            player2.ammo9mm -= 13;
                        }
                    }
                    if (player2.weapon == "volcanic")
                    {
                        if (player2.ammo41 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 40)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.clip < 11 && player2.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.reloading)
                        {
                            player2.reloadTimeNum += 1;
                            if (player2.ammo41 > 0)
                            {
                                if (player2.reloadTimeNum == 14 && player2.clip < 11)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.clip += 1;
                                    if (player2.clip >= 2)
                                    {
                                        player2.ammo41 -= 1;
                                    }
                                }
                                if (player2.currentState.Triggers.Right > 0 && player2.lastState.Triggers.Right > 0 && player2.clip >= 2)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                                if (player2.clip == 11)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                            }
                            if (player2.ammo41 <= 0)
                            {
                                player2.reloading = false;
                            }
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player2.weapon == "M249")
                    {
                        if (player2.ammo556 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 4)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m249_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo556 >= 100)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo556 < 100 && player2.ammo556 > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player2.reloadTimeNum >= 250 && player2.ammo556 >= 100)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 101;
                            player2.ammo556 -= 100;
                        }
                        if (player2.reloadTimeNum >= 250 && player2.ammo556 < 100 && player2.ammo556 > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo556 + 1;
                            player2.ammo556 = 0;
                        }
                    }
                    if (player2.weapon == "AK74")
                    {
                        if (player2.ammo545 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 4)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m249_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo545 >= 30)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo545 < 30 && player2.ammo545 > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo545 >= 30)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 31;
                            player2.ammo545 -= 30;
                        }
                        if (player2.reloadTimeNum >= 200 && player2.ammo545 < 30 && player2.ammo545 > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo545 + 1;
                            player2.ammo545 = 0;
                        }
                    }
                    if (player2.weapon == "cz550")
                    {
                        if (player2.ammo600overkill <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 80)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("R700Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo600overkill >= 3)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("R700Reload");
                        }
                        if (player2.reloadTimeNum >= 150)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 4;
                            player2.ammo600overkill -= 3;
                        }
                    }
                    if (player2.weapon == "pkm")
                    {
                        if (player2.ammo762x54 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 5)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo762x54 >= 100)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo762x54 < 100 && player2.ammo762x54 > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player2.reloadTimeNum >= 300 && player2.ammo762x54 >= 100)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 101;
                            player2.ammo762x54 -= 100;
                        }
                        if (player2.reloadTimeNum >= 300 && player2.ammo762x54 < 100 && player2.ammo762x54 > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo762x54 + 1;
                            player2.ammo762x54 = 0;
                        }
                    }
                    if (player2.weapon == "m134")
                    {
                        if (player2.ammonull <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 2)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammonull >= 1000)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammonull < 1000 && player2.ammonull > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player2.reloadTimeNum >= 300 && player2.ammonull >= 1000)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 1001;
                            player2.ammonull -= 1000;
                        }
                        if (player2.reloadTimeNum >= 300 && player2.ammonull < 1000 && player2.ammonull > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammonull + 1;
                            player2.ammonull = 0;
                        }
                    }
                    if (player2.weapon == "hk21")
                    {
                        if (player2.ammo762x51 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 4)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo762x51 >= 100)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo762x51 < 100 && player2.ammo762x51 > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player2.reloadTimeNum >= 300 && player2.ammo762x51 >= 100)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 101;
                            player2.ammo762x51 -= 100;
                        }
                        if (player2.reloadTimeNum >= 300 && player2.ammo762x51 < 100 && player2.ammo762x51 > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo762x51 + 1;
                            player2.ammo762x51 = 0;
                        }
                    }
                    if (player2.weapon == "M4SOPMOD")
                    {
                        if (player2.ammo556 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 3)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("uzi_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo556 >= 30)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo556 < 30 && player2.ammo556 > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player2.reloadTimeNum >= 200 && player2.ammo556 >= 30)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 31;
                            player2.ammo556 -= 30;
                        }
                        if (player2.reloadTimeNum >= 200 && player2.ammo556 < 30 && player2.ammo556 > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo556 + 1;
                            player2.ammo556 = 0;
                        }
                    }
                    if (player2.weapon == "mp5k")
                    {
                        if (player2.ammo9mm <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 3)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo9mm >= 30)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo9mm < 30 && player2.ammo9mm > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("mp5k_reload");
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo9mm >= 30)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 31;
                            player2.ammo9mm -= 30;
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo9mm < 30 && player2.ammo9mm > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo9mm + 1;
                            player2.ammo9mm = 0;
                        }
                    }
                    if (player2.weapon == "mp40")
                    {
                        if (player2.ammo9mm <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 6)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo9mm >= 32)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo9mm < 32 && player2.ammo9mm > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("mp5k_reload");
                        }
                        if (player2.reloadTimeNum >= 180 && player2.ammo9mm >= 32)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 33;
                            player2.ammo9mm -= 32;
                        }
                        if (player2.reloadTimeNum >= 180 && player2.ammo9mm < 32 && player2.ammo9mm > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo9mm + 1;
                            player2.ammo9mm = 0;
                        }
                    }
                    if (player2.weapon == "AK47")
                    {
                        if (player2.ammo762x39 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 5)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("AK47_Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo762x39 >= 30)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo762x39 < 30 && player2.ammo762x39 > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo762x39 >= 30)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 31;
                            player2.ammo762x39 -= 30;
                        }
                        if (player2.reloadTimeNum >= 200 && player2.ammo762x39 < 30 && player2.ammo762x39 > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo762x39 + 1;
                            player2.ammo762x39 = 0;
                        }
                    }
                    if (player2.weapon == "aa12")
                    {
                        if (player2.ammo12Gauge <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 10)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo12Gauge >= 32)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.ammo12Gauge < 32 && player2.ammo12Gauge > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player2.reloadTimeNum >= 150 && player2.ammo12Gauge >= 32)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 33;
                            player2.ammo12Gauge -= 32;
                        }
                        if (player2.reloadTimeNum >= 200 && player2.ammo12Gauge < 32 && player2.ammo12Gauge > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.ammo12Gauge + 1;
                            player2.ammo12Gauge = 0;
                        }
                    }
                    if (player2.weapon == "medic")
                    {
                        if (player2.medpacks <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 3)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                            }
                        }
                        if (player2.clip <= 0 && player2.medpacks >= 1)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.clip <= 0 && player2.medpacks < 1 && player2.medpacks > 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;
                        }
                        if (player2.reloadTimeNum >= 300 && player2.medpacks >= 1)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 2;
                            player2.medpacks -= 1;
                        }
                        if (player2.reloadTimeNum >= 300 && player2.medpacks < 1 && player2.medpacks > 0)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = player2.medpacks + 1;
                            player2.medpacks = 0;
                        }
                    }
                    if (player2.weapon == "dbshotgun")
                    {
                        if (player2.ammo12Gauge <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 10)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player2.clip <= 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.clip < 3 && player2.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.reloading)
                        {
                            player2.reloadTimeNum += 1;
                            if (player2.ammo12Gauge > 0)
                            {
                                if (player2.reloadTimeNum == 70 && player2.clip < 3)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.clip += 1;
                                    if (player2.clip >= 2)
                                    {
                                        player2.ammo12Gauge -= 1;
                                    }
                                }
                                if (player2.currentState.Triggers.Right > 0 && player2.lastState.Triggers.Right > 0 && player2.clip >= 2)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                }
                                if (player2.clip == 3)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                }
                            }
                            if (player2.ammo12Gauge <= 0)
                            {
                                player2.reloading = false;
                            }
                        }
                    }
                    if (player2.weapon == "S&W500")
                    {
                        if (player2.ammo500magnum <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 37)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo500magnum >= 5)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player2.reloadTimeNum >= 250)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 6;
                            player2.ammo500magnum -= 5;
                        }
                    }
                    if (player2.weapon == "anaconda")
                    {
                        if (player2.ammo44magnum <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 30)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo44magnum >= 6)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player2.reloadTimeNum >= 250)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 7;
                            player2.ammo44magnum -= 6;
                        }
                    }
                    if (player2.weapon == "python")
                    {
                        if (player2.ammo357magnum <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 20)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("357_Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo357magnum >= 6)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player2.reloadTimeNum >= 250)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 7;
                            player2.ammo357magnum -= 6;
                        }
                    }
                    if (player2.weapon == "R870")
                    {
                        if (player2.ammo12Gauge <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 55)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firepause == 1)
                            {
                                gunsoundbank.PlayCue("SPASPump");
                            }
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player2.clip <= 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.clip < 9 && player2.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.reloading)
                        {
                            player2.reloadTimeNum += 1;
                            if (player2.ammo12Gauge > 0)
                            {
                                if (player2.reloadTimeNum == 20 && player2.clip < 9)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.clip += 1;
                                    if (player2.clip >= 2)
                                    {
                                        player2.ammo12Gauge -= 1;
                                    }
                                }
                                if (player2.currentState.Triggers.Right > 0 && player2.lastState.Triggers.Right > 0 && player2.clip >= 2)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player2.clip == 9)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player2.ammo12Gauge <= 0)
                            {
                                player2.reloading = false;
                            }
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player2.weapon == "winchester1887")
                    {
                        if (player2.ammo10Gauge <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 80)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firepause == 1)
                            {
                                gunsoundbank.PlayCue("SPASPump");
                            }
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player2.clip <= 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.clip < 6 && player2.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.reloading)
                        {
                            player2.reloadTimeNum += 1;
                            if (player2.ammo10Gauge > 0)
                            {
                                if (player2.reloadTimeNum == 20 && player2.clip < 6)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.clip += 1;
                                    if (player2.clip >= 2)
                                    {
                                        player2.ammo10Gauge -= 1;
                                    }
                                }
                                if (player2.currentState.Triggers.Right > 0 && player2.lastState.Triggers.Right > 0 && player2.clip >= 2)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player2.clip == 6)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player2.ammo10Gauge <= 0)
                            {
                                player2.reloading = false;
                            }
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player2.weapon == "m21")
                    {
                        if (player2.ammo762x51 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 20)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo762x51 >= 10)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player2.reloadTimeNum >= 150)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 11;
                            player2.ammo762x51 -= 10;
                        }
                    }
                    if (player2.weapon == "svd")
                    {
                        if (player2.ammo762x54 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 25)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("svd_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo762x54 >= 5)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player2.reloadTimeNum >= 150)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 6;
                            player2.ammo762x54 -= 5;
                        }
                    }
                    if (player2.weapon == "m14")
                    {
                        if (player2.ammo762x51 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 10)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo762x51 >= 20)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player2.reloadTimeNum >= 150)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 21;
                            player2.ammo762x51 -= 20;
                        }
                    }
                    if (player2.weapon == "R700" || player2.weapon == "R700Sniper")
                    {
                        if (player2.ammo3006 <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 80)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("R700Fire");
                                }
                            }
                        }
                        if (player2.clip <= 0 && player2.ammo3006 >= 5)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.reloadTimeNum += 1;
                            player2.firing = false;

                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("R700Reload");
                        }
                        if (player2.reloadTimeNum >= 150)
                        {
                            player2.reloadTimeNum = 0;
                            player2.reloading = false;
                            player2.canshoot = true;
                            player2.clip = 6;
                            player2.ammo3006 -= 5;
                        }
                    }
                    if (player2.weapon == "SPAS12")
                    {
                        if (player2.ammo12Gauge <= 0)
                        {
                            if (player2.clip > 0)
                            {
                                player2.canshoot = true;
                                player2.reloading = false;
                            }
                            if (player2.clip <= 0)
                            {
                                player2.canshoot = false;
                                player2.reloading = false;
                                player2.firing = false;
                            }
                        }
                        if (player2.canshoot)
                        {

                            if (player2.currentState.Triggers.Right > 0 && player2.firepause == 0)
                            {
                                if (player2.clip > 0)
                                {
                                    player2.firing = true;
                                    player2.firepause = 1;
                                }
                            }
                            if (player2.lastState.Triggers.Right > 0)
                            {
                                player2.firing = false;
                                if (player2.firepause >= 30)
                                {
                                    player2.firepause = 0;
                                    if (player2.clip > 0)
                                    {
                                        player2.firing = true;
                                    }
                                }
                            }
                            player2.firepause += 1;
                            if (player2.firing)
                            {
                                player2.clip -= 1;
                                if (player2.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player2.clip <= 0)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.clip < 9 && player2.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player2.reloading = true;
                            player2.canshoot = false;
                            player2.firing = false;
                        }
                        if (player2.reloading)
                        {
                            player2.reloadTimeNum += 1;
                            if (player2.ammo12Gauge > 0)
                            {
                                if (player2.reloadTimeNum == 20 && player2.clip < 9)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.clip += 1;
                                    if (player2.clip >= 2)
                                    {
                                        player2.ammo12Gauge -= 1;
                                    }
                                }
                                if (player2.currentState.Triggers.Right > 0 && player2.lastState.Triggers.Right > 0 && player2.clip >= 2)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player2.clip == 9)
                                {
                                    player2.reloadTimeNum = 0;
                                    player2.canshoot = true;
                                    player2.reloading = false;
                                    player2.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player2.ammo12Gauge <= 0)
                            {
                                player2.reloading = false;
                            }
                        }
                        if (player2.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player2.currentState.Triggers.Left > 0)
                    {
                        player2.ads = true;
                    }
                    if (player2.currentState.Triggers.Left <= 0)
                    {
                        player2.ads = false;
                    }
                    if (player2.currentState.Triggers.Right <= 0)
                    {
                        player2.firing = false;
                    }
                }
                if (player2.dead)
                {
                    if (player2.currentState.Buttons.Start == ButtonState.Pressed)
                    {
                        player2.dead = false;
                        if (mode == "coop")
                        {
                            player2.weapon = player2.startingweapon;
                            player2.clip = player2.startingclip;
                        }
                        else if (mode == "class")
                        {
                            if (player2.mpclass == "specops")
                            {
                                if (!player2.specopupgrade)
                                {
                                    player2.weapon = "mp5k";
                                    player2.clip = 31;
                                }
                                if (player2.specopupgrade)
                                {
                                    player2.weapon = "M4SOPMOD";
                                    player2.clip = 31;
                                }
                            }
                            else if (player2.mpclass == "sniper")
                            {
                                if (!player2.sniperupgrade)
                                {
                                    player2.weapon = "R700Sniper";
                                    player2.clip = 6;
                                }
                                if (player2.sniperupgrade)
                                {
                                    player2.weapon = "m21";
                                    player2.clip = 11;
                                }
                            }
                            else if (player2.mpclass == "mggunner")
                            {
                                if (!player2.mgupgrade)
                                {
                                    player2.weapon = "M249";
                                    player2.clip = 101;
                                }
                                if (player2.mgupgrade)
                                {
                                    player2.weapon = "pkm";
                                    player2.clip = 101;
                                }
                            }
                            else if (player2.mpclass == "gunner")
                            {
                                if (!player2.gunnerupgrade)
                                {
                                    player2.weapon = "uzi";
                                    player2.clip = 33;
                                }
                                if (player2.gunnerupgrade)
                                {
                                    player2.weapon = "m134";
                                    player2.clip = 1001;
                                }
                            }
                            else if (player2.mpclass == "godclass")
                            {
                                if (!player2.godupgrade)
                                {
                                    player2.weapon = "AK74";
                                    player2.clip = 31;
                                }
                                if (player2.godupgrade)
                                {
                                    player2.weapon = "AK47";
                                    player2.clip = 31;
                                }
                            }
                            else
                            {
                                player2.mpclass = "specops";
                                if (!player2.specopupgrade)
                                {
                                    player2.weapon = "mp5k";
                                    player2.clip = 31;
                                }
                                if (player2.specopupgrade)
                                {
                                    player2.weapon = "M4SOPMOD";
                                    player2.clip = 31;
                                }
                            }
                        }
                        else
                        {
                            player2.clip = 14;
                            player2.weapon = "hipower";
                        }
                        player2.health = 100;
                        player2.ammo9mm = 420;
                        player2.ammo44magnum = 54;
                        player2.ammo3006 = 60;
                        player2.ammo12Gauge = 64;
                        player2.ammo10Gauge = 40;
                        player2.ammoUzi = 320;
                        player2.ammo45 = 224;
                        player2.ammorpg = 5;
                        player2.ammo762x39 = 180;
                        player2.ammo500magnum = 45;
                        player2.ammo762x54 = 300;
                        player2.ammo357magnum = 90;
                        player2.ammo556 = 300;
                        player2.ammo545 = 360;
                        player2.ammo762x51 = 100;
                        player2.ammo20mm = 104;
                        player2.ammo41 = 600;
                        player2.medpacks = 2;
                        player2.reloading = false;
                        player2.canshoot = true;
                        if (mode != "tdm4" && mode != "class")
                        {
                            player2.Position = new Vector3(random.Next(300) - 150, -5, random.Next(300) - 150);
                        }
                        if (mode == "class")
                        {
                            player2.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player2.oldY = 16;
                        }
                        if (mode == "tdm4")
                        {
                            int spawnposition = random.Next(4);
                            if (spawnposition == 0)
                            {
                                player2.room = "room1";
                                player2.Position = new Vector3(-240, 4, 200);
                            }
                            if (spawnposition == 1)
                            {
                                player2.room = "janitorcloset";
                                player2.Position = new Vector3(-170, 4, 0);
                            }
                            if (spawnposition == 2)
                            {
                                player2.room = "room2";
                                player2.Position = new Vector3(-240, 4, -200);
                            }
                            if (spawnposition == 3)
                            {
                                player2.room = "poolroom";
                                player2.Position = new Vector3(410, 4, 50);
                            }
                        }
                    }
                }
            }
            player2.lastState = player2.currentState;
        }
        protected void Input3()
        {
            player3.currentState = GamePad.GetState(PlayerIndex.Three);
            if (mode == "menu")
            {
                if (player3.currentState.ThumbSticks.Right.Y > 0)
                {
                    cursorrect3.Y -= 4;
                }
                if (player3.currentState.ThumbSticks.Right.Y < 0)
                {
                    cursorrect3.Y += 4;
                }
                if (player3.currentState.ThumbSticks.Right.Y == 0)
                {
                    cursorrect3.Y += 0;
                }
                if (player3.currentState.ThumbSticks.Right.X > 0)
                {
                    cursorrect3.X += 4;
                }
                if (player3.currentState.ThumbSticks.Right.X < 0)
                {
                    cursorrect3.X -= 4;
                }
                if (player3.currentState.ThumbSticks.Right.X == 0)
                {
                    cursorrect3.X += 0;
                }
                if (player3.currentState.Buttons.A == ButtonState.Pressed && player3.lastState.Buttons.A == ButtonState.Released)
                {
                    if (cursorrect3.Intersects(weaponRect))
                    {
                        player3.startingweapon = "uzi";
                        player3.startingclip = 33;
                        p3rect = new Rectangle(weaponRect.X - 10, weaponRect.Y + 20, 10, 10);
                    }
                    if (cursorrect3.Intersects(weaponRect2))
                    {
                        player3.startingweapon = "winchester1887";
                        player3.clip = 6;
                        player3.startingclip = 6;
                        p3rect = new Rectangle(weaponRect2.X - 10, weaponRect2.Y + 20, 10, 10);
                    }
                    if (cursorrect3.Intersects(weaponRect3))
                    {
                        player3.startingweapon = "R700";
                        player3.clip = 6;
                        player3.startingclip = 6;
                        p3rect = new Rectangle(weaponRect3.X - 10, weaponRect3.Y + 20, 10, 10);
                    }
                    if (cursorrect3.Intersects(weaponRect4))
                    {
                        player3.startingweapon = "anaconda";
                        player3.clip = 7;
                        player3.startingclip = 7;
                        p3rect = new Rectangle(weaponRect4.X - 10, weaponRect4.Y + 20, 10, 10);
                    }
                    if (cursorrect3.Intersects(weaponRect5))
                    {
                        player3.startingweapon = "mp5k";
                        player3.startingclip = 31;
                        p3rect = new Rectangle(weaponRect5.X - 10, weaponRect5.Y + 10, 10, 10);
                    }
                    if (cursorrect3.Intersects(weaponRect6))
                    {
                        player3.startingweapon = "mac10";
                        player3.clip = 33;
                        player3.startingclip = 33;
                        p3rect = new Rectangle(weaponRect6.X - 10, weaponRect6.Y + 10, 10, 10);
                    }
                    if (cursorrect3.Intersects(weaponRect7))
                    {
                        player3.startingweapon = "R870";
                        player3.clip = 9;
                        player3.startingclip = 9;
                        p3rect = new Rectangle(weaponRect7.X - 10, weaponRect7.Y + 10, 10, 10);
                    }
                    if (cursorrect3.Intersects(weaponRect8))
                    {
                        player3.startingweapon = "m14";
                        player3.clip = 21;
                        player3.startingclip = 21;
                        p3rect = new Rectangle(weaponRect8.X - 10, weaponRect8.Y + 10, 10, 10);
                    }
                }

            }
            if (mode == "class")
            {
                if (player3.menu == "")
                {
                    if (player3.currentState.Buttons.Back == ButtonState.Pressed && player3.lastState.Buttons.Back == ButtonState.Released)
                    {
                        player3.menu = "chooseclass";
                    }
                }
                if (player3.menu == "chooseclass")
                {
                    if (player3.currentState.Buttons.Start == ButtonState.Pressed && player3.lastState.Buttons.Start == ButtonState.Released)
                    {
                        player3.menu = "";
                    }
                    if (player3.currentState.ThumbSticks.Right.Y > 0)
                    {
                        cursorrect3.Y -= 4;
                    }
                    if (player3.currentState.ThumbSticks.Right.Y < 0)
                    {
                        cursorrect3.Y += 4;
                    }
                    if (player3.currentState.ThumbSticks.Right.Y == 0)
                    {
                        cursorrect3.Y += 0;
                    }
                    if (player3.currentState.ThumbSticks.Right.X > 0)
                    {
                        cursorrect3.X += 4;
                    }
                    if (player3.currentState.ThumbSticks.Right.X < 0)
                    {
                        cursorrect3.X -= 4;
                    }
                    if (player3.currentState.ThumbSticks.Right.X == 0)
                    {
                        cursorrect3.X += 0;
                    }
                    if (player3.currentState.Buttons.A == ButtonState.Pressed && player3.lastState.Buttons.A == ButtonState.Released && player3.dead)
                    {
                        if (cursorrect3.Intersects(godclassrect))
                        {
                            player3.mpclass = "godclass";
                            if (player3.godupgrade)
                            {
                                player3.clip = 31;
                                player3.weapon = "AK47";
                                player3.health = 100;
                                player3.dead = false;
                            }
                            if (!player3.godupgrade)
                            {
                                player3.clip = 31;
                                player3.weapon = "AK74";
                                player3.health = 100;
                                player3.dead = false;
                            }
                        }
                        if (cursorrect3.Intersects(gunnerclassrect))
                        {
                            player3.mpclass = "gunner";
                            if (player3.gunnerupgrade)
                            {
                                player3.clip = 1001;
                                player3.weapon = "m134";
                                player3.health = 100;
                                player3.dead = false;
                            }
                            if (!player3.gunnerupgrade)
                            {
                                player3.clip = 33;
                                player3.weapon = "uzi";
                                player3.health = 100;
                                player3.dead = false;
                            }
                        }
                        if (cursorrect3.Intersects(mggunnerclassrect))
                        {
                            player3.mpclass = "mggunner";
                            if (player3.mgupgrade)
                            {
                                player3.clip = 101;
                                player3.weapon = "pkm";
                                player3.health = 100;
                                player3.dead = false;
                            }
                            if (!player3.mgupgrade)
                            {
                                player3.clip = 101;
                                player3.weapon = "M249";
                                player3.health = 100;
                                player3.dead = false;
                            }
                        }
                        if (cursorrect3.Intersects(sniperclassrect))
                        {
                            player3.mpclass = "sniper";
                            if (player3.sniperupgrade)
                            {
                                player3.clip = 11;
                                player3.weapon = "m21";
                                player3.health = 100;
                                player3.dead = false;
                            }
                            if (!player3.sniperupgrade)
                            {
                                player3.clip = 6;
                                player3.weapon = "R700Sniper";
                                player3.health = 100;
                                player3.dead = false;
                            }
                        }
                        if (cursorrect3.Intersects(specoprect))
                        {
                            player3.mpclass = "specops";
                            if (player3.specopupgrade)
                            {
                                player3.clip = 31;
                                player3.weapon = "M4SOPMOD";
                                player3.health = 100;
                                player3.dead = false;
                            }
                            if (!player3.specopupgrade)
                            {
                                player3.clip = 31;
                                player3.weapon = "mp5k";
                                player3.health = 100;
                                player3.dead = false;
                            }
                        }
                    }
                    if (player3.currentState.Buttons.X == ButtonState.Pressed && player3.lastState.Buttons.X == ButtonState.Released)
                    {
                        if (cursorrect3.Intersects(godclassrect))
                        {
                            player3.godupgrade = true;
                        }
                        if (cursorrect3.Intersects(gunnerclassrect) && allownoobweapons)
                        {
                            player3.gunnerupgrade = true;
                        }
                        if (cursorrect3.Intersects(mggunnerclassrect) && allownoobweapons)
                        {
                            player3.mgupgrade = true;
                        }
                        if (cursorrect3.Intersects(sniperclassrect))
                        {
                            player3.sniperupgrade = true;
                        }
                        if (cursorrect3.Intersects(specoprect))
                        {
                            player3.specopupgrade = true;
                        }
                    }
                    if (player3.currentState.Buttons.B == ButtonState.Pressed && player3.lastState.Buttons.B == ButtonState.Released)
                    {
                        if (cursorrect3.Intersects(godclassrect))
                        {
                            player3.godupgrade = false;
                        }
                        if (cursorrect3.Intersects(gunnerclassrect))
                        {
                            player3.gunnerupgrade = false;
                        }
                        if (cursorrect3.Intersects(mggunnerclassrect))
                        {
                            player3.mgupgrade = false;
                        }
                        if (cursorrect3.Intersects(sniperclassrect))
                        {
                            player3.sniperupgrade = false;
                        }
                        if (cursorrect3.Intersects(specoprect))
                        {
                            player3.specopupgrade = false;
                        }
                    }
                }
                else
                {
                    if (player3.currentState.Buttons.Y == ButtonState.Pressed && player3.lastState.Buttons.Y == ButtonState.Released)
                    {
                        if (player3.mpclass == "godclass")
                        {
                            if (player3.weapon == "AK74")
                            {
                                if (player3.ammo545 >= player3.clip - 1)
                                {
                                    player3.ammo545 -= (30 - (player3.clip - 1));
                                }
                                player3.weapon = "python";
                                if (player3.ammo357magnum > 5)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo357magnum += 6;

                                }
                                if (player3.ammo357magnum <= 5)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "AK47")
                            {
                                if (player3.ammo762x39 >= player3.clip - 1)
                                {
                                    player3.ammo762x39 -= (30 - (player3.clip - 1));
                                }
                                player3.weapon = "glock18";
                                if (player3.ammo9mm > 32)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo9mm += 33;

                                }
                                if (player3.ammo9mm <= 32)
                                {
                                    player3.clip = 0;
                                }
                            }
                        }
                        if (player3.mpclass == "gunner")
                        {
                            if (player3.weapon == "uzi")
                            {
                                if (player3.ammoUzi >= player3.clip - 1)
                                {
                                    player3.ammoUzi -= (32 - (player3.clip - 1));
                                }
                                player3.weapon = "volcanic";
                                player3.clip = 11;
                                player3.reloading = false;
                                player3.reloadTimeNum = 0;
                            }
                            if (player3.weapon == "m134")
                            {
                                player3.weapon = "volcanic";
                                player3.clip = 11;
                                player3.reloading = false;
                                player3.reloadTimeNum = 0;

                            }
                        }
                        if (player3.mpclass == "mggunner")
                        {
                            if (player3.weapon == "M249")
                            {
                                if (player3.ammo556 >= player3.clip - 1)
                                {
                                    player3.ammo556 -= (100 - (player3.clip - 1));
                                }
                                player3.weapon = "M9";
                                if (player3.ammo9mm > 15)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo9mm += 15;
                                }
                                if (player3.ammo9mm <= 15)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "pkm")
                            {
                                if (player3.ammo762x54 >= player3.clip - 1)
                                {
                                    player3.ammo762x54 -= (100 - (player3.clip - 1));
                                }
                                player3.weapon = "magnum24";
                                if (player3.ammo20mm > 7)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo20mm += 8;
                                }
                                if (player3.ammo20mm <= 7)
                                {
                                    player3.clip = 0;
                                }
                            }
                        }
                        if (player3.mpclass == "sniper")
                        {
                            if (player3.weapon == "R700Sniper")
                            {
                                if (player3.ammo3006 >= player3.clip - 1)
                                {
                                    player3.ammo3006 -= (5 - (player3.clip - 1));
                                }
                                player3.weapon = "M9";
                                if (player3.ammo9mm > 15)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo9mm += 15;
                                }
                                if (player3.ammo9mm <= 15)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "m21")
                            {
                                if (player3.ammo762x51 >= player3.clip - 1)
                                {
                                    player3.ammo762x51 -= (10 - (player3.clip - 1));
                                }
                                player3.weapon = "dbshotgun";
                                player3.clip = 3;
                                player3.reloading = false;
                                player3.reloadTimeNum = 0;
                            }
                        }
                        if (player3.mpclass == "specops")
                        {
                            if (player3.weapon == "mp5k" && !player3.specopupgrade)
                            {
                                if (player3.ammo9mm >= player3.clip - 1)
                                {
                                    player3.ammo9mm -= (30 - (player3.clip - 1));
                                }
                                player3.weapon = "M9";
                                if (player3.ammo9mm > 15)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo9mm += 15;
                                }
                                if (player3.ammo9mm <= 15)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "M4SOPMOD")
                            {
                                if (player3.ammo556 >= player3.clip - 1)
                                {
                                    player3.ammo556 -= (30 - (player3.clip - 1));
                                }
                                player3.weapon = "mp5k";
                                if (player3.ammo9mm > 29)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo9mm += 30;
                                }
                                if (player3.ammo9mm <= 29)
                                {
                                    player3.clip = 0;
                                }
                            }
                        }
                    }
                    if (player3.currentState.Buttons.RightShoulder == ButtonState.Pressed && player3.lastState.Buttons.RightShoulder == ButtonState.Released)
                    {
                        if (player3.mpclass == "godclass")
                        {
                            if (player3.weapon == "python")
                            {
                                if (player3.ammo357magnum >= player3.clip - 1)
                                {
                                    player3.ammo357magnum -= (6 - (player3.clip - 1));
                                }
                                player3.weapon = "AK74";
                                if (player3.ammo545 > 29)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo545 += 30;
                                }
                                if (player3.ammo545 <= 29)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "glock18")
                            {
                                if (player3.ammo9mm >= player3.clip - 1)
                                {
                                    player3.ammo9mm -= (33 - (player3.clip - 1));
                                }
                                player3.weapon = "AK47";
                                if (player3.ammo762x39 > 29)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo762x39 += 30;
                                }
                                if (player3.ammo762x39 <= 29)
                                {
                                    player3.clip = 0;
                                }
                            }
                        }
                        if (player3.mpclass == "gunner")
                        {
                            if (player3.weapon == "volcanic" && !player3.gunnerupgrade)
                            {
                                if (player3.ammo41 >= player3.clip - 1)
                                {
                                    player3.ammo41 -= (10 - (player3.clip - 1));
                                }
                                player3.weapon = "uzi";
                                if (player3.ammoUzi > 31)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammoUzi += 32;
                                }
                                if (player3.ammoUzi <= 31)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "volcanic" && player3.gunnerupgrade)
                            {
                                if (player3.ammo41 >= player3.clip - 1)
                                {
                                    player3.ammo41 -= (10 - (player3.clip - 1));
                                }
                                player3.weapon = "m134";
                                player3.clip = 1001;
                            }
                        }
                        if (player3.mpclass == "mggunner")
                        {
                            if (player3.weapon == "M9")
                            {
                                if (player3.ammo9mm >= player3.clip - 1)
                                {
                                    player3.ammo9mm -= (15 - (player3.clip - 1));
                                }
                                player3.weapon = "M249";
                                if (player3.ammo556 > 99)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo556 += 100;
                                }
                                if (player3.ammo556 <= 99)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "magnum24")
                            {
                                if (player3.ammo20mm >= player3.clip - 1)
                                {
                                    player3.ammo20mm -= (8 - (player3.clip - 1));
                                }
                                player3.weapon = "pkm";
                                if (player3.ammo762x54 > 99)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo762x54 += 100;
                                }
                                if (player3.ammo762x54 <= 99)
                                {
                                    player3.clip = 0;
                                }
                            }
                        }
                        if (player3.mpclass == "sniper")
                        {
                            if (player3.weapon == "M9")
                            {
                                if (player3.ammo9mm >= player3.clip - 1)
                                {
                                    player3.ammo9mm -= (15 - (player3.clip - 1));
                                }
                                player3.weapon = "R700Sniper";
                                if (player3.ammo3006 > 4)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo3006 += 5;
                                }
                                if (player3.ammo3006 <= 4)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "dbshotgun")
                            {
                                if (player3.ammo12Gauge >= player3.clip - 1)
                                {
                                    player3.ammo12Gauge -= (2 - (player3.clip - 1));
                                }
                                player3.weapon = "m21";
                                if (player3.ammo762x51 > 9)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo762x51 += 10;
                                }
                                if (player3.ammo762x51 <= 9)
                                {
                                    player3.clip = 0;
                                }
                            }

                        }
                        if (player3.mpclass == "specops")
                        {
                            if (player3.weapon == "M9")
                            {
                                if (player3.ammo9mm >= player3.clip - 1)
                                {
                                    player3.ammo9mm -= (15 - (player3.clip - 1));
                                }
                                player3.weapon = "mp5k";
                                if (player3.ammo9mm > 29)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo9mm += 30;
                                }
                                if (player3.ammo9mm <= 29)
                                {
                                    player3.clip = 0;
                                }
                            }
                            if (player3.weapon == "mp5k" && player3.specopupgrade)
                            {
                                if (player3.ammo9mm >= player3.clip - 1)
                                {
                                    player3.ammo9mm -= (30 - (player3.clip - 1));
                                }
                                player3.weapon = "M4SOPMOD";
                                if (player3.ammo556 > 29)
                                {
                                    player3.clip = 0;
                                    player3.reloading = true;
                                    player3.reloadTimeNum = 1000;
                                    player3.ammo556 += 30;
                                }
                                if (player3.ammo556 <= 29)
                                {
                                    player3.clip = 0;
                                }
                            }

                        }

                    }
                }
            }
            if (mode == "coop" || mode == "juggernaut2" || mode == "deathmatch2" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
            {
                player3.freeLook = MathHelper.Clamp(player3.freeLook, MathHelper.ToRadians(-89.9f), MathHelper.ToRadians(89.9f));
                if (!player3.dead && player3.menu != "chooseclass")
                {
                    if (!player3.ads)
                    {
                        player3.Rotation -= player3.currentState.ThumbSticks.Right.X * 0.05f;
                        player3.freeLook += player3.currentState.ThumbSticks.Right.Y * 0.02f;
                    }
                    if (player3.ads)
                    {
                        player3.Rotation -= player3.currentState.ThumbSticks.Right.X * 0.025f;
                        player3.freeLook += player3.currentState.ThumbSticks.Right.Y * 0.01f;
                    }
                    Vector3 velocityAdd = Vector3.Zero;
                    if (player3.currentState.ThumbSticks.Left.Y > 0)
                    {
                        velocityAdd.Z -= 2.0f;
                    }
                    if (player3.currentState.ThumbSticks.Left.Y < 0)
                    {
                        velocityAdd.Z += 2.0f;
                    }
                    if (player3.currentState.ThumbSticks.Left.X < 0)
                    {
                        velocityAdd.X -= 2.0f;
                    }
                    if (player3.currentState.ThumbSticks.Left.X > 0)
                    {
                        velocityAdd.X += 2.0f;
                    }
                    if (player3.currentState.ThumbSticks.Left.Y > 0 && player3.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.Z -= 4.5f;
                    }
                    if (player3.currentState.ThumbSticks.Left.Y < 0 && player3.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.Z += 4.5f;
                    }
                    if (player3.currentState.ThumbSticks.Left.X < 0 && player3.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.X -= 4.5f;
                    }
                    if (player3.currentState.ThumbSticks.Left.X > 0 && player3.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.X += 4.5f;
                    }
                    Matrix moveMatrix = Matrix.CreateRotationY(player3.Rotation);
                    player3.Position += Vector3.Transform(velocityAdd, moveMatrix);
                    if (player3.currentState.Buttons.A == ButtonState.Pressed && player3.lastState.Buttons.A == ButtonState.Pressed)
                    {
                        if (player3.canjump && player3.posture == "standing")
                        {
                            player3.jumpspeed = 1.5f;
                            player3.canjump = false;
                            player3.oldY = player3.Position.Y;
                        }
                        if (player3.posture == "crouching")
                        {
                            player3.posture = "standing";
                        }
                    }
                    if (player3.currentState.Buttons.LeftStick == ButtonState.Pressed && player3.lastState.Buttons.LeftStick == ButtonState.Released)
                    {
                        if (player3.posture == "standing")
                        {
                            player3.posture = "crouching";
                        }
                    }
                    if (player3.weapon == "M9")
                    {
                        if (player3.ammo9mm <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 10)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo9mm >= 15)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player3.reloadTimeNum >= 150)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 16;
                            player3.ammo9mm -= 15;
                        }
                    }
                    if (player3.weapon == "glock18")
                    {
                        if (player3.ammo9mm <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 3)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo9mm > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo9mm >= 33)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 34;
                            player3.ammo9mm -= 33;
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo9mm > 0 && player3.ammo9mm <= 32)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo9mm + 1;
                            player3.ammo9mm = 0;
                        }
                    }
                    if (player3.weapon == "magnum24")
                    {
                        if (player3.ammo20mm <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 10)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo20mm >= 8)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player3.reloadTimeNum >= 150)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 9;
                            player3.ammo20mm -= 8;
                        }
                    }
                    if (player3.weapon == "volcanic")
                    {
                        if (player3.ammo41 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 40)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.clip < 11 && player3.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.reloading)
                        {
                            player3.reloadTimeNum += 1;
                            if (player3.ammo41 > 0)
                            {
                                if (player3.reloadTimeNum == 14 && player3.clip < 11)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.clip += 1;
                                    if (player3.clip >= 2)
                                    {
                                        player3.ammo41 -= 1;
                                    }
                                }
                                if (player3.currentState.Triggers.Right > 0 && player3.lastState.Triggers.Right > 0 && player3.clip >= 2)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                                if (player3.clip == 11)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                            }
                            if (player3.ammo41 <= 0)
                            {
                                player3.reloading = false;
                            }
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player3.weapon == "AK74")
                    {
                        if (player3.ammo545 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 4)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m249_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo545 >= 30)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo545 < 30 && player3.ammo545 > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo545 >= 30)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 31;
                            player3.ammo545 -= 30;
                        }
                        if (player3.reloadTimeNum >= 200 && player3.ammo545 < 30 && player3.ammo545 > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo545 + 1;
                            player3.ammo545 = 0;
                        }
                    }
                    if (player3.weapon == "uzi")
                    {
                        if (player3.ammoUzi <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 5)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("uzi_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammoUzi >= 32)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammoUzi < 32 && player3.ammoUzi > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("uzi_reload");
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammoUzi >= 32)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 33;
                            player3.ammoUzi -= 32;
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammoUzi < 32 && player3.ammoUzi > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammoUzi + 1;
                            player3.ammoUzi = 0;
                        }
                    }
                    if (player3.weapon == "hipower")
                    {
                        if (player3.ammo9mm <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 8)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo9mm >= 13)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player3.reloadTimeNum >= 130)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 14;
                            player3.ammo9mm -= 13;
                        }
                    }
                    if (player3.weapon == "mac10")
                    {
                        if (player3.ammo45 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 5)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("357_Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo45 >= 32)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo45 < 32 && player3.ammo45 > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("uzi_reload");
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo45 >= 32)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 33;
                            player3.ammo45 -= 32;
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo45 < 32 && player3.ammo45 > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo45 + 1;
                            player3.ammo45 = 0;
                        }
                    }
                    if (player3.weapon == "cz550")
                    {
                        if (player3.ammo600overkill <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 80)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("R700Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo600overkill >= 3)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("R700Reload");
                        }
                        if (player3.reloadTimeNum >= 150)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 4;
                            player3.ammo600overkill -= 3;
                        }
                    }
                    if (player3.weapon == "M249")
                    {
                        if (player3.ammo556 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 4)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m249_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo556 >= 100)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo556 < 100 && player3.ammo556 > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player3.reloadTimeNum >= 250 && player3.ammo556 >= 100)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 101;
                            player3.ammo556 -= 100;
                        }
                        if (player3.reloadTimeNum >= 250 && player3.ammo556 < 100 && player3.ammo556 > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo556 + 1;
                            player3.ammo556 = 0;
                        }
                    }
                    if (player3.weapon == "pkm")
                    {
                        if (player3.ammo762x54 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 5)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo762x54 >= 100)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo762x54 < 100 && player3.ammo762x54 > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player3.reloadTimeNum >= 300 && player3.ammo762x54 >= 100)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 101;
                            player3.ammo762x54 -= 100;
                        }
                        if (player3.reloadTimeNum >= 300 && player3.ammo762x54 < 100 && player3.ammo762x54 > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo762x54 + 1;
                            player3.ammo762x54 = 0;
                        }
                    }
                    if (player3.weapon == "m134")
                    {
                        if (player3.ammonull <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 2)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammonull >= 1000)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammonull < 1000 && player3.ammonull > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player3.reloadTimeNum >= 300 && player3.ammonull >= 1000)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 1001;
                            player3.ammonull -= 1000;
                        }
                        if (player3.reloadTimeNum >= 300 && player3.ammonull < 1000 && player3.ammonull > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammonull + 1;
                            player3.ammonull = 0;
                        }
                    }
                    if (player3.weapon == "S&W500")
                    {
                        if (player3.ammo500magnum <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 37)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo500magnum >= 5)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player3.reloadTimeNum >= 250)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 6;
                            player3.ammo500magnum -= 5;
                        }
                    }
                    if (player3.weapon == "M4SOPMOD")
                    {
                        if (player3.ammo556 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 3)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("uzi_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo556 >= 30)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo556 < 30 && player3.ammo556 > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player3.reloadTimeNum >= 200 && player3.ammo556 >= 30)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 31;
                            player3.ammo556 -= 30;
                        }
                        if (player3.reloadTimeNum >= 200 && player3.ammo556 < 30 && player3.ammo556 > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo556 + 1;
                            player3.ammo556 = 0;
                        }
                    }
                    if (player3.weapon == "mp5k")
                    {
                        if (player3.ammo9mm <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 3)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo9mm >= 30)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo9mm < 30 && player3.ammo9mm > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("mp5k_reload");
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo9mm >= 30)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 31;
                            player3.ammo9mm -= 30;
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo9mm < 30 && player3.ammo9mm > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo9mm + 1;
                            player3.ammo9mm = 0;
                        }
                    }
                    if (player3.weapon == "hk21")
                    {
                        if (player3.ammo762x51 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 4)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo762x51 >= 100)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo762x51 < 100 && player3.ammo762x51 > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player3.reloadTimeNum >= 300 && player3.ammo762x51 >= 100)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 101;
                            player3.ammo762x51 -= 100;
                        }
                        if (player3.reloadTimeNum >= 300 && player3.ammo762x51 < 100 && player3.ammo762x51 > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo762x51 + 1;
                            player3.ammo762x51 = 0;
                        }
                    }
                    if (player3.weapon == "mp40")
                    {
                        if (player3.ammo9mm <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 6)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo9mm >= 32)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo9mm < 32 && player3.ammo9mm > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("mp5k_reload");
                        }
                        if (player3.reloadTimeNum >= 180 && player3.ammo9mm >= 32)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 33;
                            player3.ammo9mm -= 32;
                        }
                        if (player3.reloadTimeNum >= 180 && player3.ammo9mm < 32 && player3.ammo9mm > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo9mm + 1;
                            player3.ammo9mm = 0;
                        }
                    }
                    if (player3.weapon == "AK47")
                    {
                        if (player3.ammo762x39 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 5)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("AK47_Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo762x39 >= 30)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo762x39 < 30 && player3.ammo762x39 > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo762x39 >= 30)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 31;
                            player3.ammo762x39 -= 30;
                        }
                        if (player3.reloadTimeNum >= 200 && player3.ammo762x39 < 30 && player3.ammo762x39 > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo762x39 + 1;
                            player3.ammo762x39 = 0;
                        }
                    }
                    if (player3.weapon == "aa12")
                    {
                        if (player3.ammo12Gauge <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 10)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo12Gauge >= 32)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.ammo12Gauge < 32 && player3.ammo12Gauge > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player3.reloadTimeNum >= 150 && player3.ammo12Gauge >= 32)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 33;
                            player3.ammo12Gauge -= 32;
                        }
                        if (player3.reloadTimeNum >= 200 && player3.ammo12Gauge < 32 && player3.ammo12Gauge > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.ammo12Gauge + 1;
                            player3.ammo12Gauge = 0;
                        }
                    }
                    if (player3.weapon == "medic")
                    {
                        if (player3.medpacks <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 3)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                            }
                        }
                        if (player3.clip <= 0 && player3.medpacks >= 1)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.clip <= 0 && player3.medpacks < 1 && player3.medpacks > 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;
                        }
                        if (player3.reloadTimeNum >= 300 && player3.medpacks >= 1)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 2;
                            player3.medpacks -= 1;
                        }
                        if (player3.reloadTimeNum >= 300 && player3.medpacks < 1 && player3.medpacks > 0)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = player3.medpacks + 1;
                            player3.medpacks = 0;
                        }
                    }
                    if (player3.weapon == "dbshotgun")
                    {
                        if (player3.ammo12Gauge <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 10)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player3.clip <= 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.clip < 3 && player3.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.reloading)
                        {
                            player3.reloadTimeNum += 1;
                            if (player3.ammo12Gauge > 0)
                            {
                                if (player3.reloadTimeNum == 70 && player3.clip < 3)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.clip += 1;
                                    if (player3.clip >= 2)
                                    {
                                        player3.ammo12Gauge -= 1;
                                    }
                                }
                                if (player3.currentState.Triggers.Right > 0 && player3.lastState.Triggers.Right > 0 && player3.clip >= 2)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                }
                                if (player3.clip == 3)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                }
                            }
                            if (player3.ammo12Gauge <= 0)
                            {
                                player3.reloading = false;
                            }
                        }
                    }
                    if (player3.weapon == "anaconda")
                    {
                        if (player3.ammo44magnum <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 30)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo44magnum >= 6)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player3.reloadTimeNum >= 250)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 7;
                            player3.ammo44magnum -= 6;
                        }
                    }
                    if (player3.weapon == "python")
                    {
                        if (player3.ammo357magnum <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 20)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("357_Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo357magnum >= 6)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player3.reloadTimeNum >= 250)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 7;
                            player3.ammo357magnum -= 6;
                        }
                    }
                    if (player3.weapon == "R870")
                    {
                        if (player3.ammo12Gauge <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 55)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firepause == 1)
                            {
                                gunsoundbank.PlayCue("SPASPump");
                            }
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player3.clip <= 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.clip < 9 && player3.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.reloading)
                        {
                            player3.reloadTimeNum += 1;
                            if (player3.ammo12Gauge > 0)
                            {
                                if (player3.reloadTimeNum == 20 && player3.clip < 9)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.clip += 1;
                                    if (player3.clip >= 2)
                                    {
                                        player3.ammo12Gauge -= 1;
                                    }
                                }
                                if (player3.currentState.Triggers.Right > 0 && player3.lastState.Triggers.Right > 0 && player3.clip >= 2)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player3.clip == 9)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player3.ammo12Gauge <= 0)
                            {
                                player3.reloading = false;
                            }
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player3.weapon == "m21")
                    {
                        if (player3.ammo762x51 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 20)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo762x51 >= 10)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player3.reloadTimeNum >= 150)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 11;
                            player3.ammo762x51 -= 10;
                        }
                    }
                    if (player3.weapon == "svd")
                    {
                        if (player3.ammo762x54 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 25)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("svd_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo762x54 >= 5)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player3.reloadTimeNum >= 150)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 6;
                            player3.ammo762x54 -= 5;
                        }
                    }
                    if (player3.weapon == "m14")
                    {
                        if (player3.ammo762x51 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 10)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo762x51 >= 20)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player3.reloadTimeNum >= 150)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 21;
                            player3.ammo762x51 -= 20;
                        }
                    }
                    if (player3.weapon == "R700" || player3.weapon == "R700Sniper")
                    {
                        if (player3.ammo3006 <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 80)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("R700Fire");
                                }
                            }
                        }
                        if (player3.clip <= 0 && player3.ammo3006 >= 5)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.reloadTimeNum += 1;
                            player3.firing = false;

                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("R700Reload");
                        }
                        if (player3.reloadTimeNum >= 150)
                        {
                            player3.reloadTimeNum = 0;
                            player3.reloading = false;
                            player3.canshoot = true;
                            player3.clip = 6;
                            player3.ammo3006 -= 5;
                        }
                    }
                    if (player3.weapon == "winchester1887")
                    {
                        if (player3.ammo10Gauge <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 80)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firepause == 1)
                            {
                                gunsoundbank.PlayCue("SPASPump");
                            }
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player3.clip <= 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.clip < 6 && player3.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.reloading)
                        {
                            player3.reloadTimeNum += 1;
                            if (player3.ammo10Gauge > 0)
                            {
                                if (player3.reloadTimeNum == 20 && player3.clip < 6)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.clip += 1;
                                    if (player3.clip >= 2)
                                    {
                                        player3.ammo10Gauge -= 1;
                                    }
                                }
                                if (player3.currentState.Triggers.Right > 0 && player3.lastState.Triggers.Right > 0 && player3.clip >= 2)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player3.clip == 6)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player3.ammo10Gauge <= 0)
                            {
                                player3.reloading = false;
                            }
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player3.weapon == "SPAS12")
                    {
                        if (player3.ammo12Gauge <= 0)
                        {
                            if (player3.clip > 0)
                            {
                                player3.canshoot = true;
                                player3.reloading = false;
                            }
                            if (player3.clip <= 0)
                            {
                                player3.canshoot = false;
                                player3.reloading = false;
                                player3.firing = false;
                            }
                        }
                        if (player3.canshoot)
                        {

                            if (player3.currentState.Triggers.Right > 0 && player3.firepause == 0)
                            {
                                if (player3.clip > 0)
                                {
                                    player3.firing = true;
                                    player3.firepause = 1;
                                }
                            }
                            if (player3.lastState.Triggers.Right > 0)
                            {
                                player3.firing = false;
                                if (player3.firepause >= 30)
                                {
                                    player3.firepause = 0;
                                    if (player3.clip > 0)
                                    {
                                        player3.firing = true;
                                    }
                                }
                            }
                            player3.firepause += 1;
                            if (player3.firing)
                            {
                                player3.clip -= 1;
                                if (player3.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player3.clip <= 0)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.clip < 9 && player3.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player3.reloading = true;
                            player3.canshoot = false;
                            player3.firing = false;
                        }
                        if (player3.reloading)
                        {
                            player3.reloadTimeNum += 1;
                            if (player3.ammo12Gauge > 0)
                            {
                                if (player3.reloadTimeNum == 20 && player3.clip < 9)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.clip += 1;
                                    if (player3.clip >= 2)
                                    {
                                        player3.ammo12Gauge -= 1;
                                    }
                                }
                                if (player3.currentState.Triggers.Right > 0 && player3.lastState.Triggers.Right > 0 && player3.clip >= 2)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player3.clip == 9)
                                {
                                    player3.reloadTimeNum = 0;
                                    player3.canshoot = true;
                                    player3.reloading = false;
                                    player3.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player3.ammo12Gauge <= 0)
                            {
                                player3.reloading = false;
                            }
                        }
                        if (player3.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player3.currentState.Triggers.Left > 0)
                    {
                        player3.ads = true;
                    }
                    if (player3.currentState.Triggers.Left <= 0)
                    {
                        player3.ads = false;
                    }
                    if (player3.currentState.Triggers.Right <= 0)
                    {
                        player3.firing = false;
                    }
                }
                if (player3.dead)
                {
                    if (player3.currentState.Buttons.Start == ButtonState.Pressed)
                    {
                        player3.dead = false;
                        if (mode == "coop")
                        {
                            player3.weapon = player3.startingweapon;
                            player3.clip = player3.startingclip;
                        }
                        else if (mode == "class")
                        {
                            if (player3.mpclass == "specops")
                            {
                                if (!player3.specopupgrade)
                                {
                                    player3.weapon = "mp5k";
                                    player3.clip = 31;
                                }
                                if (player3.specopupgrade)
                                {
                                    player3.weapon = "M4SOPMOD";
                                    player3.clip = 31;
                                }
                            }
                            else if (player3.mpclass == "sniper")
                            {
                                if (!player3.sniperupgrade)
                                {
                                    player3.weapon = "R700Sniper";
                                    player3.clip = 6;
                                }
                                if (player3.sniperupgrade)
                                {
                                    player3.weapon = "m21";
                                    player3.clip = 11;
                                }
                            }
                            else if (player3.mpclass == "mggunner")
                            {
                                if (!player3.mgupgrade)
                                {
                                    player3.weapon = "M249";
                                    player3.clip = 101;
                                }
                                if (player3.mgupgrade)
                                {
                                    player3.weapon = "pkm";
                                    player3.clip = 101;
                                }
                            }
                            else if (player3.mpclass == "gunner")
                            {
                                if (!player3.gunnerupgrade)
                                {
                                    player3.weapon = "uzi";
                                    player3.clip = 33;
                                }
                                if (player3.gunnerupgrade)
                                {
                                    player3.weapon = "m134";
                                    player3.clip = 1001;
                                }
                            }
                            else if (player3.mpclass == "godclass")
                            {
                                if (!player3.godupgrade)
                                {
                                    player3.weapon = "AK74";
                                    player3.clip = 31;
                                }
                                if (player3.godupgrade)
                                {
                                    player3.weapon = "AK47";
                                    player3.clip = 31;
                                }
                            }
                            else
                            {
                                player3.mpclass = "specops";
                                if (!player3.specopupgrade)
                                {
                                    player3.weapon = "mp5k";
                                    player3.clip = 31;
                                }
                                if (player3.specopupgrade)
                                {
                                    player3.weapon = "M4SOPMOD";
                                    player3.clip = 31;
                                }
                            }
                        }
                        else
                        {
                            player3.clip = 33;
                            player3.weapon = "mac10";
                        }
                        player3.health = 100;
                        player3.ammo9mm = 420;
                        player3.ammo44magnum = 54;
                        player3.ammo3006 = 60;
                        player3.ammo12Gauge = 64;
                        player3.ammo10Gauge = 40;
                        player3.ammoUzi = 320;
                        player3.ammo45 = 224;
                        player3.ammorpg = 5;
                        player3.ammo762x39 = 180;
                        player3.ammo762x54 = 300;
                        player3.ammo357magnum = 90;
                        player3.ammo556 = 300;
                        player3.ammo545 = 360;
                        player3.ammo762x51 = 100;
                        player3.ammo20mm = 104;
                        player3.ammo41 = 600;
                        player3.medpacks = 2;
                        player3.ammo500magnum = 45;
                        player3.reloading = false;
                        player3.canshoot = true;
                        if (mode != "tdm4" && mode != "class")
                        {
                            player3.Position = new Vector3(random.Next(300) - 150, -5, random.Next(300) - 150);
                        }
                        if (mode == "class")
                        {
                            player3.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player3.oldY = 16;
                        }
                        if (mode == "tdm4")
                        {
                            int spawnposition = random.Next(4);
                            if (spawnposition == 0)
                            {
                                player3.room = "room1";
                                player3.Position = new Vector3(-240, 4, 200);
                            }
                            if (spawnposition == 1)
                            {
                                player3.room = "janitorcloset";
                                player3.Position = new Vector3(-170, 4, 0);
                            }
                            if (spawnposition == 2)
                            {
                                player3.room = "room2";
                                player3.Position = new Vector3(-240, 4, -200);
                            }
                            if (spawnposition == 3)
                            {
                                player3.room = "poolroom";
                                player3.Position = new Vector3(410, 4, 50);
                            }
                        }
                    }
                }
            }
            player3.lastState = player3.currentState;
        }
        protected void Input4()
        {
            player4.currentState = GamePad.GetState(PlayerIndex.Four);
            if (mode == "menu")
            {
                if (player4.currentState.ThumbSticks.Right.Y > 0)
                {
                    cursorrect4.Y -= 4;
                }
                if (player4.currentState.ThumbSticks.Right.Y < 0)
                {
                    cursorrect4.Y += 4;
                }
                if (player4.currentState.ThumbSticks.Right.Y == 0)
                {
                    cursorrect4.Y += 0;
                }
                if (player4.currentState.ThumbSticks.Right.X > 0)
                {
                    cursorrect4.X += 4;
                }
                if (player4.currentState.ThumbSticks.Right.X < 0)
                {
                    cursorrect4.X -= 4;
                }
                if (player4.currentState.ThumbSticks.Right.X == 0)
                {
                    cursorrect4.X += 0;
                }
                if (player4.currentState.Buttons.A == ButtonState.Pressed && player4.lastState.Buttons.A == ButtonState.Released)
                {
                    if (cursorrect4.Intersects(weaponRect))
                    {
                        player4.startingweapon = "uzi";
                        player4.startingclip = 33;
                        p4rect = new Rectangle(weaponRect.X - 10, weaponRect.Y + 30, 10, 10);
                    }
                    if (cursorrect4.Intersects(weaponRect2))
                    {
                        player4.startingweapon = "winchester1887";
                        player4.clip = 6;
                        player4.startingclip = 6;
                        p4rect = new Rectangle(weaponRect2.X - 10, weaponRect2.Y + 30, 10, 10);
                    }
                    if (cursorrect4.Intersects(weaponRect3))
                    {
                        player4.startingweapon = "R700";
                        player4.clip = 6;
                        player4.startingclip = 6;
                        p4rect = new Rectangle(weaponRect3.X - 10, weaponRect3.Y + 30, 10, 10);
                    }
                    if (cursorrect4.Intersects(weaponRect4))
                    {
                        player4.startingweapon = "anaconda";
                        player4.clip = 7;
                        player4.startingclip = 7;
                        p4rect = new Rectangle(weaponRect4.X - 10, weaponRect4.Y + 30, 10, 10);
                    }
                    if (cursorrect4.Intersects(weaponRect5))
                    {
                        player4.startingweapon = "mp5k";
                        player4.startingclip = 31;
                        p4rect = new Rectangle(weaponRect5.X - 10, weaponRect5.Y + 10, 10, 10);
                    }
                    if (cursorrect4.Intersects(weaponRect6))
                    {
                        player4.startingweapon = "mac10";
                        player4.clip = 33;
                        player4.startingclip = 33;
                        p4rect = new Rectangle(weaponRect6.X - 10, weaponRect6.Y + 10, 10, 10);
                    }
                    if (cursorrect4.Intersects(weaponRect7))
                    {
                        player4.startingweapon = "R870";
                        player4.clip = 9;
                        player4.startingclip = 9;
                        p4rect = new Rectangle(weaponRect7.X - 10, weaponRect7.Y + 10, 10, 10);
                    }
                    if (cursorrect4.Intersects(weaponRect8))
                    {
                        player4.startingweapon = "m14";
                        player4.clip = 21;
                        player4.startingclip = 21;
                        p4rect = new Rectangle(weaponRect8.X - 10, weaponRect8.Y + 10, 10, 10);
                    }
                }
            }
            if (mode == "class")
            {
                if (player4.menu == "")
                {
                    if (player4.currentState.Buttons.Back == ButtonState.Pressed && player4.lastState.Buttons.Back == ButtonState.Released)
                    {
                        player4.menu = "chooseclass";
                    }
                }
                if (player4.menu == "chooseclass")
                {
                    if (player4.currentState.Buttons.Start == ButtonState.Pressed && player4.lastState.Buttons.Start == ButtonState.Released)
                    {
                        player4.menu = "";
                    }
                    if (player4.currentState.ThumbSticks.Right.Y > 0)
                    {
                        cursorrect4.Y -= 4;
                    }
                    if (player4.currentState.ThumbSticks.Right.Y < 0)
                    {
                        cursorrect4.Y += 4;
                    }
                    if (player4.currentState.ThumbSticks.Right.Y == 0)
                    {
                        cursorrect4.Y += 0;
                    }
                    if (player4.currentState.ThumbSticks.Right.X > 0)
                    {
                        cursorrect4.X += 4;
                    }
                    if (player4.currentState.ThumbSticks.Right.X < 0)
                    {
                        cursorrect4.X -= 4;
                    }
                    if (player4.currentState.ThumbSticks.Right.X == 0)
                    {
                        cursorrect4.X += 0;
                    }
                    if (player4.currentState.Buttons.A == ButtonState.Pressed && player4.lastState.Buttons.A == ButtonState.Released && player4.dead)
                    {
                        if (cursorrect4.Intersects(godclassrect))
                        {
                            player4.mpclass = "godclass";
                            if (player4.godupgrade)
                            {
                                player4.clip = 31;
                                player4.weapon = "AK47";
                                player4.health = 100;
                                player4.dead = false;
                            }
                            if (!player4.godupgrade)
                            {
                                player4.clip = 31;
                                player4.weapon = "AK74";
                                player4.health = 100;
                                player4.dead = false;
                            }
                        }
                        if (cursorrect4.Intersects(gunnerclassrect))
                        {
                            player4.mpclass = "gunner";
                            if (player4.gunnerupgrade)
                            {
                                player4.clip = 1001;
                                player4.weapon = "m134";
                                player4.health = 100;
                                player4.dead = false;
                            }
                            if (!player4.gunnerupgrade)
                            {
                                player4.clip = 33;
                                player4.weapon = "uzi";
                                player4.health = 100;
                                player4.dead = false;
                            }
                        }
                        if (cursorrect4.Intersects(mggunnerclassrect))
                        {
                            player4.mpclass = "mggunner";
                            if (player4.mgupgrade)
                            {
                                player4.clip = 101;
                                player4.weapon = "pkm";
                                player4.health = 100;
                                player4.dead = false;
                            }
                            if (!player4.mgupgrade)
                            {
                                player4.clip = 101;
                                player4.weapon = "M249";
                                player4.health = 100;
                                player4.dead = false;
                            }
                        }
                        if (cursorrect4.Intersects(sniperclassrect))
                        {
                            player4.mpclass = "sniper";
                            if (player4.sniperupgrade)
                            {
                                player4.clip = 11;
                                player4.weapon = "m21";
                                player4.health = 100;
                                player4.dead = false;
                            }
                            if (!player4.sniperupgrade)
                            {
                                player4.clip = 6;
                                player4.weapon = "R700Sniper";
                                player4.health = 100;
                                player4.dead = false;
                            }
                        }
                        if (cursorrect4.Intersects(specoprect))
                        {
                            player4.mpclass = "specops";
                            if (player4.specopupgrade)
                            {
                                player4.clip = 31;
                                player4.weapon = "M4SOPMOD";
                                player4.health = 100;
                                player4.dead = false;
                            }
                            if (!player4.specopupgrade)
                            {
                                player4.clip = 31;
                                player4.weapon = "mp5k";
                                player4.health = 100;
                                player4.dead = false;
                            }
                        }
                    }
                    if (player4.currentState.Buttons.X == ButtonState.Pressed && player4.lastState.Buttons.X == ButtonState.Released)
                    {
                        if (cursorrect4.Intersects(godclassrect))
                        {
                            player4.godupgrade = true;
                        }
                        if (cursorrect4.Intersects(gunnerclassrect) && allownoobweapons)
                        {
                            player4.gunnerupgrade = true;
                        }
                        if (cursorrect4.Intersects(mggunnerclassrect) && allownoobweapons)
                        {
                            player4.mgupgrade = true;
                        }
                        if (cursorrect4.Intersects(sniperclassrect))
                        {
                            player4.sniperupgrade = true;
                        }
                        if (cursorrect4.Intersects(specoprect))
                        {
                            player4.specopupgrade = true;
                        }
                    }
                    if (player4.currentState.Buttons.B == ButtonState.Pressed && player4.lastState.Buttons.B == ButtonState.Released)
                    {
                        if (cursorrect4.Intersects(godclassrect))
                        {
                            player4.godupgrade = false;
                        }
                        if (cursorrect4.Intersects(gunnerclassrect))
                        {
                            player4.gunnerupgrade = false;
                        }
                        if (cursorrect4.Intersects(mggunnerclassrect))
                        {
                            player4.mgupgrade = false;
                        }
                        if (cursorrect4.Intersects(sniperclassrect))
                        {
                            player4.sniperupgrade = false;
                        }
                        if (cursorrect4.Intersects(specoprect))
                        {
                            player4.specopupgrade = false;
                        }
                    }
                }
                else
                {
                    if (player4.currentState.Buttons.Y == ButtonState.Pressed && player4.lastState.Buttons.Y == ButtonState.Released)
                    {
                        if (player4.mpclass == "godclass")
                        {
                            if (player4.weapon == "AK74")
                            {
                                if (player4.ammo545 >= player4.clip - 1)
                                {
                                    player4.ammo545 -= (30 - (player4.clip - 1));
                                }
                                player4.weapon = "python";
                                if (player4.ammo357magnum > 5)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo357magnum += 6;
                                }
                                if (player4.ammo357magnum <= 5)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "AK47")
                            {
                                if (player4.ammo762x39 >= player4.clip - 1)
                                {
                                    player4.ammo762x39 -= (30 - (player4.clip - 1));
                                }
                                player4.weapon = "glock18";
                                if (player4.ammo9mm > 32)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo9mm += 33;
                                }
                                if (player4.ammo9mm <= 32)
                                {
                                    player4.clip = 0;
                                }
                            }
                        }
                        if (player4.mpclass == "gunner")
                        {
                            if (player4.weapon == "uzi")
                            {
                                if (player4.ammoUzi >= player4.clip - 1)
                                {
                                    player4.ammoUzi -= (32 - (player4.clip - 1));
                                }
                                player4.weapon = "volcanic";
                                player4.clip = 11;
                                player4.reloading = false;
                                player4.reloadTimeNum = 0;
                            }
                            if (player4.weapon == "m134")
                            {
                                player4.weapon = "volcanic";
                                player4.clip = 11;
                                player4.reloading = false;
                                player4.reloadTimeNum = 0;

                            }
                        }
                        if (player4.mpclass == "mggunner")
                        {
                            if (player4.weapon == "M249")
                            {
                                if (player4.ammo556 >= player4.clip - 1)
                                {
                                    player4.ammo556 -= (100 - (player4.clip - 1));
                                }
                                player4.weapon = "M9";
                                if (player4.ammo9mm > 15)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo9mm += 15;
                                }
                                if (player4.ammo9mm <= 15)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "pkm")
                            {
                                if (player4.ammo762x54 >= player4.clip - 1)
                                {
                                    player4.ammo762x54 -= (100 - (player4.clip - 1));
                                }
                                player4.weapon = "magnum24";
                                if (player4.ammo20mm > 7)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo20mm += 8;
                                }
                                if (player4.ammo20mm <= 7)
                                {
                                    player4.clip = 0;
                                }
                            }
                        }
                        if (player4.mpclass == "sniper")
                        {
                            if (player4.weapon == "R700Sniper")
                            {
                                if (player4.ammo3006 >= player4.clip - 1)
                                {
                                    player4.ammo3006 -= (5 - (player4.clip - 1));
                                }
                                player4.weapon = "M9";
                                if (player4.ammo9mm > 15)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo9mm += 15;
                                }
                                if (player4.ammo9mm <= 15)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "m21")
                            {
                                if (player4.ammo762x51 >= player4.clip - 1)
                                {
                                    player4.ammo762x51 -= (10 - (player4.clip - 1));
                                }
                                player4.weapon = "dbshotgun";
                                player4.clip = 3;
                                player4.reloading = false;
                                player4.reloadTimeNum = 0;
                            }
                        }
                        if (player4.mpclass == "specops")
                        {
                            if (player4.weapon == "mp5k" && !player4.specopupgrade)
                            {
                                if (player4.ammo9mm >= player4.clip - 1)
                                {
                                    player4.ammo9mm -= (30 - (player4.clip - 1));
                                }
                                player4.weapon = "M9";
                                if (player4.ammo9mm > 15)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo9mm += 15;
                                }
                                if (player4.ammo9mm <= 15)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "M4SOPMOD")
                            {
                                if (player4.ammo556 >= player4.clip - 1)
                                {
                                    player4.ammo556 -= (30 - (player4.clip - 1));
                                }
                                player4.weapon = "mp5k";
                                if (player4.ammo9mm > 29)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo9mm += 30;
                                }
                                if (player4.ammo9mm <= 29)
                                {
                                    player4.clip = 0;
                                }
                            }
                        }
                    }
                    if (player4.currentState.Buttons.RightShoulder == ButtonState.Pressed && player4.lastState.Buttons.RightShoulder == ButtonState.Released)
                    {
                        if (player4.mpclass == "godclass")
                        {
                            if (player4.weapon == "python")
                            {
                                if (player4.ammo357magnum >= player4.clip - 1)
                                {
                                    player4.ammo357magnum -= (6 - (player4.clip - 1));
                                }
                                player4.weapon = "AK74";
                                if (player4.ammo545 > 29)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo545 += 30;
                                }
                                if (player4.ammo545 <= 29)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "glock18")
                            {
                                if (player4.ammo9mm >= player4.clip - 1)
                                {
                                    player4.ammo9mm -= (33 - (player4.clip - 1));
                                }
                                player4.weapon = "AK47";
                                if (player4.ammo762x39 > 29)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo762x39 += 30;
                                }
                                if (player4.ammo762x39 <= 29)
                                {
                                    player4.clip = 0;
                                }
                            }
                        }
                        if (player4.mpclass == "gunner")
                        {
                            if (player4.weapon == "volcanic" && !player4.gunnerupgrade)
                            {
                                if (player4.ammo41 >= player4.clip - 1)
                                {
                                    player4.ammo41 -= (10 - (player4.clip - 1));
                                }
                                player4.weapon = "uzi";
                                if (player4.ammoUzi > 31)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammoUzi += 32;
                                }
                                if (player4.ammoUzi <= 31)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "volcanic" && player4.gunnerupgrade)
                            {
                                if (player4.ammo41 >= player4.clip - 1)
                                {
                                    player4.ammo41 -= (10 - (player4.clip - 1));
                                }
                                player4.weapon = "m134";
                                player4.clip = 1001;
                            }
                        }
                        if (player4.mpclass == "mggunner")
                        {
                            if (player4.weapon == "M9")
                            {
                                if (player4.ammo9mm >= player4.clip - 1)
                                {
                                    player4.ammo9mm -= (15 - (player4.clip - 1));
                                }
                                player4.weapon = "M249";
                                if (player4.ammo556 > 99)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo556 += 100;
                                }
                                if (player4.ammo556 <= 99)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "magnum24")
                            {
                                if (player4.ammo20mm >= player4.clip - 1)
                                {
                                    player4.ammo20mm -= (8 - (player4.clip - 1));
                                }
                                player4.weapon = "pkm";
                                if (player4.ammo762x54 > 99)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo762x54 += 100;
                                }
                                if (player4.ammo762x54 <= 99)
                                {
                                    player4.clip = 0;
                                }
                            }
                        }
                        if (player4.mpclass == "sniper")
                        {
                            if (player4.weapon == "M9")
                            {
                                if (player4.ammo9mm >= player4.clip - 1)
                                {
                                    player4.ammo9mm -= (15 - (player4.clip - 1));
                                }
                                player4.weapon = "R700Sniper";
                                if (player4.ammo3006 > 4)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo3006 += 5;
                                }
                                if (player4.ammo3006 <= 4)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "dbshotgun")
                            {
                                if (player4.ammo12Gauge >= player4.clip - 1)
                                {
                                    player4.ammo12Gauge -= (2 - (player4.clip - 1));
                                }
                                player4.weapon = "m21";
                                if (player4.ammo762x51 > 9)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo762x51 += 10;
                                }
                                if (player4.ammo762x51 <= 9)
                                {
                                    player4.clip = 0;
                                }
                            }

                        }
                        if (player4.mpclass == "specops")
                        {
                            if (player4.weapon == "M9")
                            {
                                if (player4.ammo9mm >= player4.clip - 1)
                                {
                                    player4.ammo9mm -= (15 - (player4.clip - 1));
                                }
                                player4.weapon = "mp5k";
                                if (player4.ammo9mm > 29)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo9mm += 30;
                                }
                                if (player4.ammo9mm <= 29)
                                {
                                    player4.clip = 0;
                                }
                            }
                            if (player4.weapon == "mp5k" && player4.specopupgrade)
                            {
                                if (player4.ammo9mm >= player4.clip - 1)
                                {
                                    player4.ammo9mm -= (30 - (player4.clip - 1));
                                }
                                player4.weapon = "M4SOPMOD";
                                if (player4.ammo556 > 29)
                                {
                                    player4.clip = 0;
                                    player4.reloading = true;
                                    player4.reloadTimeNum = 1000;
                                    player4.ammo556 += 30;
                                }
                                if (player4.ammo556 <= 29)
                                {
                                    player4.clip = 0;
                                }
                            }

                        }

                    }
                }
            }
            if (mode == "coop" || mode == "juggernaut2" || mode == "deathmatch2" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
            {
                player4.freeLook = MathHelper.Clamp(player4.freeLook, MathHelper.ToRadians(-89.9f), MathHelper.ToRadians(89.9f));
                if (!player4.dead && player4.menu != "chooseclass")
                {
                    if (!player4.ads)
                    {
                        player4.Rotation -= player4.currentState.ThumbSticks.Right.X * 0.05f;
                        player4.freeLook += player4.currentState.ThumbSticks.Right.Y * 0.02f;
                    }
                    if (player4.ads)
                    {
                        player4.Rotation -= player4.currentState.ThumbSticks.Right.X * 0.025f;
                        player4.freeLook += player4.currentState.ThumbSticks.Right.Y * 0.01f;
                    }
                    Vector3 velocityAdd = Vector3.Zero;
                    if (player4.currentState.ThumbSticks.Left.Y > 0)
                    {
                        velocityAdd.Z -= 2.0f;
                    }
                    if (player4.currentState.ThumbSticks.Left.Y < 0)
                    {
                        velocityAdd.Z += 2.0f;
                    }
                    if (player4.currentState.ThumbSticks.Left.X < 0)
                    {
                        velocityAdd.X -= 2.0f;
                    }
                    if (player4.currentState.ThumbSticks.Left.X > 0)
                    {
                        velocityAdd.X += 2.0f;
                    }
                    if (player4.currentState.ThumbSticks.Left.Y > 0 && player4.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.Z -= 4.5f;
                    }
                    if (player4.currentState.ThumbSticks.Left.Y < 0 && player4.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.Z += 4.5f;
                    }
                    if (player4.currentState.ThumbSticks.Left.X < 0 && player4.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.X -= 4.5f;
                    }
                    if (player4.currentState.ThumbSticks.Left.X > 0 && player4.currentState.Buttons.LeftShoulder == ButtonState.Pressed)
                    {
                        velocityAdd.X += 4.5f;
                    }
                    Matrix moveMatrix = Matrix.CreateRotationY(player4.Rotation);
                    player4.Position += Vector3.Transform(velocityAdd, moveMatrix);
                    if (player4.currentState.Buttons.A == ButtonState.Pressed && player4.lastState.Buttons.A == ButtonState.Pressed)
                    {
                        if (player4.canjump && player4.posture == "standing")
                        {
                            player4.jumpspeed = 1.5f;
                            player4.canjump = false;
                            player4.oldY = player4.Position.Y;
                        }
                        if (player4.posture == "crouching")
                        {
                            player4.posture = "standing";
                        }
                    }
                    if (player4.currentState.Buttons.LeftStick == ButtonState.Pressed && player4.lastState.Buttons.LeftStick == ButtonState.Released)
                    {
                        if (player4.posture == "standing")
                        {
                            player4.posture = "crouching";
                        }
                    }
                    if (player4.weapon == "M9")
                    {
                        if (player4.ammo9mm <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 10)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo9mm >= 15)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player4.reloadTimeNum >= 150)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 16;
                            player4.ammo9mm -= 15;
                        }
                    }
                    if (player4.weapon == "glock18")
                    {
                        if (player4.ammo9mm <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 3)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo9mm > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo9mm >= 33)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 34;
                            player4.ammo9mm -= 33;
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo9mm > 0 && player4.ammo9mm <= 32)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo9mm + 1;
                            player4.ammo9mm = 0;
                        }
                    }
                    if (player4.weapon == "uzi")
                    {
                        if (player4.ammoUzi <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 5)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("uzi_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammoUzi >= 32)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammoUzi < 32 && player4.ammoUzi > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("uzi_reload");
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammoUzi >= 32)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 33;
                            player4.ammoUzi -= 32;
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammoUzi < 32 && player4.ammoUzi > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammoUzi + 1;
                            player4.ammoUzi = 0;
                        }
                    }
                    if (player4.weapon == "mac10")
                    {
                        if (player4.ammo45 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 5)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("357_Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo45 >= 32)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo45 < 32 && player4.ammo45 > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("uzi_reload");
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo45 >= 32)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 33;
                            player4.ammo45 -= 32;
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo45 < 32 && player4.ammo45 > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo45 + 1;
                            player4.ammo45 = 0;
                        }
                    }
                    if (player4.weapon == "cz550")
                    {
                        if (player4.ammo600overkill <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 80)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("R700Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo600overkill >= 3)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("R700Reload");
                        }
                        if (player4.reloadTimeNum >= 150)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 4;
                            player4.ammo600overkill -= 3;
                        }
                    }
                    if (player4.weapon == "hipower")
                    {
                        if (player4.ammo9mm <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 8)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo9mm >= 13)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player4.reloadTimeNum >= 130)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 14;
                            player4.ammo9mm -= 13;
                        }
                    }
                    if (player4.weapon == "M249")
                    {
                        if (player4.ammo556 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 4)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m249_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo556 >= 100)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo556 < 100 && player4.ammo556 > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player4.reloadTimeNum >= 250 && player4.ammo556 >= 100)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 101;
                            player4.ammo556 -= 100;
                        }
                        if (player4.reloadTimeNum >= 250 && player4.ammo556 < 100 && player4.ammo556 > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo556 + 1;
                            player4.ammo556 = 0;
                        }
                    }
                    if (player4.weapon == "magnum24")
                    {
                        if (player4.ammo20mm <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 10)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo20mm >= 8)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player4.reloadTimeNum >= 150)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 9;
                            player4.ammo20mm -= 8;
                        }
                    }
                    if (player4.weapon == "volcanic")
                    {
                        if (player4.ammo41 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 40)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("M9Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.clip < 11 && player4.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.reloading)
                        {
                            player4.reloadTimeNum += 1;
                            if (player4.ammo41 > 0)
                            {
                                if (player4.reloadTimeNum == 14 && player4.clip < 11)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.clip += 1;
                                    if (player4.clip >= 2)
                                    {
                                        player4.ammo41 -= 1;
                                    }
                                }
                                if (player4.currentState.Triggers.Right > 0 && player4.lastState.Triggers.Right > 0 && player4.clip >= 2)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                                if (player4.clip == 11)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("R700Rechamber");
                                }
                            }
                            if (player4.ammo41 <= 0)
                            {
                                player4.reloading = false;
                            }
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player4.weapon == "AK74")
                    {
                        if (player4.ammo545 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 4)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m249_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo545 >= 30)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo545 < 30 && player4.ammo545 > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo545 >= 30)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 31;
                            player4.ammo545 -= 30;
                        }
                        if (player4.reloadTimeNum >= 200 && player4.ammo545 < 30 && player4.ammo545 > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo545 + 1;
                            player4.ammo545 = 0;
                        }
                    }
                    if (player4.weapon == "pkm")
                    {
                        if (player4.ammo762x54 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 5)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo762x54 >= 100)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo762x54 < 100 && player4.ammo762x54 > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player4.reloadTimeNum >= 300 && player4.ammo762x54 >= 100)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 101;
                            player4.ammo762x54 -= 100;
                        }
                        if (player4.reloadTimeNum >= 300 && player4.ammo762x54 < 100 && player4.ammo762x54 > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo762x54 + 1;
                            player4.ammo762x54 = 0;
                        }
                    }
                    if (player4.weapon == "m134")
                    {
                        if (player4.ammonull <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 2)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammonull >= 1000)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammonull < 1000 && player4.ammonull > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player4.reloadTimeNum >= 300 && player4.ammonull >= 1000)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 1001;
                            player4.ammonull -= 1000;
                        }
                        if (player4.reloadTimeNum >= 300 && player4.ammonull < 1000 && player4.ammonull > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammonull + 1;
                            player4.ammonull = 0;
                        }
                    }
                    if (player4.weapon == "M4SOPMOD")
                    {
                        if (player4.ammo556 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 3)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("uzi_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo556 >= 30)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo556 < 30 && player4.ammo556 > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("M9Reload");
                        }
                        if (player4.reloadTimeNum >= 200 && player4.ammo556 >= 30)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 31;
                            player4.ammo556 -= 30;
                        }
                        if (player4.reloadTimeNum >= 200 && player4.ammo556 < 30 && player4.ammo556 > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo556 + 1;
                            player4.ammo556 = 0;
                        }
                    }
                    if (player4.weapon == "hk21")
                    {
                        if (player4.ammo762x51 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 4)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo762x51 >= 100)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo762x51 < 100 && player4.ammo762x51 > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("m249_reload");
                        }
                        if (player4.reloadTimeNum >= 300 && player4.ammo762x51 >= 100)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 101;
                            player4.ammo762x51 -= 100;
                        }
                        if (player4.reloadTimeNum >= 300 && player4.ammo762x51 < 100 && player4.ammo762x51 > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo762x51 + 1;
                            player4.ammo762x51 = 0;
                        }
                    }
                    if (player4.weapon == "mp5k")
                    {
                        if (player4.ammo9mm <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 3)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo9mm >= 30)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo9mm < 30 && player4.ammo9mm > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("mp5k_reload");
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo9mm >= 30)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 31;
                            player4.ammo9mm -= 30;
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo9mm < 30 && player4.ammo9mm > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo9mm + 1;
                            player4.ammo9mm = 0;
                        }
                    }
                    if (player4.weapon == "mp40")
                    {
                        if (player4.ammo9mm <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 6)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("mp5k_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo9mm >= 32)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo9mm < 32 && player4.ammo9mm > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("mp5k_reload");
                        }
                        if (player4.reloadTimeNum >= 180 && player4.ammo9mm >= 32)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 33;
                            player4.ammo9mm -= 32;
                        }
                        if (player4.reloadTimeNum >= 180 && player4.ammo9mm < 32 && player4.ammo9mm > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo9mm + 1;
                            player4.ammo9mm = 0;
                        }
                    }
                    if (player4.weapon == "AK47")
                    {
                        if (player4.ammo762x39 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 5)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("AK47_Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo762x39 >= 30)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo762x39 < 30 && player4.ammo762x39 > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo762x39 >= 30)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 31;
                            player4.ammo762x39 -= 30;
                        }
                        if (player4.reloadTimeNum >= 200 && player4.ammo762x39 < 30 && player4.ammo762x39 > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo762x39 + 1;
                            player4.ammo762x39 = 0;
                        }
                    }
                    if (player4.weapon == "aa12")
                    {
                        if (player4.ammo12Gauge <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 10)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo12Gauge >= 32)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.ammo12Gauge < 32 && player4.ammo12Gauge > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player4.reloadTimeNum >= 150 && player4.ammo12Gauge >= 32)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 33;
                            player4.ammo12Gauge -= 32;
                        }
                        if (player4.reloadTimeNum >= 200 && player4.ammo12Gauge < 32 && player4.ammo12Gauge > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.ammo12Gauge + 1;
                            player4.ammo12Gauge = 0;
                        }
                    }
                    if (player4.weapon == "winchester1887")
                    {
                        if (player4.ammo10Gauge <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 80)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firepause == 1)
                            {
                                gunsoundbank.PlayCue("SPASPump");
                            }
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player4.clip <= 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.clip < 6 && player4.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.reloading)
                        {
                            player4.reloadTimeNum += 1;
                            if (player4.ammo10Gauge > 0)
                            {
                                if (player4.reloadTimeNum == 20 && player4.clip < 6)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.clip += 1;
                                    if (player4.clip >= 2)
                                    {
                                        player4.ammo10Gauge -= 1;
                                    }
                                }
                                if (player4.currentState.Triggers.Right > 0 && player4.lastState.Triggers.Right > 0 && player4.clip >= 2)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player4.clip == 6)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player4.ammo10Gauge <= 0)
                            {
                                player4.reloading = false;
                            }
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player4.weapon == "medic")
                    {
                        if (player4.medpacks <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 3)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                            }
                        }
                        if (player4.clip <= 0 && player4.medpacks >= 1)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.clip <= 0 && player4.medpacks < 1 && player4.medpacks > 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;
                        }
                        if (player4.reloadTimeNum >= 300 && player4.medpacks >= 1)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 2;
                            player4.medpacks -= 1;
                        }
                        if (player4.reloadTimeNum >= 300 && player4.medpacks < 1 && player4.medpacks > 0)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = player4.medpacks + 1;
                            player4.medpacks = 0;
                        }
                    }
                    if (player4.weapon == "dbshotgun")
                    {
                        if (player4.ammo12Gauge <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 10)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player4.clip <= 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.clip < 3 && player4.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.reloading)
                        {
                            player4.reloadTimeNum += 1;
                            if (player4.ammo12Gauge > 0)
                            {
                                if (player4.reloadTimeNum == 70 && player4.clip < 3)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.clip += 1;
                                    if (player4.clip >= 2)
                                    {
                                        player4.ammo12Gauge -= 1;
                                    }
                                }
                                if (player4.currentState.Triggers.Right > 0 && player4.lastState.Triggers.Right > 0 && player4.clip >= 2)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                }
                                if (player4.clip == 3)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                }
                            }
                            if (player4.ammo12Gauge <= 0)
                            {
                                player4.reloading = false;
                            }
                        }
                    }
                    if (player4.weapon == "anaconda")
                    {
                        if (player4.ammo44magnum <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 30)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo44magnum >= 6)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player4.reloadTimeNum >= 250)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 7;
                            player4.ammo44magnum -= 6;
                        }
                    }
                    if (player4.weapon == "python")
                    {
                        if (player4.ammo357magnum <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 20)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("357_Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo357magnum >= 6)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player4.reloadTimeNum >= 250)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 7;
                            player4.ammo357magnum -= 6;
                        }
                    }
                    if (player4.weapon == "R870")
                    {
                        if (player4.ammo12Gauge <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 55)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firepause == 1)
                            {
                                gunsoundbank.PlayCue("SPASPump");
                            }
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player4.clip <= 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.clip < 9 && player4.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.reloading)
                        {
                            player4.reloadTimeNum += 1;
                            if (player4.ammo12Gauge > 0)
                            {
                                if (player4.reloadTimeNum == 20 && player4.clip < 9)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.clip += 1;
                                    if (player4.clip >= 2)
                                    {
                                        player4.ammo12Gauge -= 1;
                                    }
                                }
                                if (player4.currentState.Triggers.Right > 0 && player4.lastState.Triggers.Right > 0 && player4.clip >= 2)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player4.clip == 9)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player4.ammo12Gauge <= 0)
                            {
                                player4.reloading = false;
                            }
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player4.weapon == "m21")
                    {
                        if (player4.ammo762x51 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 20)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo762x51 >= 10)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player4.reloadTimeNum >= 150)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 11;
                            player4.ammo762x51 -= 10;
                        }
                    }
                    if (player4.weapon == "svd")
                    {
                        if (player4.ammo762x54 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 25)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("svd_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo762x54 >= 5)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player4.reloadTimeNum >= 150)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 6;
                            player4.ammo762x54 -= 5;
                        }
                    }
                    if (player4.weapon == "m14")
                    {
                        if (player4.ammo762x51 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 10)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("m14_fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo762x51 >= 20)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("AK47_Reload");
                        }
                        if (player4.reloadTimeNum >= 150)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 21;
                            player4.ammo762x51 -= 20;
                        }
                    }
                    if (player4.weapon == "S&W500")
                    {
                        if (player4.ammo500magnum <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 37)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("44Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo500magnum >= 5)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("44Reload");
                        }
                        if (player4.reloadTimeNum >= 250)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 6;
                            player4.ammo500magnum -= 5;
                        }
                    }
                    if (player4.weapon == "R700" || player4.weapon == "R700Sniper")
                    {
                        if (player4.ammo3006 <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 80)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firepause == 1)
                            {
                                gunsoundbank.PlayCue("R700Rechamber");
                            }
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("R700Fire");
                                }
                            }
                        }
                        if (player4.clip <= 0 && player4.ammo3006 >= 5)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.reloadTimeNum += 1;
                            player4.firing = false;

                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("R700Reload");
                        }
                        if (player4.reloadTimeNum >= 150)
                        {
                            player4.reloadTimeNum = 0;
                            player4.reloading = false;
                            player4.canshoot = true;
                            player4.clip = 6;
                            player4.ammo3006 -= 5;
                        }
                    }
                    if (player4.weapon == "SPAS12")
                    {
                        if (player4.ammo12Gauge <= 0)
                        {
                            if (player4.clip > 0)
                            {
                                player4.canshoot = true;
                                player4.reloading = false;
                            }
                            if (player4.clip <= 0)
                            {
                                player4.canshoot = false;
                                player4.reloading = false;
                                player4.firing = false;
                            }
                        }
                        if (player4.canshoot)
                        {

                            if (player4.currentState.Triggers.Right > 0 && player4.firepause == 0)
                            {
                                if (player4.clip > 0)
                                {
                                    player4.firing = true;
                                    player4.firepause = 1;
                                }
                            }
                            if (player4.lastState.Triggers.Right > 0)
                            {
                                player4.firing = false;
                                if (player4.firepause >= 30)
                                {
                                    player4.firepause = 0;
                                    if (player4.clip > 0)
                                    {
                                        player4.firing = true;
                                    }
                                }
                            }
                            player4.firepause += 1;
                            if (player4.firing)
                            {
                                player4.clip -= 1;
                                if (player4.clip > 0)
                                {
                                    gunsoundbank.PlayCue("SPASFire");
                                }
                            }
                        }
                        if (player4.clip <= 0)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.clip < 9 && player4.currentState.Buttons.X == ButtonState.Pressed)
                        {
                            player4.reloading = true;
                            player4.canshoot = false;
                            player4.firing = false;
                        }
                        if (player4.reloading)
                        {
                            player4.reloadTimeNum += 1;
                            if (player4.ammo12Gauge > 0)
                            {
                                if (player4.reloadTimeNum == 20 && player4.clip < 9)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.clip += 1;
                                    if (player4.clip >= 2)
                                    {
                                        player4.ammo12Gauge -= 1;
                                    }
                                }
                                if (player4.currentState.Triggers.Right > 0 && player4.lastState.Triggers.Right > 0 && player4.clip >= 2)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                                if (player4.clip == 9)
                                {
                                    player4.reloadTimeNum = 0;
                                    player4.canshoot = true;
                                    player4.reloading = false;
                                    player4.firing = false;
                                    gunsoundbank.PlayCue("SPASPump");
                                }
                            }
                            if (player4.ammo12Gauge <= 0)
                            {
                                player4.reloading = false;
                            }
                        }
                        if (player4.reloadTimeNum == 1)
                        {
                            gunsoundbank.PlayCue("SPASReload");
                        }
                    }
                    if (player4.currentState.Triggers.Left > 0)
                    {
                        player4.ads = true;
                    }
                    if (player4.currentState.Triggers.Left <= 0)
                    {
                        player4.ads = false;
                    }
                    if (player4.currentState.Triggers.Right <= 0)
                    {
                        player4.firing = false;
                    }
                }
                if (player4.dead)
                {
                    if (player4.currentState.Buttons.Start == ButtonState.Pressed)
                    {
                        player4.dead = false;
                        if (mode == "coop")
                        {
                            player4.weapon = player4.startingweapon;
                            player4.clip = player4.startingclip;
                        }
                        else if (mode == "class")
                        {
                            if (player4.mpclass == "specops")
                            {
                                if (!player4.specopupgrade)
                                {
                                    player4.weapon = "mp5k";
                                    player4.clip = 31;
                                }
                                if (player4.specopupgrade)
                                {
                                    player4.weapon = "M4SOPMOD";
                                    player4.clip = 31;
                                }
                            }
                            else if (player4.mpclass == "sniper")
                            {
                                if (!player4.sniperupgrade)
                                {
                                    player4.weapon = "R700Sniper";
                                    player4.clip = 6;
                                }
                                if (player4.sniperupgrade)
                                {
                                    player4.weapon = "m21";
                                    player4.clip = 11;
                                }
                            }
                            else if (player4.mpclass == "mggunner")
                            {
                                if (!player4.mgupgrade)
                                {
                                    player4.weapon = "M249";
                                    player4.clip = 101;
                                }
                                if (player4.mgupgrade)
                                {
                                    player4.weapon = "pkm";
                                    player4.clip = 101;
                                }
                            }
                            else if (player4.mpclass == "gunner")
                            {
                                if (!player4.gunnerupgrade)
                                {
                                    player4.weapon = "uzi";
                                    player4.clip = 33;
                                }
                                if (player4.gunnerupgrade)
                                {
                                    player4.weapon = "m134";
                                    player4.clip = 1001;
                                }
                            }
                            else if (player4.mpclass == "godclass")
                            {
                                if (!player4.godupgrade)
                                {
                                    player4.weapon = "AK74";
                                    player4.clip = 31;
                                }
                                if (player4.godupgrade)
                                {
                                    player4.weapon = "AK47";
                                    player4.clip = 31;
                                }
                            }
                            else
                            {
                                player4.mpclass = "specops";
                                if (!player4.specopupgrade)
                                {
                                    player4.weapon = "mp5k";
                                    player4.clip = 31;
                                }
                                if (player4.specopupgrade)
                                {
                                    player4.weapon = "M4SOPMOD";
                                    player4.clip = 31;
                                }
                            }
                        }
                        else
                        {
                            player4.clip = 33;
                            player4.weapon = "mac10";
                        }
                        player4.health = 100;
                        player4.ammo9mm = 420;
                        player4.ammo44magnum = 54;
                        player4.ammo500magnum = 45;
                        player4.ammo3006 = 60;
                        player4.ammo12Gauge = 64;
                        player4.ammo10Gauge = 40;
                        player4.ammoUzi = 320;
                        player4.ammo45 = 224;
                        player4.ammorpg = 5;
                        player4.ammo762x39 = 180;
                        player4.ammo762x54 = 300;
                        player4.ammo357magnum = 90;
                        player4.ammo556 = 300;
                        player4.ammo545 = 360;
                        player4.ammo762x51 = 100;
                        player4.ammo20mm = 104;
                        player4.ammo41 = 600;
                        player4.medpacks = 2;
                        player4.reloading = false;
                        player4.canshoot = true;
                        if (mode != "tdm4" && mode != "class")
                        {
                            player4.Position = new Vector3(random.Next(300) - 150, -5, random.Next(300) - 150);
                        }
                        if (mode == "class")
                        {
                            player4.Position = new Vector3(random.Next(3000) - 1500, 16, random.Next(3000) - 1500);
                            player3.oldY = 16;
                        }
                        if (mode == "tdm4")
                        {
                            int spawnposition = random.Next(4);
                            if (spawnposition == 0)
                            {
                                player4.room = "room1";
                                player4.Position = new Vector3(-240, 4, 200);
                            }
                            if (spawnposition == 1)
                            {
                                player4.room = "janitorcloset";
                                player4.Position = new Vector3(-170, 4, 0);
                            }
                            if (spawnposition == 2)
                            {
                                player4.room = "room2";
                                player4.Position = new Vector3(-240, 4, -200);
                            }
                            if (spawnposition == 3)
                            {
                                player4.room = "poolroom";
                                player4.Position = new Vector3(410, 4, 50);
                            }
                        }
                    }
                }
            }
            player4.lastState = player4.currentState;
        }
        /// <summary>
        /// This is called when the game should draw itself.
        /// </summary>
        /// <param name="gameTime">Provides a snapshot of timing values.</param>
        protected override void Draw(GameTime gameTime)
        {
            GraphicsDevice.Viewport = defaultViewport;
            graphics.GraphicsDevice.Clear(Color.CornflowerBlue);
            spriteBatch.Begin();
            spriteBatch.Draw(sky, menuRect, Color.White);
            spriteBatch.End();
            if (mode == "menu")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;
                spriteBatch.Draw(mainmenu, menuRect, Color.White);
                spriteBatch.Draw(reticle, cursorrect, Color.White);
                spriteBatch.Draw(reticle2, cursorrect2, Color.White);
                spriteBatch.Draw(reticle3, cursorrect3, Color.White);
                spriteBatch.Draw(reticle4, cursorrect4, Color.White);
                spriteBatch.Draw(chooseuzi, weaponRect, Color.White);
                spriteBatch.Draw(choose1887, weaponRect2, Color.White);
                spriteBatch.Draw(chooseR700, weaponRect3, Color.White);
                spriteBatch.Draw(chooseanaconda, weaponRect4, Color.White);
                spriteBatch.Draw(choosemp5k, weaponRect5, Color.White);
                spriteBatch.Draw(choosemac10, weaponRect6, Color.White);
                spriteBatch.Draw(chooseR870, weaponRect7, Color.White);
                spriteBatch.Draw(chooseM14, weaponRect8, Color.White);
                spriteBatch.Draw(playcoop, buttonRect1, Color.White);
                spriteBatch.Draw(playsp, buttonRect2, Color.White);
                spriteBatch.Draw(play2pj, buttonRect3, Color.White);
                spriteBatch.Draw(play2pdm, buttonRect4, Color.White);
                spriteBatch.Draw(play4ptdm, buttonRect5, Color.White);
                spriteBatch.Draw(play4pc, buttonRect6, Color.White);
                spriteBatch.Draw(play4pj, buttonRect7, Color.White);
                if (allownoobweapons == true)
                {
                    spriteBatch.Draw(noobon, noobRect, Color.White);
                }
                if (allownoobweapons == false)
                {
                    spriteBatch.Draw(nooboff, noobRect, Color.White);
                }
                spriteBatch.Draw(p1, p1rect, Color.White);
                spriteBatch.Draw(p2, p2rect, Color.White);
                spriteBatch.Draw(p3, p3rect, Color.White);
                spriteBatch.Draw(p4, p4rect, Color.White);
                spriteBatch.End();
            }
            if (mode == "coop")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;
                GraphicsDevice.Viewport = upperleftViewport;
                DrawModel(map, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                if (firing)
                {
                    DrawModel(gore_fx, gorePosition, 0, 0);
                    foreach (shotpellet pellet in pellets)
                    {
                        if (weapon == "SPAS12" || weapon == "dbshotgun")
                        {
                            DrawModel(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player2.firing)
                {
                    DrawModel(gore_fx, gorePosition2, 0, 0);
                    foreach (shotpellet pellet in pellets2)
                    {
                        if (player2.weapon == "SPAS12" || player2.weapon == "dbshotgun")
                        {
                            DrawModel(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player3.firing)
                {
                    DrawModel(gore_fx, gorePosition3, 0, 0);
                    foreach (shotpellet pellet in pellets3)
                    {
                        if (player3.weapon == "SPAS12" || player3.weapon == "dbshotgun")
                        {
                            DrawModel(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player4.firing)
                {
                    DrawModel(gore_fx, gorePosition4, 0, 0);
                    foreach (shotpellet pellet in pellets4)
                    {
                        if (player4.weapon == "SPAS12" || player4.weapon == "dbshotgun")
                        {
                            DrawModel(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                DrawModel(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel(pkm_world, new Vector3(200.0f, -25.0f, -10.0f), 0, 0);
                DrawModel(m134_world, new Vector3(-300.0f, -25.0f, 200.0f), 0, 0);
                DrawModel(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel(model1887_world, new Vector3(100.0f, -45.0f, -150.0f), 0, 0);
                DrawModel(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel(aa12_world, new Vector3(-310.0f, -35.0f, -200.0f), 0, 0);
                DrawModel(SW500_world, new Vector3(0.0f, -30.0f, 50.0f), 0, 0);
                DrawModel(dbshotgun_world, new Vector3(0.0f, -28.0f, -200.0f), 0, 0);
                DrawModel(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                foreach (bot enemy in bots)
                {
                    if (!enemy.dead)
                    {
                        if (!enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel(uzi, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel(bot45, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel(bot90, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel(bot135, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel(bot180, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel(bot225, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel(bot270, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel(bot315, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                        if (enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel(uzifire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel(bot45fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel(bot90fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel(bot135fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel(bot180fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel(bot225fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel(bot270fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel(bot315fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(soldier45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(soldier135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(soldier180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(soldier225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(soldier270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(soldier315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(soldier45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(soldier135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(soldier180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(soldier225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(soldier270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(soldier315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(soldier45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(soldier90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(soldier135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(soldier180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(soldier225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(soldier270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(soldier315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(soldier45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(soldier90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(soldier135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(soldier180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(soldier225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(soldier270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(soldier315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;
                GraphicsDevice.Viewport = upperrightViewport;
                DrawModel2(map, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                DrawModel2(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel2(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel2(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel2(pkm_world, new Vector3(200.0f, -25.0f, -10.0f), 0, 0);
                DrawModel2(SW500_world, new Vector3(0.0f, -30.0f, 50.0f), 0, 0);
                DrawModel2(m134_world, new Vector3(-300.0f, -25.0f, 200.0f), 0, 0);
                DrawModel2(model1887_world, new Vector3(100.0f, -45.0f, -150.0f), 0, 0);
                DrawModel2(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel2(aa12_world, new Vector3(-310.0f, -35.0f, -200.0f), 0, 0);
                DrawModel2(dbshotgun_world, new Vector3(0.0f, -28.0f, -200.0f), 0, 0);
                DrawModel2(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                if (firing)
                {
                    DrawModel2(gore_fx, gorePosition, 0, 0);
                    foreach (shotpellet pellet in pellets)
                    {
                        if (weapon == "SPAS12" || weapon == "dbshotgun")
                        {
                            DrawModel2(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player2.firing)
                {
                    DrawModel2(gore_fx, gorePosition2, 0, 0);
                    foreach (shotpellet pellet in pellets2)
                    {
                        if (player2.weapon == "SPAS12" || player2.weapon == "dbshotgun")
                        {
                            DrawModel2(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player3.firing)
                {
                    DrawModel2(gore_fx, gorePosition3, 0, 0);
                    foreach (shotpellet pellet in pellets3)
                    {
                        if (player3.weapon == "SPAS12" || player3.weapon == "dbshotgun")
                        {
                            DrawModel2(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player4.firing)
                {
                    DrawModel2(gore_fx, gorePosition4, 0, 0);
                    foreach (shotpellet pellet in pellets4)
                    {
                        if (player4.weapon == "SPAS12" || player4.weapon == "dbshotgun")
                        {
                            DrawModel2(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    if (!enemy.dead)
                    {
                        if (!enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel2(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel2(uzi, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel2(bot45, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel2(bot90, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel2(bot135, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel2(bot180, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel2(bot225, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel2(bot270, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel2(bot315, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                        if (enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel2(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel2(uzifire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel2(bot45fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel2(bot90fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel2(bot135fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel2(bot180fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel2(bot225fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel2(bot270fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel2(bot315fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                    }
                }
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel2(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel2(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel2(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel2(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerleftViewport;
                DrawModel3(map, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                DrawModel3(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel3(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel3(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel3(pkm_world, new Vector3(200.0f, -25.0f, -10.0f), 0, 0);
                DrawModel3(m134_world, new Vector3(-300.0f, -25.0f, 200.0f), 0, 0);
                DrawModel3(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel3(aa12_world, new Vector3(-310.0f, -35.0f, -200.0f), 0, 0);
                DrawModel3(dbshotgun_world, new Vector3(0.0f, -28.0f, -200.0f), 0, 0);
                DrawModel3(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                DrawModel3(SW500_world, new Vector3(0.0f, -30.0f, 50.0f), 0, 0);
                DrawModel3(model1887_world, new Vector3(100.0f, -45.0f, -150.0f), 0, 0);
                if (firing)
                {
                    DrawModel3(gore_fx, gorePosition, 0, 0);
                    foreach (shotpellet pellet in pellets)
                    {
                        if (weapon == "SPAS12" || weapon == "dbshotgun")
                        {
                            DrawModel3(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player2.firing)
                {
                    DrawModel3(gore_fx, gorePosition2, 0, 0);
                    foreach (shotpellet pellet in pellets2)
                    {
                        if (player2.weapon == "SPAS12" || player2.weapon == "dbshotgun")
                        {
                            DrawModel3(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player4.firing)
                {
                    DrawModel3(gore_fx, gorePosition4, 0, 0);
                    foreach (shotpellet pellet in pellets4)
                    {
                        if (player4.weapon == "SPAS12" || player4.weapon == "dbshotgun")
                        {
                            DrawModel3(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player3.firing)
                {
                    DrawModel3(gore_fx, gorePosition3, 0, 0);
                    foreach (shotpellet pellet in pellets3)
                    {
                        if (player3.weapon == "SPAS12" || player3.weapon == "dbshotgun")
                        {
                            DrawModel3(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    if (!enemy.dead)
                    {
                        if (!enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel3(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel3(uzi, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel3(bot45, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel3(bot90, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel3(bot135, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel3(bot180, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel3(bot225, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel3(bot270, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel3(bot315, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                        if (enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel3(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel3(uzifire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel3(bot45fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel3(bot90fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel3(bot135fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel3(bot180fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel3(bot225fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel3(bot270fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel3(bot315fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                    }
                }
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(soldier45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(soldier90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(soldier135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(soldier180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(soldier225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(soldier270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(soldier315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(soldier45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(soldier90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(soldier135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(soldier180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(soldier225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(soldier270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(soldier315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(soldier45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(soldier90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(soldier135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(soldier180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(soldier225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(soldier270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(soldier315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(soldier45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(soldier90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(soldier135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(soldier180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(soldier225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(soldier270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(soldier315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel3(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel3(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel3(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel3(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerrightViewport;
                DrawModel4(map, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                DrawModel4(model1887_world, new Vector3(100.0f, -45.0f, -150.0f), 0, 0);
                DrawModel4(SW500_world, new Vector3(0.0f, -30.0f, 50.0f), 0, 0);
                DrawModel4(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel4(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel4(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel4(pkm_world, new Vector3(200.0f, -25.0f, -10.0f), 0, 0);
                DrawModel4(m134_world, new Vector3(-300.0f, -25.0f, 200.0f), 0, 0);
                DrawModel4(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel4(aa12_world, new Vector3(-310.0f, -35.0f, -200.0f), 0, 0);
                DrawModel4(dbshotgun_world, new Vector3(0.0f, -28.0f, -200.0f), 0, 0);
                DrawModel4(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                if (firing)
                {
                    DrawModel4(gore_fx, gorePosition, 0, 0);
                    foreach (shotpellet pellet in pellets)
                    {
                        if (weapon == "SPAS12" || weapon == "dbshotgun")
                        {
                            DrawModel4(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player2.firing)
                {
                    DrawModel4(gore_fx, gorePosition2, 0, 0);
                    foreach (shotpellet pellet in pellets2)
                    {
                        if (player2.weapon == "SPAS12" || player2.weapon == "dbshotgun")
                        {
                            DrawModel4(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player3.firing)
                {
                    DrawModel4(gore_fx, gorePosition3, 0, 0);
                    foreach (shotpellet pellet in pellets3)
                    {
                        if (player3.weapon == "SPAS12" || player3.weapon == "dbshotgun")
                        {
                            DrawModel4(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                if (player4.firing)
                {
                    DrawModel4(gore_fx, gorePosition4, 0, 0);
                    foreach (shotpellet pellet in pellets4)
                    {
                        if (player4.weapon == "SPAS12" || player4.weapon == "dbshotgun")
                        {
                            DrawModel4(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                foreach (bot enemy in bots)
                {
                    if (!enemy.dead)
                    {
                        if (!enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel4(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel4(uzi, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel4(bot45, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel4(bot90, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel4(bot135, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel4(bot180, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel4(bot225, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel4(bot270, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel4(bot315, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                        if (enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel4(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel4(uzifire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel4(bot45fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel4(bot90fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel4(bot135fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel4(bot180fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel4(bot225fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel4(bot270fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel4(bot315fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                    }
                }
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel4(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel4(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel4(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel4(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.End();
            }
            if (mode == "sp")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                DrawModel(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                if (firing)
                {
                    DrawModel(gore_fx, gorePosition, 0, 0);
                    foreach (shotpellet pellet in pellets)
                    {
                        if (weapon == "SPAS12")
                        {
                            DrawModel(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                DrawModel(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel(ak47_world, new Vector3(-750.0f, -30.0f, -2000.0f), 0, 0);
                DrawModel(python_world, new Vector3(-4650.0f, -30.0f, 270.0f), 0, 0);
                DrawModel(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel(aa12_world, new Vector3(800.0f, -35.0f, 3000.0f), 0, 0);
                DrawModel(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                foreach (bot enemy in bots)
                {
                    if (!enemy.dead)
                    {
                        if (!enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel(uzi, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel(bot45, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel(bot90, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel
                                    (bot135, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel(bot180, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel(bot225, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel(bot270, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel(bot315, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                        if (enemy.firing)
                        {
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(enemy.rotation) >= 0 && (float)Math.Cos(enemy.rotation) <= 1)
                            {
                                DrawModel(bot0, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                                DrawModel(uzifire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > 0 && (float)Math.Sin(enemy.rotation) < 1)
                            {
                                DrawModel(bot45fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) <= 0 && (float)Math.Sin(enemy.rotation) <= 1)
                            {
                                DrawModel(bot90fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) > -1 && (float)Math.Sin(enemy.rotation) > 0)
                            {
                                DrawModel(bot135fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= -1 && (float)Math.Sin(enemy.rotation) <= 0)
                            {
                                DrawModel(bot180fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < 0 && (float)Math.Sin(enemy.rotation) > -1)
                            {
                                DrawModel(bot225fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) >= 0 && (float)Math.Sin(enemy.rotation) >= -1)
                            {
                                DrawModel(bot270fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(enemy.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(enemy.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(enemy.rotation) < 1 && (float)Math.Sin(enemy.rotation) < 0)
                            {
                                DrawModel(bot315fire, new Vector3(enemy.position.X, enemy.position.Y + 15, enemy.position.Z), 0, 0);
                            }
                        }
                    }
                }
                foreach (bot ally in goodbots)
                {
                    if (!ally.dead)
                    {
                        if (!ally.firing)
                        {
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(ally.rotation) >= 0 && (float)Math.Cos(ally.rotation) <= 1)
                            {
                                DrawModel(soldier, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                                DrawModel(uzi, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > 0 && (float)Math.Sin(ally.rotation) < 1)
                            {
                                DrawModel(soldier45, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) <= 0 && (float)Math.Sin(ally.rotation) <= 1)
                            {
                                DrawModel(soldier90, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) > -1 && (float)Math.Sin(ally.rotation) > 0)
                            {
                                DrawModel
                                    (soldier135, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= -1 && (float)Math.Sin(ally.rotation) <= 0)
                            {
                                DrawModel(soldier180, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < 0 && (float)Math.Sin(ally.rotation) > -1)
                            {
                                DrawModel(soldier225, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) >= 0 && (float)Math.Sin(ally.rotation) >= -1)
                            {
                                DrawModel(soldier270, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < 1 && (float)Math.Sin(ally.rotation) < 0)
                            {
                                DrawModel(soldier315, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                        }
                        if (ally.firing)
                        {
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(ally.rotation) >= 0 && (float)Math.Cos(ally.rotation) <= 1)
                            {
                                DrawModel(soldier, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                                DrawModel(uzifire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > 0 && (float)Math.Sin(ally.rotation) < 1)
                            {
                                DrawModel(soldier45fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) <= 0 && (float)Math.Sin(ally.rotation) <= 1)
                            {
                                DrawModel(soldier90fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) > -1 && (float)Math.Sin(ally.rotation) > 0)
                            {
                                DrawModel(soldier135fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= -1 && (float)Math.Sin(ally.rotation) <= 0)
                            {
                                DrawModel(soldier180fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < 0 && (float)Math.Sin(ally.rotation) > -1)
                            {
                                DrawModel(soldier225fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) >= 0 && (float)Math.Sin(ally.rotation) >= -1)
                            {
                                DrawModel(soldier270fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < 1 && (float)Math.Sin(ally.rotation) < 0)
                            {
                                DrawModel(soldier315fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.DrawString(Font, "Your Team's Kills:" + teamkills, new Vector2(DisplayPos.X, DisplayPos.Y + 75), Color.Green);
                spriteBatch.DrawString(Font, "Your Kills:" + p1kills, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.Blue);
                spriteBatch.DrawString(Font, "Enemy Team's Kills:" + botkills, new Vector2(DisplayPos.X, DisplayPos.Y + 125), Color.DarkRed);
                spriteBatch.End();
            }
            if (mode == "juggernaut2")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = leftViewport;
                DrawModel(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                if (firing)
                {
                    DrawModel(gore_fx, gorePosition, 0, 0);
                    foreach (shotpellet pellet in pellets)
                    {
                        if (weapon == "SPAS12")
                        {
                            DrawModel(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Gorilla.rotation) >= 0 && (float)Math.Cos(Gorilla.rotation) <= 1)
                        {
                            DrawModel(armored_gorilla, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > 0 && (float)Math.Sin(Gorilla.rotation) < 1)
                        {
                            DrawModel(armored_gorilla45, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) <= 0 && (float)Math.Sin(Gorilla.rotation) <= 1)
                        {
                            DrawModel(armored_gorilla90, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) > -1 && (float)Math.Sin(Gorilla.rotation) > 0)
                        {
                            DrawModel(armored_gorilla135, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= -1 && (float)Math.Sin(Gorilla.rotation) <= 0)
                        {
                            DrawModel(armored_gorilla180, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < 0 && (float)Math.Sin(Gorilla.rotation) > -1)
                        {
                            DrawModel(armored_gorilla225, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) >= 0 && (float)Math.Sin(Gorilla.rotation) >= -1)
                        {
                            DrawModel(armored_gorilla270, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < 1 && (float)Math.Sin(Gorilla.rotation) < 0)
                        {
                            DrawModel(armored_gorilla315, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                    }
                }
                if (player2.firing)
                {
                    DrawModel(gore_fx, gorePosition2, 0, 0);
                    foreach (shotpellet pellet in pellets2)
                    {
                        if (player2.weapon == "SPAS12")
                        {
                            DrawModel(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                DrawModel(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel(m4sopmod_world, new Vector3(1000.0f, -30.0f, -1500.0f), 0, 0);
                DrawModel(medpack_world, new Vector3(2500.0f, -30.0f, 3000.0f), 0, 0);
                DrawModel(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel(python_world, new Vector3(-4650.0f, -30.0f, 270.0f), 0, 0);
                DrawModel(ak47_world, new Vector3(-750.0f, -30.0f, -2000.0f), 0, 0);
                DrawModel(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel(aa12_world, new Vector3(800.0f, -35.0f, 3000.0f), 0, 0);
                DrawModel(Rem870_world, new Vector3(-2000.0f, -35.0f, 1000.0f), 0, 0);
                DrawModel(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                DrawModel(m249_world, new Vector3(-3500.0f, -30.0f, 2008.0f), 0, 0);
                DrawModel(mp5k_world, new Vector3(3250.0f, -30.0f, 1776.0f), 0, 0);
                DrawModel(m21_world, new Vector3(0.0f, -45.0f, -2800.0f), 0, 0);
                DrawModel(m14_world, new Vector3(1945.0f, -30.0f, 200.0f), 0, 0);
                foreach (bot ally in goodbots)
                {
                    if (!ally.dead)
                    {
                        if (!ally.firing)
                        {
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(ally.rotation) >= 0 && (float)Math.Cos(ally.rotation) <= 1)
                            {
                                DrawModel(soldier, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                                DrawModel(uzi, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > 0 && (float)Math.Sin(ally.rotation) < 1)
                            {
                                DrawModel(soldier45, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) <= 0 && (float)Math.Sin(ally.rotation) <= 1)
                            {
                                DrawModel(soldier90, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) > -1 && (float)Math.Sin(ally.rotation) > 0)
                            {
                                DrawModel(soldier135, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= -1 && (float)Math.Sin(ally.rotation) <= 0)
                            {
                                DrawModel(soldier180, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < 0 && (float)Math.Sin(ally.rotation) > -1)
                            {
                                DrawModel(soldier225, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) >= 0 && (float)Math.Sin(ally.rotation) >= -1)
                            {
                                DrawModel(soldier270, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < 1 && (float)Math.Sin(ally.rotation) < 0)
                            {
                                DrawModel(soldier315, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                        }
                        if (ally.firing)
                        {
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(ally.rotation) >= 0 && (float)Math.Cos(ally.rotation) <= 1)
                            {
                                DrawModel(soldier, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                                DrawModel(uzifire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > 0 && (float)Math.Sin(ally.rotation) < 1)
                            {
                                DrawModel(soldier45fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) <= 0 && (float)Math.Sin(ally.rotation) <= 1)
                            {
                                DrawModel(soldier90fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) > -1 && (float)Math.Sin(ally.rotation) > 0)
                            {
                                DrawModel(soldier135fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= -1 && (float)Math.Sin(ally.rotation) <= 0)
                            {
                                DrawModel(soldier180fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < 0 && (float)Math.Sin(ally.rotation) > -1)
                            {
                                DrawModel(soldier225fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) >= 0 && (float)Math.Sin(ally.rotation) >= -1)
                            {
                                DrawModel(soldier270fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < 1 && (float)Math.Sin(ally.rotation) < 0)
                            {
                                DrawModel(soldier315fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(soldier45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(soldier135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(soldier180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(soldier225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(soldier270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(soldier315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(soldier45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(soldier90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(soldier135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(soldier180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(soldier225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(soldier270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(soldier315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.DrawString(Font, "Player 1's Damage:" + p1damage, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.White);
                spriteBatch.DrawString(Font, "Bots' Damage:" + botdamage, new Vector2(DisplayPos.X, DisplayPos.Y + 125), Color.LightGray);
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = rightViewport;
                DrawModel2(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                DrawModel2(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel2(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel2(m4sopmod_world, new Vector3(1000.0f, -30.0f, -1500.0f), 0, 0);
                DrawModel2(mp5k_world, new Vector3(3250.0f, -30.0f, 1776.0f), 0, 0);
                DrawModel2(ak47_world, new Vector3(-750.0f, -30.0f, -2000.0f), 0, 0);
                DrawModel2(python_world, new Vector3(-4650.0f, -30.0f, 230.0f), 0, 0);
                DrawModel2(m21_world, new Vector3(0.0f, -30.0f, -2800.0f), 0, 0);
                DrawModel2(Rem870_world, new Vector3(-2000.0f, -35.0f, 1000.0f), 0, 0);
                DrawModel2(m249_world, new Vector3(-3500.0f, -30.0f, 2008.0f), 0, 0);
                DrawModel2(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel2(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel2(aa12_world, new Vector3(800.0f, -35.0f, 3000.0f), 0, 0);
                DrawModel2(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                DrawModel2(medpack_world, new Vector3(2500.0f, -30.0f, 3000.0f), 0, 0);
                DrawModel2(m14_world, new Vector3(1945.0f, -30.0f, 200.0f), 0, 0);
                if (firing)
                {
                    DrawModel2(gore_fx, gorePosition, 0, 0);
                    foreach (shotpellet pellet in pellets)
                    {
                        if (weapon == "SPAS12")
                        {
                            DrawModel2(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Gorilla.rotation) >= 0 && (float)Math.Cos(Gorilla.rotation) <= 1)
                        {
                            DrawModel2(armored_gorilla, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > 0 && (float)Math.Sin(Gorilla.rotation) < 1)
                        {
                            DrawModel2(armored_gorilla45, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) <= 0 && (float)Math.Sin(Gorilla.rotation) <= 1)
                        {
                            DrawModel2(armored_gorilla90, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) > -1 && (float)Math.Sin(Gorilla.rotation) > 0)
                        {
                            DrawModel2(armored_gorilla135, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= -1 && (float)Math.Sin(Gorilla.rotation) <= 0)
                        {
                            DrawModel2(armored_gorilla180, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < 0 && (float)Math.Sin(Gorilla.rotation) > -1)
                        {
                            DrawModel2(armored_gorilla225, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) >= 0 && (float)Math.Sin(Gorilla.rotation) >= -1)
                        {
                            DrawModel2(armored_gorilla270, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < 1 && (float)Math.Sin(Gorilla.rotation) < 0)
                        {
                            DrawModel2(armored_gorilla315, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                    }
                }
                if (player2.firing)
                {
                    DrawModel2(gore_fx, gorePosition2, 0, 0);
                    foreach (shotpellet pellet in pellets2)
                    {
                        if (player2.weapon == "SPAS12")
                        {
                            DrawModel2(gore_fx, pellet.goreposition, 0, 0);
                        }
                    }
                }
                foreach (bot ally in goodbots)
                {
                    if (!ally.dead)
                    {
                        if (!ally.firing)
                        {
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(ally.rotation) >= 0 && (float)Math.Cos(ally.rotation) <= 1)
                            {
                                DrawModel2(soldier, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                                DrawModel2(uzi, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > 0 && (float)Math.Sin(ally.rotation) < 1)
                            {
                                DrawModel2(soldier45, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) <= 0 && (float)Math.Sin(ally.rotation) <= 1)
                            {
                                DrawModel2(soldier90, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) > -1 && (float)Math.Sin(ally.rotation) > 0)
                            {
                                DrawModel2(soldier135, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= -1 && (float)Math.Sin(ally.rotation) <= 0)
                            {
                                DrawModel2(soldier180, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < 0 && (float)Math.Sin(ally.rotation) > -1)
                            {
                                DrawModel2(soldier225, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) >= 0 && (float)Math.Sin(ally.rotation) >= -1)
                            {
                                DrawModel2(soldier270, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < 1 && (float)Math.Sin(ally.rotation) < 0)
                            {
                                DrawModel2(soldier315, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                        }
                        if (ally.firing)
                        {
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(ally.rotation) >= 0 && (float)Math.Cos(ally.rotation) <= 1)
                            {
                                DrawModel2(soldier, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                                DrawModel2(uzifire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > 0 && (float)Math.Sin(ally.rotation) < 1)
                            {
                                DrawModel2(soldier45fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) <= 0 && (float)Math.Sin(ally.rotation) <= 1)
                            {
                                DrawModel2(soldier90fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) > -1 && (float)Math.Sin(ally.rotation) > 0)
                            {
                                DrawModel2(soldier135fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= -1 && (float)Math.Sin(ally.rotation) <= 0)
                            {
                                DrawModel2(soldier180fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < 0 && (float)Math.Sin(ally.rotation) > -1)
                            {
                                DrawModel2(soldier225fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) >= 0 && (float)Math.Sin(ally.rotation) >= -1)
                            {
                                DrawModel2(soldier270fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                            if ((float)Math.Sin(ally.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(ally.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(ally.rotation) < 1 && (float)Math.Sin(ally.rotation) < 0)
                            {
                                DrawModel2(soldier315fire, new Vector3(ally.position.X, ally.position.Y + 15, ally.position.Z), 0, 0);
                            }
                        }
                    }
                }
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel2(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel2(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel2(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel2(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.DrawString(Font, "Player 2's Damage:" + p2damage, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.White);
                spriteBatch.End();
            }
            if (mode == "juggernaut4")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = upperleftViewport;
                DrawModel(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Gorilla.rotation) >= 0 && (float)Math.Cos(Gorilla.rotation) <= 1)
                        {
                            DrawModel(armored_gorilla, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > 0 && (float)Math.Sin(Gorilla.rotation) < 1)
                        {
                            DrawModel(armored_gorilla45, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) <= 0 && (float)Math.Sin(Gorilla.rotation) <= 1)
                        {
                            DrawModel(armored_gorilla90, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) > -1 && (float)Math.Sin(Gorilla.rotation) > 0)
                        {
                            DrawModel(armored_gorilla135, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= -1 && (float)Math.Sin(Gorilla.rotation) <= 0)
                        {
                            DrawModel(armored_gorilla180, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < 0 && (float)Math.Sin(Gorilla.rotation) > -1)
                        {
                            DrawModel(armored_gorilla225, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) >= 0 && (float)Math.Sin(Gorilla.rotation) >= -1)
                        {
                            DrawModel(armored_gorilla270, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < 1 && (float)Math.Sin(Gorilla.rotation) < 0)
                        {
                            DrawModel(armored_gorilla315, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                    }
                }
                DrawModel(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel(m4sopmod_world, new Vector3(1000.0f, -30.0f, -1500.0f), 0, 0);
                DrawModel(medpack_world, new Vector3(2500.0f, -30.0f, 3000.0f), 0, 0);
                DrawModel(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel(python_world, new Vector3(-4650.0f, -30.0f, 270.0f), 0, 0);
                DrawModel(ak47_world, new Vector3(-750.0f, -30.0f, -2000.0f), 0, 0);
                DrawModel(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel(aa12_world, new Vector3(800.0f, -35.0f, 3000.0f), 0, 0);
                DrawModel(Rem870_world, new Vector3(-2000.0f, -35.0f, 1000.0f), 0, 0);
                DrawModel(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                DrawModel(m249_world, new Vector3(-3500.0f, -30.0f, 2008.0f), 0, 0);
                DrawModel(mp5k_world, new Vector3(3250.0f, -30.0f, 1776.0f), 0, 0);
                DrawModel(m21_world, new Vector3(0.0f, -45.0f, -2800.0f), 0, 0);
                DrawModel(m14_world, new Vector3(1945.0f, -30.0f, 200.0f), 0, 0);
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(bot45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(bot90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(bot135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(bot180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(bot225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(bot270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(bot315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(bot45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(bot90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(bot135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(bot180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(bot225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(bot270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(bot315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.DrawString(Font, "Player 1's Damage:" + p1damage, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.White);
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = upperrightViewport;
                DrawModel2(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                DrawModel2(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel2(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel2(m4sopmod_world, new Vector3(1000.0f, -30.0f, -1500.0f), 0, 0);
                DrawModel2(mp5k_world, new Vector3(3250.0f, -30.0f, 1776.0f), 0, 0);
                DrawModel2(ak47_world, new Vector3(-750.0f, -30.0f, -2000.0f), 0, 0);
                DrawModel2(python_world, new Vector3(-4650.0f, -30.0f, 230.0f), 0, 0);
                DrawModel2(m21_world, new Vector3(0.0f, -30.0f, -2800.0f), 0, 0);
                DrawModel2(Rem870_world, new Vector3(-2000.0f, -35.0f, 1000.0f), 0, 0);
                DrawModel2(m249_world, new Vector3(-3500.0f, -30.0f, 2008.0f), 0, 0);
                DrawModel2(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel2(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel2(aa12_world, new Vector3(800.0f, -35.0f, 3000.0f), 0, 0);
                DrawModel2(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                DrawModel2(medpack_world, new Vector3(2500.0f, -30.0f, 3000.0f), 0, 0);
                DrawModel2(m14_world, new Vector3(1945.0f, -30.0f, 200.0f), 0, 0);
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Gorilla.rotation) >= 0 && (float)Math.Cos(Gorilla.rotation) <= 1)
                        {
                            DrawModel2(armored_gorilla, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > 0 && (float)Math.Sin(Gorilla.rotation) < 1)
                        {
                            DrawModel2(armored_gorilla45, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) <= 0 && (float)Math.Sin(Gorilla.rotation) <= 1)
                        {
                            DrawModel2(armored_gorilla90, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) > -1 && (float)Math.Sin(Gorilla.rotation) > 0)
                        {
                            DrawModel2(armored_gorilla135, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= -1 && (float)Math.Sin(Gorilla.rotation) <= 0)
                        {
                            DrawModel2(armored_gorilla180, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < 0 && (float)Math.Sin(Gorilla.rotation) > -1)
                        {
                            DrawModel2(armored_gorilla225, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) >= 0 && (float)Math.Sin(Gorilla.rotation) >= -1)
                        {
                            DrawModel2(armored_gorilla270, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < 1 && (float)Math.Sin(Gorilla.rotation) < 0)
                        {
                            DrawModel2(armored_gorilla315, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                    }
                }
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(bot45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(bot135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(bot180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(bot225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(bot270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(bot315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(bot45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(bot135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(bot180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(bot225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(bot270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(bot315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel2(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel2(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel2(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel2(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.DrawString(Font, "Player 2's Damage:" + p2damage, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.White);
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerleftViewport;
                DrawModel3(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                DrawModel3(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel3(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel3(m4sopmod_world, new Vector3(1000.0f, -30.0f, -1500.0f), 0, 0);
                DrawModel3(mp5k_world, new Vector3(3250.0f, -30.0f, 1776.0f), 0, 0);
                DrawModel3(ak47_world, new Vector3(-750.0f, -30.0f, -2000.0f), 0, 0);
                DrawModel3(python_world, new Vector3(-4650.0f, -30.0f, 230.0f), 0, 0);
                DrawModel3(m21_world, new Vector3(0.0f, -30.0f, -2800.0f), 0, 0);
                DrawModel3(Rem870_world, new Vector3(-2000.0f, -35.0f, 1000.0f), 0, 0);
                DrawModel3(m249_world, new Vector3(-3500.0f, -30.0f, 2008.0f), 0, 0);
                DrawModel3(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel3(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel3(aa12_world, new Vector3(800.0f, -35.0f, 3000.0f), 0, 0);
                DrawModel3(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                DrawModel3(medpack_world, new Vector3(2500.0f, -30.0f, 3000.0f), 0, 0);
                DrawModel3(m14_world, new Vector3(1945.0f, -30.0f, 200.0f), 0, 0);
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Gorilla.rotation) >= 0 && (float)Math.Cos(Gorilla.rotation) <= 1)
                        {
                            DrawModel3(armored_gorilla, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > 0 && (float)Math.Sin(Gorilla.rotation) < 1)
                        {
                            DrawModel3(armored_gorilla45, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) <= 0 && (float)Math.Sin(Gorilla.rotation) <= 1)
                        {
                            DrawModel3(armored_gorilla90, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) > -1 && (float)Math.Sin(Gorilla.rotation) > 0)
                        {
                            DrawModel3(armored_gorilla135, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= -1 && (float)Math.Sin(Gorilla.rotation) <= 0)
                        {
                            DrawModel3(armored_gorilla180, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < 0 && (float)Math.Sin(Gorilla.rotation) > -1)
                        {
                            DrawModel3(armored_gorilla225, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) >= 0 && (float)Math.Sin(Gorilla.rotation) >= -1)
                        {
                            DrawModel3(armored_gorilla270, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < 1 && (float)Math.Sin(Gorilla.rotation) < 0)
                        {
                            DrawModel3(armored_gorilla315, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                    }
                }
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(bot45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(bot135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(bot180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(bot225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(bot270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(bot315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(bot45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(bot135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(bot180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(bot225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(bot270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(bot315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel3(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel3(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel3(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel3(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.DrawString(Font, "Player 3's Damage:" + p3damage, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.White);
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerrightViewport;
                DrawModel4(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                DrawModel4(anaconda_world, new Vector3(-150.0f, -30.0f, -200.0f), 0, 0);
                DrawModel4(uzi_world, new Vector3(300.0f, -25.0f, -100.0f), 0, 0);
                DrawModel4(m4sopmod_world, new Vector3(1000.0f, -30.0f, -1500.0f), 0, 0);
                DrawModel4(mp5k_world, new Vector3(3250.0f, -30.0f, 1776.0f), 0, 0);
                DrawModel4(ak47_world, new Vector3(-750.0f, -30.0f, -2000.0f), 0, 0);
                DrawModel4(python_world, new Vector3(-4650.0f, -30.0f, 230.0f), 0, 0);
                DrawModel4(m21_world, new Vector3(0.0f, -30.0f, -2800.0f), 0, 0);
                DrawModel4(Rem870_world, new Vector3(-2000.0f, -35.0f, 1000.0f), 0, 0);
                DrawModel4(m249_world, new Vector3(-3500.0f, -30.0f, 2008.0f), 0, 0);
                DrawModel4(R700_world, new Vector3(150.0f, -45.0f, 100.0f), 0, 0);
                DrawModel4(SPAS_world, new Vector3(-300.0f, -35.0f, 0.0f), 0, 0);
                DrawModel4(aa12_world, new Vector3(800.0f, -35.0f, 3000.0f), 0, 0);
                DrawModel4(R700scope_world, new Vector3(-200.0f, -45.0f, 200.0f), 0, 0);
                DrawModel4(medpack_world, new Vector3(2500.0f, -30.0f, 3000.0f), 0, 0);
                DrawModel4(m14_world, new Vector3(1945.0f, -30.0f, 200.0f), 0, 0);
                foreach (gorilla Gorilla in gorillas)
                {
                    if (!Gorilla.dead)
                    {
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Gorilla.rotation) >= 0 && (float)Math.Cos(Gorilla.rotation) <= 1)
                        {
                            DrawModel4(armored_gorilla, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > 0 && (float)Math.Sin(Gorilla.rotation) < 1)
                        {
                            DrawModel4(armored_gorilla45, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) <= 0 && (float)Math.Sin(Gorilla.rotation) <= 1)
                        {
                            DrawModel4(armored_gorilla90, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) > -1 && (float)Math.Sin(Gorilla.rotation) > 0)
                        {
                            DrawModel4(armored_gorilla135, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= -1 && (float)Math.Sin(Gorilla.rotation) <= 0)
                        {
                            DrawModel4(armored_gorilla180, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < 0 && (float)Math.Sin(Gorilla.rotation) > -1)
                        {
                            DrawModel4(armored_gorilla225, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) >= 0 && (float)Math.Sin(Gorilla.rotation) >= -1)
                        {
                            DrawModel4(armored_gorilla270, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Gorilla.rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Gorilla.rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Gorilla.rotation) < 1 && (float)Math.Sin(Gorilla.rotation) < 0)
                        {
                            DrawModel4(armored_gorilla315, new Vector3(Gorilla.position.X, Gorilla.position.Y + 15, Gorilla.position.Z), 0, 0);
                        }
                    }
                }
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                foreach (target melon in watermelons)
                {
                    if (!melon.destroyed)
                    {
                        DrawModel4(watermelon, melon.position, 0, 0);
                    }
                    if (melon.destroyed)
                    {
                        DrawModel4(watermelon_destroyed, melon.position, 0, 0);
                    }
                }
                if (!watermelondestroyed)
                {
                    DrawModel4(watermelon, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                if (watermelondestroyed)
                {
                    DrawModel4(watermelon_destroyed, new Vector3(10.0f, -45.0f, 0.0f), 0, 0);
                }
                spriteBatch.DrawString(Font, "Player 4's Damage:" + p4damage, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.White);
                spriteBatch.End();
            }
            if (mode == "class")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = upperleftViewport;
                DrawModel(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(bot45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(bot90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(bot135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(bot180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(bot225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(bot270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(bot315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(bot45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(bot90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(bot135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(bot180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(bot225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(bot270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(bot315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.DrawString(Font, "Kills:" + p1kills, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.Blue);
                reticleRect = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2 - 40, graphics.GraphicsDevice.Viewport.Height / 2 - 40, 80, 80);
                if (!ads && weapon != "medic")
                {
                    spriteBatch.Draw(reticle, reticleRect, Color.White);
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = upperrightViewport;
                DrawModel2(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(bot45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(bot135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(bot180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(bot225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(bot270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(bot315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(bot45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(bot135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(bot180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(bot225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(bot270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(bot315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.DrawString(Font, "Your Kills:" + p2kills, new Vector2(DisplayPos.X, DisplayPos.Y + 100), Color.Blue);
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerleftViewport;
                DrawModel3(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(bot45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(bot135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(bot180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(bot225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(bot270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(bot315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(bot45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(bot135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(bot180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(bot225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(bot270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(bot315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerrightViewport;
                DrawModel4(field, new Vector3(0.0f, 380.0f, 0.0f), 0, 0);
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y - 10, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.End();
            }
            if (mode == "deathmatch2")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = leftViewport;
                DrawModel(citymap, new Vector3(0.0f, 50.0f, 0.0f), 0, 0);
                DrawModel(elevator, elevatorPosition, 0, 0);
                DrawModel(elevator270, elevator2Position, 0, 0);
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = rightViewport;
                DrawModel2(citymap, new Vector3(0.0f, 50.0f, 0.0f), 0, 0);
                DrawModel2(elevator, elevatorPosition, 0, 0);
                DrawModel2(elevator270, elevator2Position, 0, 0);
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y + 15, playerPosition.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.End();
            }
            if (mode == "tdm4")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = upperleftViewport;
                DrawModel(poolmap, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                DrawModel(Rem870_world, new Vector3(-350, -35.0f, 200), 0, 0);
                DrawModel(uzi_world, new Vector3(-200, -25.0f, -270), 0, 0);
                DrawModel(ak47_world, new Vector3(350, -145.0f, 10), 0, 0);
                DrawModel(anaconda_world, new Vector3(150.0f, -74.0f, 0), 0, 0);
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel(bot45fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel(bot90fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel(bot135fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel(bot180fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel(bot225fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel(bot270fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel(bot315fire, new Vector3(player2.Position.X, player2.Position.Y - 10, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y - 10, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzi, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(bot45, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(bot90, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(bot135, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(bot180, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(bot225, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(bot270, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(bot315, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel(bot0, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                            DrawModel(uzifire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel(bot45fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel(bot90fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel(bot135fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel(bot180fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel(bot225fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel(bot270fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel(bot315fire, new Vector3(player4.Position.X, player4.Position.Y - 10, player4.Position.Z), 0, 0);
                        }
                    }
                }
                reticleRect = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2 - 40, graphics.GraphicsDevice.Viewport.Height / 2 - 40, 80, 80);
                if (!ads && weapon != "medic")
                {
                    spriteBatch.Draw(reticle, reticleRect, Color.White);
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = upperrightViewport;
                DrawModel2(poolmap, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                DrawModel2(Rem870_world, new Vector3(-350, -35.0f, 200), 0, 0);
                DrawModel2(uzi_world, new Vector3(-200, -25.0f, -270), 0, 0);
                DrawModel2(ak47_world, new Vector3(350, -145.0f, 10), 0, 0);
                DrawModel2(anaconda_world, new Vector3(150.0f, -74.0f, 0), 0, 0);
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel2(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel2(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel2(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel2(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel2(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel2(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel2(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot0, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                            DrawModel2(uzi, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(bot45, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot90, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(bot135, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(bot180, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(bot225, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(bot270, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(bot315, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot0, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                            DrawModel2(uzifire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel2(bot45fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel2(bot90fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel2(bot135fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel2(bot180fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel2(bot225fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel2(bot270fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel2(bot315fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerleftViewport;
                DrawModel3(poolmap, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                DrawModel3(Rem870_world, new Vector3(-350, -35.0f, 200), 0, 0);
                DrawModel3(uzi_world, new Vector3(-200, -25.0f, -270), 0, 0);
                DrawModel3(ak47_world, new Vector3(350, -145.0f, 10), 0, 0);
                DrawModel3(anaconda_world, new Vector3(150.0f, -74.0f, 0), 0, 0);
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel3(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel3(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel3(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel3(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel3(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel3(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel3(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel3(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(bot45, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot90, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(bot135, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(bot180, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(bot225, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(bot270, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(bot315, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel3(bot45fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel3(bot90fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel3(bot135fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel3(bot180fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel3(bot225fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel3(bot270fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel3(bot315fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player4.dead)
                {
                    if (!player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                            DrawModel3(uzi, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(bot45, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot90, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(bot135, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(bot180, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(bot225, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(bot270, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(bot315, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                    }
                    if (player4.firing)
                    {
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player4.Rotation) >= 0 && (float)Math.Cos(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot0, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                            DrawModel3(uzifire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > 0 && (float)Math.Sin(player4.Rotation) < 1)
                        {
                            DrawModel3(bot45fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) <= 0 && (float)Math.Sin(player4.Rotation) <= 1)
                        {
                            DrawModel3(bot90fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) > -1 && (float)Math.Sin(player4.Rotation) > 0)
                        {
                            DrawModel3(bot135fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= -1 && (float)Math.Sin(player4.Rotation) <= 0)
                        {
                            DrawModel3(bot180fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < 0 && (float)Math.Sin(player4.Rotation) > -1)
                        {
                            DrawModel3(bot225fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) >= 0 && (float)Math.Sin(player4.Rotation) >= -1)
                        {
                            DrawModel3(bot270fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player4.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player4.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player4.Rotation) < 1 && (float)Math.Sin(player4.Rotation) < 0)
                        {
                            DrawModel3(bot315fire, new Vector3(player4.Position.X, player4.Position.Y, player4.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.End();
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                GraphicsDevice.Viewport = lowerrightViewport;
                DrawModel4(poolmap, new Vector3(0.0f, -20.0f, 0.0f), 0, 0);
                DrawModel4(Rem870_world, new Vector3(-350, -35.0f, 200), 0, 0);
                DrawModel4(uzi_world, new Vector3(-200, -25.0f, -270), 0, 0);
                DrawModel4(ak47_world, new Vector3(350, -145.0f, 10), 0, 0);
                DrawModel4(anaconda_world, new Vector3(150.0f, -74.0f, 0), 0, 0);
                if (!dead)
                {
                    if (!firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                    if (firing)
                    {
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(Rotation) >= 0 && (float)Math.Cos(Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > 0 && (float)Math.Sin(Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) <= 0 && (float)Math.Sin(Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) > -1 && (float)Math.Sin(Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= -1 && (float)Math.Sin(Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < 0 && (float)Math.Sin(Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) >= 0 && (float)Math.Sin(Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                        if ((float)Math.Sin(Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(Rotation) < 1 && (float)Math.Sin(Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(playerPosition.X, playerPosition.Y, playerPosition.Z), 0, 0);
                        }
                    }
                }
                if (!player2.dead)
                {
                    if (!player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot0, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(bot45, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot90, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(bot135, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(bot180, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(bot225, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(bot270, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(bot315, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                    }
                    if (player2.firing)
                    {
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player2.Rotation) >= 0 && (float)Math.Cos(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot0, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > 0 && (float)Math.Sin(player2.Rotation) < 1)
                        {
                            DrawModel4(bot45fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) <= 0 && (float)Math.Sin(player2.Rotation) <= 1)
                        {
                            DrawModel4(bot90fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) > -1 && (float)Math.Sin(player2.Rotation) > 0)
                        {
                            DrawModel4(bot135fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= -1 && (float)Math.Sin(player2.Rotation) <= 0)
                        {
                            DrawModel4(bot180fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < 0 && (float)Math.Sin(player2.Rotation) > -1)
                        {
                            DrawModel4(bot225fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) >= 0 && (float)Math.Sin(player2.Rotation) >= -1)
                        {
                            DrawModel4(bot270fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player2.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player2.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player2.Rotation) < 1 && (float)Math.Sin(player2.Rotation) < 0)
                        {
                            DrawModel4(bot315fire, new Vector3(player2.Position.X, player2.Position.Y, player2.Position.Z), 0, 0);
                        }
                    }
                }
                if (!player3.dead)
                {
                    if (!player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                            DrawModel4(uzi, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                    }
                    if (player3.firing)
                    {
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Sin(player3.Rotation) >= 0 && (float)Math.Cos(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                            DrawModel4(uzifire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > 0 && (float)Math.Sin(player3.Rotation) < 1)
                        {
                            DrawModel4(soldier45fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) <= 0 && (float)Math.Sin(player3.Rotation) <= 1)
                        {
                            DrawModel4(soldier90fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) > -1 && (float)Math.Sin(player3.Rotation) > 0)
                        {
                            DrawModel4(soldier135fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) > ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= -1 && (float)Math.Sin(player3.Rotation) <= 0)
                        {
                            DrawModel4(soldier180fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) <= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < 0 && (float)Math.Sin(player3.Rotation) > -1)
                        {
                            DrawModel4(soldier225fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) < ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) < ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) >= 0 && (float)Math.Sin(player3.Rotation) >= -1)
                        {
                            DrawModel4(soldier270fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                        if ((float)Math.Sin(player3.Rotation) >= ((Math.Sqrt(2)) / -2) && (float)Math.Cos(player3.Rotation) >= ((Math.Sqrt(2)) / 2) && (float)Math.Cos(player3.Rotation) < 1 && (float)Math.Sin(player3.Rotation) < 0)
                        {
                            DrawModel4(soldier315fire, new Vector3(player3.Position.X, player3.Position.Y, player3.Position.Z), 0, 0);
                        }
                    }
                }
                spriteBatch.End();
            }
            if (mode != "menu")
            {
                spriteBatch.Begin();
                GraphicsDevice.BlendState = BlendState.Opaque;
                GraphicsDevice.DepthStencilState = DepthStencilState.Default;

                if (mode == "coop" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
                {
                    GraphicsDevice.Viewport = upperleftViewport;
                }
                else if (mode == "sp")
                {
                }
                else
                {
                    GraphicsDevice.Viewport = leftViewport;
                }
                reticleRect = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2 - 40, graphics.GraphicsDevice.Viewport.Height / 2 - 40, 80, 80);
                if (!ads && weapon != "medic")
                {
                    spriteBatch.Draw(reticle, reticleRect, Color.White);
                }
                if (!reloading)
                {
                    if (weapon == "medic")
                    {
                        if (!firing)
                        {
                            spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                        }
                        if (firing)
                        {
                            if (!medichit)
                            {
                                spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                            }
                            if (medichit)
                            {
                                spriteBatch.Draw(MedHit, reticleRect, Color.White);
                            }
                        }
                    }
                    if (weapon == "M9")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m9_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(480, 320, 80, 80), Color.White);
                                DrawWeapon(m9_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m9_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m9_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "glock18")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(glock18_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(glock18_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(glock18_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(glock18_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "uzi")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(uzi_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(uzi_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(uzi_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(uzi_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "mac10")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(mac10_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(mac10_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(mac10_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(mac10_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "hipower")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                if (clip <= 1)
                                {
                                    DrawWeapon(hipower_empty, freeLook, Rotation);
                                }
                                else
                                {
                                    DrawWeapon(hipower_view, freeLook, Rotation);
                                }
                            }
                            if (firing)
                            {
                                DrawWeapon(hipower_fire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                if (clip <= 1)
                                {
                                    DrawWeapon(hipower_adsempty, freeLook, Rotation);
                                }
                                else
                                {
                                    DrawWeapon(hipower_ads, freeLook, Rotation);
                                }
                            }
                            if (firing)
                            {
                                DrawWeapon(hipower_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "AK47")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(ak47_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(ak47_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(ak47_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(ak47_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "aa12")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(aa12_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(aa12_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(aa12_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(aa12_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "S&W500")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(SW500_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(SW500_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(SW500_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(SW500_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "mp5k")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(mp5k_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(mp5k_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(mp5k_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(mp5k_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "M249")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m249_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m249_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m249_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m249_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "python")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(python_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                DrawWeapon(python_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(python_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(python_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "medic")
                    {
                        DrawWeapon(medpack_view, freeLook, Rotation);
                    }
                    if (weapon == "M4SOPMOD")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m4sopmod_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m4sopmod_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m4sopmod_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m4sopmod_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "magnum24")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(magnum24_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(magnum24_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(magnum24_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(magnum24_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "R700")
                    {
                        if (!ads)
                        {
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                DrawWeapon(R700_vfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -10 && firepause <= 20)
                                {
                                    DrawWeapon(R700_rechamber1, freeLook, Rotation);
                                }
                                if (firepause > 20 && firepause <= 30)
                                {
                                    DrawWeapon(R700_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause <= 50)
                                {
                                    DrawWeapon(R700_rechamber3, freeLook, Rotation);
                                }
                                if (firepause > 50 && firepause <= 60)
                                {
                                    DrawWeapon(R700_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 60 && firepause >= 80)
                                {
                                    DrawWeapon(R700_rechamber1, freeLook, Rotation);
                                }
                            }
                        }
                        if (ads)
                        {
                            if (firing)
                            {
                                DrawWeapon(R700_adsfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -10 && firepause <= 20)
                                {
                                    DrawWeapon(R700_ads, freeLook, Rotation);
                                }
                                if (firepause > 20 && firepause <= 30)
                                {
                                    DrawWeapon(R700_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause <= 50)
                                {
                                    DrawWeapon(R700_rechamber3, freeLook, Rotation);
                                }
                                if (firepause > 50 && firepause <= 60)
                                {
                                    DrawWeapon(R700_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 60 && firepause >= 80)
                                {
                                    DrawWeapon(R700_ads, freeLook, Rotation);
                                }
                            }
                        }
                    }
                    if (weapon == "AK74")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(ak74_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(ak74_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(ak74_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(ak74_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "m21")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m21_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m21_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                        }
                    }
                    if (weapon == "rpg")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(rpg7_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(rpg7_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(rpg7_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(rpg7_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    foreach (rocket rpgrocket in p1rockets)
                    {
                        if (rpgrocket.active)
                        {
                            DrawModel(rpg7rocket, rpgrocket.position, 0, 0);
                        }
                        if (rpgrocket.exploding)
                        {
                            DrawModel(rpgexplosion, rpgrocket.position, 0, 0);
                        }
                    }
                    if (weapon == "svd")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(svd_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(svd_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                        }
                    }
                    if (weapon == "m14")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m14_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m14_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(m14_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(m14_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "mp40")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(mp40_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(mp40_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(mp40_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(mp40_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "glock18")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(glock18_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(glock18_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(glock18_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(glock18_ads_fire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "hk21")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(hk21_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(hk21_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(hk21_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(hk21_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "pkm")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(pkm_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(pkm_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(pkm_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(pkm_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "cz550")
                    {
                        if (!ads)
                        {
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                DrawWeapon(cz550_vfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -10 && firepause <= 20)
                                {
                                    DrawWeapon(cz550_view, freeLook, Rotation);
                                }
                                if (firepause > 20 && firepause <= 30)
                                {
                                    DrawWeapon(cz550_rechamber1, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause <= 50)
                                {
                                    DrawWeapon(cz550_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 50 && firepause <= 60)
                                {
                                    DrawWeapon(cz550_rechamber1, freeLook, Rotation);
                                }
                                if (firepause > 60 && firepause >= 80)
                                {
                                    DrawWeapon(cz550_view, freeLook, Rotation);
                                }
                            }
                        }
                        if (ads)
                        {
                            if (firing)
                            {
                                DrawWeapon(cz550_ads_fire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -10 && firepause <= 20)
                                {
                                    DrawWeapon(cz550_ads, freeLook, Rotation);
                                }
                                if (firepause > 20 && firepause <= 30)
                                {
                                    DrawWeapon(cz550_rechamber1, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause <= 50)
                                {
                                    DrawWeapon(cz550_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 50 && firepause <= 60)
                                {
                                    DrawWeapon(cz550_rechamber1, freeLook, Rotation);
                                }
                                if (firepause > 60 && firepause >= 80)
                                {
                                    DrawWeapon(cz550_ads, freeLook, Rotation);
                                }
                            }
                        }
                    }
                    if (weapon == "m134")
                    {
                        if (!firing)
                        {
                            DrawWeapon(m134_view, freeLook, Rotation);
                        }
                        if (firing)
                        {
                            DrawWeapon(m134_vfire, freeLook, Rotation);
                        }
                    }
                    if (weapon == "winchester1887")
                    {
                        if (!ads)
                        {
                            if (firing)
                            {
                                DrawWeapon(model1887_vfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -10 && firepause <= 20)
                                {
                                    DrawWeapon(model1887_view, freeLook, Rotation);
                                }
                                if (firepause > 20 && firepause <= 30)
                                {
                                    DrawWeapon(model1887_f1, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause <= 50)
                                {
                                    DrawWeapon(model1887_leverwork, freeLook, Rotation);
                                }
                                if (firepause > 50 && firepause <= 60)
                                {
                                    DrawWeapon(model1887_f1, freeLook, Rotation);
                                }
                                if (firepause > 60 && firepause >= 80)
                                {
                                    DrawWeapon(model1887_view, freeLook, Rotation);
                                }
                            }
                        }
                        if (ads)
                        {
                            if (firing)
                            {
                                DrawWeapon(model1887_adsfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -10 && firepause <= 20)
                                {
                                    DrawWeapon(model1887_ads, freeLook, Rotation);
                                }
                                if (firepause > 20 && firepause <= 30)
                                {
                                    DrawWeapon(model1887_f1, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause <= 50)
                                {
                                    DrawWeapon(model1887_leverwork, freeLook, Rotation);
                                }
                                if (firepause > 50 && firepause <= 60)
                                {
                                    DrawWeapon(model1887_f1, freeLook, Rotation);
                                }
                                if (firepause > 60 && firepause >= 80)
                                {
                                    DrawWeapon(model1887_ads, freeLook, Rotation);
                                }
                            }
                        }
                    }
                    if (weapon == "dbshotgun")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(dbshotgun_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                DrawWeapon(dbshotgun_viewfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(dbshotgun_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(dbshotgun_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "R700Sniper")
                    {
                        if (!ads)
                        {
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                DrawWeapon(R700scope_vfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -10 && firepause <= 20)
                                {
                                    DrawWeapon(R700scope_rechamber1, freeLook, Rotation);
                                }
                                if (firepause > 20 && firepause <= 30)
                                {
                                    DrawWeapon(R700scope_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause <= 50)
                                {
                                    DrawWeapon(R700scope_rechamber3, freeLook, Rotation);
                                }
                                if (firepause > 50 && firepause <= 60)
                                {
                                    DrawWeapon(R700scope_rechamber2, freeLook, Rotation);
                                }
                                if (firepause > 60 && firepause >= 80)
                                {
                                    DrawWeapon(R700scope_rechamber1, freeLook, Rotation);
                                }
                            }
                        }
                        if (ads)
                        {
                            spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                        }
                    }
                    if (weapon == "volcanic")
                    {
                        if (!ads)
                        {
                            if (firing)
                            {
                                DrawWeapon(volcanic_vfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -5 && firepause <= 10)
                                {
                                    DrawWeapon(volcanic_view, freeLook, Rotation);
                                }
                                if (firepause > 10 && firepause <= 15)
                                {
                                    DrawWeapon(volcanic_f1, freeLook, Rotation);
                                }
                                if (firepause > 15 && firepause <= 25)
                                {
                                    DrawWeapon(volcanic_f2, freeLook, Rotation);
                                }
                                if (firepause > 25 && firepause <= 30)
                                {
                                    DrawWeapon(volcanic_f1, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause >= 40)
                                {
                                    DrawWeapon(volcanic_view, freeLook, Rotation);
                                }
                            }
                        }
                        if (ads)
                        {
                            if (firing)
                            {
                                DrawWeapon(volcanic_adsfire, freeLook, Rotation);
                            }
                            if (!firing)
                            {
                                if (firepause >= -5 && firepause <= 10)
                                {
                                    DrawWeapon(volcanic_ads, freeLook, Rotation);
                                }
                                if (firepause > 10 && firepause <= 15)
                                {
                                    DrawWeapon(volcanic_f1, freeLook, Rotation);
                                }
                                if (firepause > 15 && firepause <= 25)
                                {
                                    DrawWeapon(volcanic_f2, freeLook, Rotation);
                                }
                                if (firepause > 25 && firepause <= 30)
                                {
                                    DrawWeapon(volcanic_f1, freeLook, Rotation);
                                }
                                if (firepause > 30 && firepause >= 40)
                                {
                                    DrawWeapon(volcanic_ads, freeLook, Rotation);
                                }
                            }
                        }
                    }
                    if (weapon == "SPAS12")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(SPAS_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                DrawWeapon(SPAS_fire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(SPAS_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(SPAS_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "R870")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                if (firepause >= 20 && firepause < 45)
                                {
                                    DrawWeapon(Rem870_pump, freeLook, Rotation);
                                }
                                if (firepause < 20 || firepause >= 45)
                                {
                                    DrawWeapon(Rem870_view, freeLook, Rotation);
                                }
                            }
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                DrawWeapon(Rem870_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                if (firepause < 15)
                                {
                                    DrawWeapon(Rem870_pump, freeLook, Rotation);
                                }
                                if (firepause >= 15)
                                {
                                    DrawWeapon(Rem870_ads, freeLook, Rotation);
                                }
                            }
                            if (firing)
                            {
                                DrawWeapon(Rem870_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    if (weapon == "anaconda")
                    {
                        if (!ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(anaconda_view, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                DrawWeapon(anaconda_vfire, freeLook, Rotation);
                            }
                        }
                        if (ads)
                        {
                            if (!firing)
                            {
                                DrawWeapon(anaconda_ads, freeLook, Rotation);
                            }
                            if (firing)
                            {
                                DrawWeapon(anaconda_adsfire, freeLook, Rotation);
                            }
                        }
                    }
                    spriteBatch.DrawString(Font, "Clip:" + (clip - 1), DisplayPos, Color.White);
                }
                if (weapon == "M9" || weapon == "mp5k" || weapon == "glock18" || weapon == "mp40" || weapon == "hipower")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo9mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "uzi")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammoUzi, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "mac10")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo45, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "m134")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammonull, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "medic")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + medpacks, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "M4SOPMOD" || weapon == "M249")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo556, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "m21" || weapon == "m14" || weapon == "hk21")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo762x51, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "pkm" || weapon == "svd")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo762x54, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "AK47")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo762x39, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "AK74")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo545, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "magnum24")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo20mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "volcanic")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo41, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "cz550")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo600overkill, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "python")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo357magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "S&W500")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo500magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "anaconda")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo44magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "R700" || weapon == "R700Sniper")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo3006, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "rpg")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammorpg, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "SPAS12" || weapon == "R870" || weapon == "dbshotgun" || weapon == "aa12")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo12Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (weapon == "winchester1887")
                {
                    spriteBatch.DrawString(Font, "Ammo:" + ammo10Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                }
                if (reloading)
                {
                    spriteBatch.DrawString(Font, "Clip:" + (clip), DisplayPos, Color.White);
                }
                spriteBatch.DrawString(Font, "Health:" + health, new Vector2(DisplayPos.X, DisplayPos.Y + 50), Color.Red);
                if (dead)
                {
                    spriteBatch.Draw(urdead, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                }
                if (mode == "class" && menu == "chooseclass")
                {
                    spriteBatch.Draw(chooseyourclass, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                    if (!godupgrade)
                    {
                        spriteBatch.Draw(godclass1, godclassrect, Color.White);
                    }
                    if (godupgrade)
                    {
                        spriteBatch.Draw(godclass2, godclassrect, Color.White);
                    }
                    if (!gunnerupgrade)
                    {
                        spriteBatch.Draw(lightgunner, gunnerclassrect, Color.White);
                    }
                    if (gunnerupgrade)
                    {
                        spriteBatch.Draw(heavygunner, gunnerclassrect, Color.White);
                    }
                    if (!mgupgrade)
                    {
                        spriteBatch.Draw(machinegunner1, mggunnerclassrect, Color.White);
                    }
                    if (mgupgrade)
                    {
                        spriteBatch.Draw(machinegunner2, mggunnerclassrect, Color.White);
                    }
                    if (!sniperupgrade)
                    {
                        spriteBatch.Draw(sniper1, sniperclassrect, Color.White);
                    }
                    if (sniperupgrade)
                    {
                        spriteBatch.Draw(sniper2, sniperclassrect, Color.White);
                    }
                    if (!specopupgrade)
                    {
                        spriteBatch.Draw(specop1, specoprect, Color.White);
                    }
                    if (specopupgrade)
                    {
                        spriteBatch.Draw(specop2, specoprect, Color.White);
                    }
                    spriteBatch.Draw(reticle, cursorrect, Color.White);
                }
                spriteBatch.End();
                if (mode != "sp")
                {
                    spriteBatch.Begin();
                    GraphicsDevice.BlendState = BlendState.Opaque;
                    GraphicsDevice.DepthStencilState = DepthStencilState.Default;
    
                    if (mode == "coop" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
                    {
                        GraphicsDevice.Viewport = upperrightViewport;
                    }
                    else
                    {
                        GraphicsDevice.Viewport = rightViewport;
                    }
                    reticleRect = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2 - 40, graphics.GraphicsDevice.Viewport.Height / 2 - 40, 80, 80);
                    if (!player2.ads && player2.weapon != "medic")
                    {
                        spriteBatch.Draw(reticle, reticleRect, Color.White);
                    }
                    if (!player2.reloading)
                    {
                        if (player2.weapon == "medic")
                        {
                            if (!player2.firing)
                            {
                                spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                            }
                            if (player2.firing)
                            {
                                if (!player2.medichit)
                                {
                                    spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                                }
                                if (player2.medichit)
                                {
                                    spriteBatch.Draw(MedHit, reticleRect, Color.White);
                                }
                            }
                        }
                        if (player2.weapon == "M9")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m9_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(480, 320, 80, 80), Color.White);
                                    DrawWeapon2(m9_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m9_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m9_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "glock18")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(glock18_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(glock18_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(glock18_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(glock18_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "S&W500")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(SW500_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(SW500_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(SW500_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(SW500_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "uzi")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(uzi_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(uzi_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(uzi_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(uzi_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "mac10")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(mac10_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(mac10_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(mac10_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(mac10_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "hipower")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    if (player2.clip <= 1)
                                    {
                                        DrawWeapon2(hipower_empty, player2.freeLook, player2.Rotation);
                                    }
                                    else
                                    {
                                        DrawWeapon2(hipower_view, player2.freeLook, player2.Rotation);
                                    }
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(hipower_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    if (player2.clip <= 1)
                                    {
                                        DrawWeapon2(hipower_adsempty, player2.freeLook, player2.Rotation);
                                    }
                                    else
                                    {
                                        DrawWeapon2(hipower_ads, player2.freeLook, player2.Rotation);
                                    }
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(hipower_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "AK47")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(ak47_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(ak47_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(ak47_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(ak47_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "aa12")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(aa12_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(aa12_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(aa12_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(aa12_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "mp5k")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(mp5k_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(mp5k_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(mp5k_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(mp5k_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "M249")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m249_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m249_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m249_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m249_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "python")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(python_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                    DrawWeapon2(python_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(python_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(python_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "medic")
                        {
                            DrawWeapon2(medpack_view, player2.freeLook, player2.Rotation);
                        }
                        foreach (rocket rpgrocket in p1rockets)
                        {
                            if (rpgrocket.active)
                            {
                                DrawModel2(rpg7rocket, rpgrocket.position, 0, 0);
                            }
                            if (rpgrocket.exploding)
                            {
                                DrawModel2(rpgexplosion, rpgrocket.position, 0, 0);
                            }
                        }
                        if (player2.weapon == "M4SOPMOD")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m4sopmod_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m4sopmod_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m4sopmod_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m4sopmod_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "magnum24")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(magnum24_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(magnum24_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(magnum24_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(magnum24_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "AK74")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(ak74_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(ak74_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(ak74_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(ak74_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "volcanic")
                        {
                            if (!player2.ads)
                            {
                                if (player2.firing)
                                {
                                    DrawWeapon2(volcanic_vfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -5 && player2.firepause <= 10)
                                    {
                                        DrawWeapon2(volcanic_view, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 10 && player2.firepause <= 15)
                                    {
                                        DrawWeapon2(volcanic_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 15 && player2.firepause <= 25)
                                    {
                                        DrawWeapon2(volcanic_f2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 25 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(volcanic_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause >= 40)
                                    {
                                        DrawWeapon2(volcanic_view, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                            if (player2.ads)
                            {
                                if (player2.firing)
                                {
                                    DrawWeapon2(volcanic_adsfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -5 && player2.firepause <= 10)
                                    {
                                        DrawWeapon2(volcanic_ads, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 10 && player2.firepause <= 15)
                                    {
                                        DrawWeapon2(volcanic_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 15 && player2.firepause <= 25)
                                    {
                                        DrawWeapon2(volcanic_f2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 25 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(volcanic_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause >= 40)
                                    {
                                        DrawWeapon2(volcanic_ads, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                        }
                        if (player2.weapon == "R700")
                        {
                            if (!player2.ads)
                            {
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon2(R700_vfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -10 && player2.firepause <= 20)
                                    {
                                        DrawWeapon2(R700_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 20 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(R700_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause <= 50)
                                    {
                                        DrawWeapon2(R700_rechamber3, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 50 && player2.firepause <= 60)
                                    {
                                        DrawWeapon2(R700_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 60 && player2.firepause >= 80)
                                    {
                                        DrawWeapon2(R700_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                            if (player2.ads)
                            {
                                if (player2.firing)
                                {
                                    DrawWeapon2(R700_adsfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -10 && player2.firepause <= 20)
                                    {
                                        DrawWeapon2(R700_ads, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 20 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(R700_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause <= 50)
                                    {
                                        DrawWeapon2(R700_rechamber3, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 50 && player2.firepause <= 60)
                                    {
                                        DrawWeapon2(R700_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 60 && player2.firepause >= 80)
                                    {
                                        DrawWeapon2(R700_ads, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                        }
                        if (player2.weapon == "m21")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m21_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m21_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player2.weapon == "svd")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(svd_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(svd_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player2.weapon == "m14")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m14_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m14_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(m14_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(m14_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "glock18")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(glock18_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(glock18_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(glock18_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(glock18_ads_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "mp40")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(mp40_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(mp40_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(mp40_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(mp40_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "pkm")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(pkm_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(pkm_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(pkm_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(pkm_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "m134")
                        {
                            if (!player2.firing)
                            {
                                DrawWeapon2(m134_view, player2.freeLook, player2.Rotation);
                            }
                            if (player2.firing)
                            {
                                DrawWeapon2(m134_vfire, player2.freeLook, player2.Rotation);
                            }
                        }
                        if (player2.weapon == "hk21")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(hk21_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(hk21_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(hk21_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(hk21_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "winchester1887")
                        {
                            if (!player2.ads)
                            {
                                if (player2.firing)
                                {
                                    DrawWeapon2(model1887_vfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -10 && player2.firepause <= 20)
                                    {
                                        DrawWeapon2(model1887_view, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 20 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(model1887_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause <= 50)
                                    {
                                        DrawWeapon2(model1887_leverwork, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 50 && player2.firepause <= 60)
                                    {
                                        DrawWeapon2(model1887_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 60 && player2.firepause >= 80)
                                    {
                                        DrawWeapon2(model1887_view, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                            if (player2.ads)
                            {
                                if (player2.firing)
                                {
                                    DrawWeapon2(model1887_adsfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -10 && player2.firepause <= 20)
                                    {
                                        DrawWeapon2(model1887_ads, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 20 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(model1887_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause <= 50)
                                    {
                                        DrawWeapon2(model1887_leverwork, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 50 && player2.firepause <= 60)
                                    {
                                        DrawWeapon2(model1887_f1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 60 && player2.firepause >= 80)
                                    {
                                        DrawWeapon2(model1887_ads, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                        }
                        if (player2.weapon == "dbshotgun")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(dbshotgun_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon2(dbshotgun_viewfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(dbshotgun_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(dbshotgun_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "R700Sniper")
                        {
                            if (!player2.ads)
                            {
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon2(R700scope_vfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -10 && player2.firepause <= 20)
                                    {
                                        DrawWeapon2(R700scope_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 20 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(R700scope_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause <= 50)
                                    {
                                        DrawWeapon2(R700scope_rechamber3, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 50 && player2.firepause <= 60)
                                    {
                                        DrawWeapon2(R700scope_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 60 && player2.firepause >= 80)
                                    {
                                        DrawWeapon2(R700scope_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                            if (player2.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player2.weapon == "SPAS12")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(SPAS_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon2(SPAS_fire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(SPAS_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(SPAS_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "R870")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= 20 && player2.firepause < 45)
                                    {
                                        DrawWeapon2(Rem870_pump, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause < 20 || player2.firepause >= 45)
                                    {
                                        DrawWeapon2(Rem870_view, player2.freeLook, player2.Rotation);
                                    }
                                }
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon2(Rem870_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    if (player2.firepause < 15)
                                    {
                                        DrawWeapon2(Rem870_pump, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause >= 15)
                                    {
                                        DrawWeapon2(Rem870_ads, player2.freeLook, player2.Rotation);
                                    }
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(Rem870_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        if (player2.weapon == "cz550")
                        {
                            if (!player2.ads)
                            {
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon2(cz550_vfire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -10 && player2.firepause <= 20)
                                    {
                                        DrawWeapon2(cz550_view, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 20 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(cz550_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause <= 50)
                                    {
                                        DrawWeapon2(cz550_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 50 && player2.firepause <= 60)
                                    {
                                        DrawWeapon2(cz550_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 60 && player2.firepause >= 80)
                                    {
                                        DrawWeapon2(cz550_view, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                            if (player2.ads)
                            {
                                if (player2.firing)
                                {
                                    DrawWeapon2(cz550_ads_fire, player2.freeLook, player2.Rotation);
                                }
                                if (!player2.firing)
                                {
                                    if (player2.firepause >= -10 && player2.firepause <= 20)
                                    {
                                        DrawWeapon2(cz550_ads, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 20 && player2.firepause <= 30)
                                    {
                                        DrawWeapon2(cz550_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 30 && player2.firepause <= 50)
                                    {
                                        DrawWeapon2(cz550_rechamber2, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 50 && player2.firepause <= 60)
                                    {
                                        DrawWeapon2(cz550_rechamber1, player2.freeLook, player2.Rotation);
                                    }
                                    if (player2.firepause > 60 && player2.firepause >= 80)
                                    {
                                        DrawWeapon2(cz550_ads, player2.freeLook, player2.Rotation);
                                    }
                                }
                            }
                        }
                        if (player2.weapon == "anaconda")
                        {
                            if (!player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(anaconda_view, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                    DrawWeapon2(anaconda_vfire, player2.freeLook, player2.Rotation);
                                }
                            }
                            if (player2.ads)
                            {
                                if (!player2.firing)
                                {
                                    DrawWeapon2(anaconda_ads, player2.freeLook, player2.Rotation);
                                }
                                if (player2.firing)
                                {
                                    DrawWeapon2(anaconda_adsfire, player2.freeLook, player2.Rotation);
                                }
                            }
                        }
                        spriteBatch.DrawString(Font, "Clip:" + (player2.clip - 1), DisplayPos, Color.White);
                    }
                    if (player2.weapon == "M9" || player2.weapon == "mp5k" || player2.weapon == "glock18" || player2.weapon == "mp40" || player2.weapon == "hipower")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo9mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "uzi")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammoUzi, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "mac10")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo45, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "m134")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammonull, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "medic")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.medpacks, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "S&W500")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo500magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "M4SOPMOD" || player2.weapon == "M249")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo556, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "m21" || player2.weapon == "m14" || player2.weapon == "hk21")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo762x51, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "pkm" || weapon == "svd")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo762x54, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "AK47")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo762x39, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "AK74")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo545, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "magnum24")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo20mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "volcanic")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo41, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "cz550")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo600overkill, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "python")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo357magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "anaconda")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo44magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "R700" || player2.weapon == "R700Sniper")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo3006, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "SPAS12" || player2.weapon == "R870" || player2.weapon == "dbshotgun" || player2.weapon == "aa12")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo12Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.weapon == "winchester1887")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player2.ammo10Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player2.reloading)
                    {
                        spriteBatch.DrawString(Font, "Clip:" + (player2.clip), DisplayPos, Color.White);
                    }
                    spriteBatch.DrawString(Font, "Health:" + player2.health, new Vector2(DisplayPos.X, DisplayPos.Y + 50), Color.Red);
                    if (player2.dead)
                    {
                        spriteBatch.Draw(urdead, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                    }
                    if (mode == "class" && player2.menu == "chooseclass")
                    {
                        spriteBatch.Draw(chooseyourclass, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                        if (!player2.godupgrade)
                        {
                            spriteBatch.Draw(godclass1, godclassrect, Color.White);
                        }
                        if (player2.godupgrade)
                        {
                            spriteBatch.Draw(godclass2, godclassrect, Color.White);
                        }
                        if (!player2.gunnerupgrade)
                        {
                            spriteBatch.Draw(lightgunner, gunnerclassrect, Color.White);
                        }
                        if (player2.gunnerupgrade)
                        {
                            spriteBatch.Draw(heavygunner, gunnerclassrect, Color.White);
                        }
                        if (!player2.mgupgrade)
                        {
                            spriteBatch.Draw(machinegunner1, mggunnerclassrect, Color.White);
                        }
                        if (player2.mgupgrade)
                        {
                            spriteBatch.Draw(machinegunner2, mggunnerclassrect, Color.White);
                        }
                        if (!player2.sniperupgrade)
                        {
                            spriteBatch.Draw(sniper1, sniperclassrect, Color.White);
                        }
                        if (player2.sniperupgrade)
                        {
                            spriteBatch.Draw(sniper2, sniperclassrect, Color.White);
                        }
                        if (!player2.specopupgrade)
                        {
                            spriteBatch.Draw(specop1, specoprect, Color.White);
                        }
                        if (player2.specopupgrade)
                        {
                            spriteBatch.Draw(specop2, specoprect, Color.White);
                        }
                        spriteBatch.Draw(reticle2, cursorrect2, Color.White);
                    }
                    spriteBatch.End();
                }
                if (mode == "coop" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
                {
                    spriteBatch.Begin();
                    GraphicsDevice.BlendState = BlendState.Opaque;
                    GraphicsDevice.DepthStencilState = DepthStencilState.Default;
    
                    GraphicsDevice.Viewport = lowerleftViewport;
                    reticleRect = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2 - 40, graphics.GraphicsDevice.Viewport.Height / 2 - 40, 80, 80);
                    if (!player3.ads && player3.weapon != "medic")
                    {
                        spriteBatch.Draw(reticle, reticleRect, Color.White);
                    }
                    if (!player3.reloading)
                    {
                        if (player3.weapon == "medic")
                        {
                            if (!player3.firing)
                            {
                                spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                            }
                            if (player3.firing)
                            {
                                if (!player3.medichit)
                                {
                                    spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                                }
                                if (player3.medichit)
                                {
                                    spriteBatch.Draw(MedHit, reticleRect, Color.White);
                                }
                            }
                        }
                        if (player3.weapon == "M9")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m9_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(480, 320, 80, 80), Color.White);
                                    DrawWeapon3(m9_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m9_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m9_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "glock18")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(glock18_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(glock18_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(glock18_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(glock18_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "uzi")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(uzi_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(uzi_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(uzi_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(uzi_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "mac10")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(mac10_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(mac10_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(mac10_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(mac10_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "AK47")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(ak47_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(ak47_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(ak47_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(ak47_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "aa12")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(aa12_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(aa12_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(aa12_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(aa12_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "mp5k")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(mp5k_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(mp5k_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(mp5k_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(mp5k_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "mp40")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(mp40_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(mp40_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(mp40_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(mp40_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "hipower")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    if (player3.clip <= 1)
                                    {
                                        DrawWeapon3(hipower_empty, player3.freeLook, player3.Rotation);
                                    }
                                    else
                                    {
                                        DrawWeapon3(hipower_view, player3.freeLook, player3.Rotation);
                                    }
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(hipower_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    if (player3.clip <= 1)
                                    {
                                        DrawWeapon3(hipower_adsempty, player3.freeLook, player3.Rotation);
                                    }
                                    else
                                    {
                                        DrawWeapon3(hipower_ads, player3.freeLook, player3.Rotation);
                                    }
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(hipower_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "magnum24")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(magnum24_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(magnum24_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(magnum24_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(magnum24_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "AK74")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(ak74_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(ak74_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(ak74_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(ak74_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "hk21")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(hk21_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(hk21_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(hk21_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(hk21_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "volcanic")
                        {
                            if (!player3.ads)
                            {
                                if (player3.firing)
                                {
                                    DrawWeapon3(volcanic_vfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -5 && player3.firepause <= 10)
                                    {
                                        DrawWeapon3(volcanic_view, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 10 && player3.firepause <= 15)
                                    {
                                        DrawWeapon3(volcanic_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 15 && player3.firepause <= 25)
                                    {
                                        DrawWeapon3(volcanic_f2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 25 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(volcanic_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause >= 40)
                                    {
                                        DrawWeapon3(volcanic_view, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                            if (player3.ads)
                            {
                                if (player3.firing)
                                {
                                    DrawWeapon3(volcanic_adsfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -5 && player3.firepause <= 10)
                                    {
                                        DrawWeapon3(volcanic_ads, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 10 && player3.firepause <= 15)
                                    {
                                        DrawWeapon3(volcanic_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 15 && player3.firepause <= 25)
                                    {
                                        DrawWeapon3(volcanic_f2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 25 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(volcanic_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause >= 40)
                                    {
                                        DrawWeapon3(volcanic_ads, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                        }
                        if (player3.weapon == "M249")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m249_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m249_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m249_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m249_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "S&W500")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(SW500_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(SW500_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(SW500_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(SW500_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "python")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(python_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                    DrawWeapon3(python_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(python_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(python_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "medic")
                        {
                            DrawWeapon3(medpack_view, player3.freeLook, player3.Rotation);
                        }
                        if (player3.weapon == "M4SOPMOD")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m4sopmod_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m4sopmod_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m4sopmod_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m4sopmod_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "R700")
                        {
                            if (!player3.ads)
                            {
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon3(R700_vfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -10 && player3.firepause <= 20)
                                    {
                                        DrawWeapon3(R700_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 20 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(R700_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause <= 50)
                                    {
                                        DrawWeapon3(R700_rechamber3, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 50 && player3.firepause <= 60)
                                    {
                                        DrawWeapon3(R700_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 60 && player3.firepause >= 80)
                                    {
                                        DrawWeapon3(R700_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                            if (player3.ads)
                            {
                                if (player3.firing)
                                {
                                    DrawWeapon3(R700_adsfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -10 && player3.firepause <= 20)
                                    {
                                        DrawWeapon3(R700_ads, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 20 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(R700_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause <= 50)
                                    {
                                        DrawWeapon3(R700_rechamber3, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 50 && player3.firepause <= 60)
                                    {
                                        DrawWeapon3(R700_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 60 && player3.firepause >= 80)
                                    {
                                        DrawWeapon3(R700_ads, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                        }
                        if (player3.weapon == "m21")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m21_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m21_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        foreach (rocket rpgrocket in p1rockets)
                        {
                            if (rpgrocket.active)
                            {
                                DrawModel3(rpg7rocket, rpgrocket.position, 0, 0);
                            }
                            if (rpgrocket.exploding)
                            {
                                DrawModel3(rpgexplosion, rpgrocket.position, 0, 0);
                            }
                        }
                        if (player3.weapon == "svd")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(svd_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(svd_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player3.weapon == "m14")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m14_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m14_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(m14_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(m14_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "cz550")
                        {
                            if (!player3.ads)
                            {
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon3(cz550_vfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -10 && player3.firepause <= 20)
                                    {
                                        DrawWeapon3(cz550_view, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 20 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(cz550_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause <= 50)
                                    {
                                        DrawWeapon3(cz550_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 50 && player3.firepause <= 60)
                                    {
                                        DrawWeapon3(cz550_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 60 && player3.firepause >= 80)
                                    {
                                        DrawWeapon3(cz550_view, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                            if (player3.ads)
                            {
                                if (player3.firing)
                                {
                                    DrawWeapon3(cz550_ads_fire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -10 && player3.firepause <= 20)
                                    {
                                        DrawWeapon3(cz550_ads, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 20 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(cz550_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause <= 50)
                                    {
                                        DrawWeapon3(cz550_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 50 && player3.firepause <= 60)
                                    {
                                        DrawWeapon3(cz550_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 60 && player3.firepause >= 80)
                                    {
                                        DrawWeapon3(cz550_ads, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                        }
                        if (player3.weapon == "glock18")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(glock18_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(glock18_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(glock18_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(glock18_ads_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "pkm")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(pkm_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(pkm_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(pkm_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(pkm_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "m134")
                        {
                            if (!player3.firing)
                            {
                                DrawWeapon3(m134_view, player3.freeLook, player3.Rotation);
                            }
                            if (player3.firing)
                            {
                                DrawWeapon3(m134_vfire, player3.freeLook, player3.Rotation);
                            }
                        }
                        if (player3.weapon == "winchester1887")
                        {
                            if (!player3.ads)
                            {
                                if (player3.firing)
                                {
                                    DrawWeapon3(model1887_vfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -10 && player3.firepause <= 20)
                                    {
                                        DrawWeapon3(model1887_view, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 20 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(model1887_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause <= 50)
                                    {
                                        DrawWeapon3(model1887_leverwork, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 50 && player3.firepause <= 60)
                                    {
                                        DrawWeapon3(model1887_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 60 && player3.firepause >= 80)
                                    {
                                        DrawWeapon3(model1887_view, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                            if (player3.ads)
                            {
                                if (player3.firing)
                                {
                                    DrawWeapon3(model1887_adsfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -10 && player3.firepause <= 20)
                                    {
                                        DrawWeapon3(model1887_ads, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 20 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(model1887_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause <= 50)
                                    {
                                        DrawWeapon3(model1887_leverwork, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 50 && player3.firepause <= 60)
                                    {
                                        DrawWeapon3(model1887_f1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 60 && player3.firepause >= 80)
                                    {
                                        DrawWeapon3(model1887_ads, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                        }
                        if (player3.weapon == "dbshotgun")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(dbshotgun_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon3(dbshotgun_viewfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(dbshotgun_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(dbshotgun_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "R700Sniper")
                        {
                            if (!player3.ads)
                            {
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon3(R700scope_vfire, player3.freeLook, player3.Rotation);
                                }
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= -10 && player3.firepause <= 20)
                                    {
                                        DrawWeapon3(R700scope_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 20 && player3.firepause <= 30)
                                    {
                                        DrawWeapon3(R700scope_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 30 && player3.firepause <= 50)
                                    {
                                        DrawWeapon3(R700scope_rechamber3, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 50 && player3.firepause <= 60)
                                    {
                                        DrawWeapon3(R700scope_rechamber2, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause > 60 && player3.firepause >= 80)
                                    {
                                        DrawWeapon3(R700scope_rechamber1, player3.freeLook, player3.Rotation);
                                    }
                                }
                            }
                            if (player3.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player3.weapon == "SPAS12")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(SPAS_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon3(SPAS_fire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(SPAS_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(SPAS_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "R870")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    if (player3.firepause >= 20 && player3.firepause < 45)
                                    {
                                        DrawWeapon3(Rem870_pump, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause < 20 || player3.firepause >= 45)
                                    {
                                        DrawWeapon3(Rem870_view, player3.freeLook, player3.Rotation);
                                    }
                                }
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon3(Rem870_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    if (player3.firepause < 15)
                                    {
                                        DrawWeapon3(Rem870_pump, player3.freeLook, player3.Rotation);
                                    }
                                    if (player3.firepause >= 15)
                                    {
                                        DrawWeapon3(Rem870_ads, player3.freeLook, player3.Rotation);
                                    }
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(Rem870_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        if (player3.weapon == "anaconda")
                        {
                            if (!player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(anaconda_view, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                    DrawWeapon3(anaconda_vfire, player3.freeLook, player3.Rotation);
                                }
                            }
                            if (player3.ads)
                            {
                                if (!player3.firing)
                                {
                                    DrawWeapon3(anaconda_ads, player3.freeLook, player3.Rotation);
                                }
                                if (player3.firing)
                                {
                                    DrawWeapon3(anaconda_adsfire, player3.freeLook, player3.Rotation);
                                }
                            }
                        }
                        spriteBatch.DrawString(Font, "Clip:" + (player3.clip - 1), DisplayPos, Color.White);
                    }
                    if (player3.weapon == "M9" || player3.weapon == "mp5k" || player3.weapon == "glock18" || player3.weapon == "mp40" || player3.weapon == "hipower")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo9mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "uzi")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammoUzi, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "mac10")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo45, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "m134")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammonull, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "medic")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.medpacks, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "M4SOPMOD" || player3.weapon == "M249")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo556, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "m21" || player3.weapon == "m14" || player3.weapon == "hk21")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo762x51, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "pkm" || weapon == "svd")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo762x54, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "AK47")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo762x39, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "AK74")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo545, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "magnum24")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo20mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "volcanic")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo41, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "cz550")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo600overkill, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "python")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo357magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "anaconda")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo44magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "R700" || player3.weapon == "R700Sniper")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo3006, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "SPAS12" || player3.weapon == "R870" || player3.weapon == "dbshotgun" || player3.weapon == "aa12")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo12Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "S&W500")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo500magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.weapon == "winchester1887")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player3.ammo10Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player3.reloading)
                    {
                        spriteBatch.DrawString(Font, "Clip:" + (player3.clip), DisplayPos, Color.White);
                    }
                    spriteBatch.DrawString(Font, "Health:" + player3.health, new Vector2(DisplayPos.X, DisplayPos.Y + 50), Color.Red);
                    if (player3.dead)
                    {
                        spriteBatch.Draw(urdead, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                    }
                    if (mode == "class" && player3.menu == "chooseclass")
                    {
                        spriteBatch.Draw(chooseyourclass, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                        if (!player3.godupgrade)
                        {
                            spriteBatch.Draw(godclass1, godclassrect, Color.White);
                        }
                        if (player3.godupgrade)
                        {
                            spriteBatch.Draw(godclass2, godclassrect, Color.White);
                        }
                        if (!player3.gunnerupgrade)
                        {
                            spriteBatch.Draw(lightgunner, gunnerclassrect, Color.White);
                        }
                        if (player3.gunnerupgrade)
                        {
                            spriteBatch.Draw(heavygunner, gunnerclassrect, Color.White);
                        }
                        if (!player3.mgupgrade)
                        {
                            spriteBatch.Draw(machinegunner1, mggunnerclassrect, Color.White);
                        }
                        if (player3.mgupgrade)
                        {
                            spriteBatch.Draw(machinegunner2, mggunnerclassrect, Color.White);
                        }
                        if (!player3.sniperupgrade)
                        {
                            spriteBatch.Draw(sniper1, sniperclassrect, Color.White);
                        }
                        if (player3.sniperupgrade)
                        {
                            spriteBatch.Draw(sniper2, sniperclassrect, Color.White);
                        }
                        if (!player3.specopupgrade)
                        {
                            spriteBatch.Draw(specop1, specoprect, Color.White);
                        }
                        if (player3.specopupgrade)
                        {
                            spriteBatch.Draw(specop2, specoprect, Color.White);
                        }
                        spriteBatch.Draw(reticle3, cursorrect3, Color.White);
                    }
                    spriteBatch.End();
                    spriteBatch.Begin();
                    GraphicsDevice.BlendState = BlendState.Opaque;
                    GraphicsDevice.DepthStencilState = DepthStencilState.Default;
    
                    GraphicsDevice.Viewport = lowerrightViewport;
                    reticleRect = new Rectangle(graphics.GraphicsDevice.Viewport.Width / 2 - 40, graphics.GraphicsDevice.Viewport.Height / 2 - 40, 80, 80);
                    if (!player4.ads && player4.weapon != "medic")
                    {
                        spriteBatch.Draw(reticle, reticleRect, Color.White);
                    }
                    if (!player4.reloading)
                    {
                        if (player4.weapon == "medic")
                        {
                            if (!player4.firing)
                            {
                                spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                            }
                            if (player4.firing)
                            {
                                if (!player4.medichit)
                                {
                                    spriteBatch.Draw(MedReticle, reticleRect, Color.White);
                                }
                                if (player4.medichit)
                                {
                                    spriteBatch.Draw(MedHit, reticleRect, Color.White);
                                }
                            }
                        }
                        if (player4.weapon == "M9")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m9_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(480, 320, 80, 80), Color.White);
                                    DrawWeapon4(m9_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m9_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m9_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "glock18")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(glock18_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(glock18_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(glock18_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(glock18_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "hipower")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    if (player4.clip <= 1)
                                    {
                                        DrawWeapon4(hipower_empty, player4.freeLook, player4.Rotation);
                                    }
                                    else
                                    {
                                        DrawWeapon4(hipower_view, player4.freeLook, player4.Rotation);
                                    }
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(hipower_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    if (player4.clip <= 1)
                                    {
                                        DrawWeapon4(hipower_adsempty, player4.freeLook, player4.Rotation);
                                    }
                                    else
                                    {
                                        DrawWeapon4(hipower_ads, player4.freeLook, player4.Rotation);
                                    }
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(hipower_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "uzi")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(uzi_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(uzi_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(uzi_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(uzi_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "mac10")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(mac10_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(mac10_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(mac10_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(mac10_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "AK47")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(ak47_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(ak47_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(ak47_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(ak47_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "aa12")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(aa12_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(aa12_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(aa12_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(aa12_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "mp5k")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(mp5k_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(mp5k_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(mp5k_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(mp5k_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "M249")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m249_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m249_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m249_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m249_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "python")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(python_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                    DrawWeapon4(python_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(python_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(python_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "medic")
                        {
                            DrawWeapon4(medpack_view, player4.freeLook, player4.Rotation);
                        }
                        if (player4.weapon == "M4SOPMOD")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m4sopmod_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m4sopmod_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m4sopmod_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m4sopmod_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "R700")
                        {
                            if (!player4.ads)
                            {
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon4(R700_vfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -10 && player4.firepause <= 20)
                                    {
                                        DrawWeapon4(R700_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 20 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(R700_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause <= 50)
                                    {
                                        DrawWeapon4(R700_rechamber3, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 50 && player4.firepause <= 60)
                                    {
                                        DrawWeapon4(R700_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 60 && player4.firepause >= 80)
                                    {
                                        DrawWeapon4(R700_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                            if (player4.ads)
                            {
                                if (player4.firing)
                                {
                                    DrawWeapon4(R700_adsfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -10 && player4.firepause <= 20)
                                    {
                                        DrawWeapon4(R700_ads, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 20 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(R700_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause <= 50)
                                    {
                                        DrawWeapon4(R700_rechamber3, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 50 && player4.firepause <= 60)
                                    {
                                        DrawWeapon4(R700_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 60 && player4.firepause >= 80)
                                    {
                                        DrawWeapon4(R700_ads, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                        }
                        if (player4.weapon == "cz550")
                        {
                            if (!player4.ads)
                            {
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon4(cz550_vfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -10 && player4.firepause <= 20)
                                    {
                                        DrawWeapon4(cz550_view, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 20 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(cz550_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause <= 50)
                                    {
                                        DrawWeapon4(cz550_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 50 && player4.firepause <= 60)
                                    {
                                        DrawWeapon4(cz550_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 60 && player4.firepause >= 80)
                                    {
                                        DrawWeapon4(cz550_view, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                            if (player4.ads)
                            {
                                if (player4.firing)
                                {
                                    DrawWeapon4(cz550_ads_fire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -10 && player4.firepause <= 20)
                                    {
                                        DrawWeapon4(cz550_ads, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 20 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(cz550_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause <= 50)
                                    {
                                        DrawWeapon4(cz550_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 50 && player4.firepause <= 60)
                                    {
                                        DrawWeapon4(cz550_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 60 && player4.firepause >= 80)
                                    {
                                        DrawWeapon4(cz550_ads, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                        }
                        if (player4.weapon == "m21")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m21_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m21_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player4.weapon == "svd")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(svd_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(svd_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player4.weapon == "m14")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m14_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m14_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(m14_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(m14_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "mp40")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(mp40_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(mp40_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(mp40_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(mp40_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "glock18")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(glock18_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(glock18_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(glock18_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(glock18_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "S&W500")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(SW500_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(SW500_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(SW500_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(SW500_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "pkm")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(pkm_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(pkm_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(pkm_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(pkm_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "magnum24")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(magnum24_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(magnum24_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(magnum24_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(magnum24_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "hk21")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(hk21_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(hk21_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(hk21_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(hk21_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "AK74")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(ak74_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(ak74_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(ak74_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(ak74_ads_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "volcanic")
                        {
                            if (!player4.ads)
                            {
                                if (player4.firing)
                                {
                                    DrawWeapon4(volcanic_vfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -5 && player4.firepause <= 10)
                                    {
                                        DrawWeapon4(volcanic_view, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 10 && player4.firepause <= 15)
                                    {
                                        DrawWeapon4(volcanic_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 15 && player4.firepause <= 25)
                                    {
                                        DrawWeapon4(volcanic_f2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 25 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(volcanic_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause >= 40)
                                    {
                                        DrawWeapon4(volcanic_view, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                            if (player4.ads)
                            {
                                if (player4.firing)
                                {
                                    DrawWeapon4(volcanic_adsfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -5 && player4.firepause <= 10)
                                    {
                                        DrawWeapon4(volcanic_ads, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 10 && player4.firepause <= 15)
                                    {
                                        DrawWeapon4(volcanic_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 15 && player4.firepause <= 25)
                                    {
                                        DrawWeapon4(volcanic_f2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 25 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(volcanic_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause >= 40)
                                    {
                                        DrawWeapon4(volcanic_ads, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                        }
                        if (player4.weapon == "m134")
                        {
                            if (!player4.firing)
                            {
                                DrawWeapon4(m134_view, player4.freeLook, player4.Rotation);
                            }
                            if (player4.firing)
                            {
                                DrawWeapon4(m134_vfire, player4.freeLook, player4.Rotation);
                            }
                        }
                        if (player4.weapon == "winchester1887")
                        {
                            if (!player4.ads)
                            {
                                if (player4.firing)
                                {
                                    DrawWeapon4(model1887_vfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -10 && player4.firepause <= 20)
                                    {
                                        DrawWeapon4(model1887_view, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 20 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(model1887_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause <= 50)
                                    {
                                        DrawWeapon4(model1887_leverwork, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 50 && player4.firepause <= 60)
                                    {
                                        DrawWeapon4(model1887_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 60 && player4.firepause >= 80)
                                    {
                                        DrawWeapon4(model1887_view, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                            if (player4.ads)
                            {
                                if (player4.firing)
                                {
                                    DrawWeapon4(model1887_adsfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -10 && player4.firepause <= 20)
                                    {
                                        DrawWeapon4(model1887_ads, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 20 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(model1887_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause <= 50)
                                    {
                                        DrawWeapon4(model1887_leverwork, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 50 && player4.firepause <= 60)
                                    {
                                        DrawWeapon4(model1887_f1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 60 && player4.firepause >= 80)
                                    {
                                        DrawWeapon4(model1887_ads, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                        }
                        if (player4.weapon == "dbshotgun")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(dbshotgun_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon4(dbshotgun_viewfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(dbshotgun_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(dbshotgun_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "R700Sniper")
                        {
                            if (!player4.ads)
                            {
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 120, 120), Color.White);
                                    DrawWeapon4(R700scope_vfire, player4.freeLook, player4.Rotation);
                                }
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= -10 && player4.firepause <= 20)
                                    {
                                        DrawWeapon4(R700scope_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 20 && player4.firepause <= 30)
                                    {
                                        DrawWeapon4(R700scope_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 30 && player4.firepause <= 50)
                                    {
                                        DrawWeapon4(R700scope_rechamber3, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 50 && player4.firepause <= 60)
                                    {
                                        DrawWeapon4(R700scope_rechamber2, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause > 60 && player4.firepause >= 80)
                                    {
                                        DrawWeapon4(R700scope_rechamber1, player4.freeLook, player4.Rotation);
                                    }
                                }
                            }
                            if (player4.ads)
                            {
                                spriteBatch.Draw(sniperscope, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                            }
                        }
                        if (player4.weapon == "SPAS12")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(SPAS_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon4(SPAS_fire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(SPAS_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(SPAS_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        if (player4.weapon == "R870")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    if (player4.firepause >= 20 && player4.firepause < 45)
                                    {
                                        DrawWeapon4(Rem870_pump, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause < 20 || player4.firepause >= 45)
                                    {
                                        DrawWeapon4(Rem870_view, player4.freeLook, player4.Rotation);
                                    }
                                }
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(370, 240, 160, 160), Color.White);
                                    DrawWeapon4(Rem870_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    if (player4.firepause < 15)
                                    {
                                        DrawWeapon4(Rem870_pump, player4.freeLook, player4.Rotation);
                                    }
                                    if (player4.firepause >= 15)
                                    {
                                        DrawWeapon4(Rem870_ads, player4.freeLook, player4.Rotation);
                                    }
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(Rem870_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        foreach (rocket rpgrocket in p1rockets)
                        {
                            if (rpgrocket.active)
                            {
                                DrawModel4(rpg7rocket, rpgrocket.position, 0, 0);
                            }
                            if (rpgrocket.exploding)
                            {
                                DrawModel4(rpgexplosion, rpgrocket.position, 0, 0);
                            }
                        }
                        if (player4.weapon == "anaconda")
                        {
                            if (!player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(anaconda_view, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    spriteBatch.Draw(flash, new Rectangle(420, 50, 160, 160), Color.White);
                                    DrawWeapon4(anaconda_vfire, player4.freeLook, player4.Rotation);
                                }
                            }
                            if (player4.ads)
                            {
                                if (!player4.firing)
                                {
                                    DrawWeapon4(anaconda_ads, player4.freeLook, player4.Rotation);
                                }
                                if (player4.firing)
                                {
                                    DrawWeapon4(anaconda_adsfire, player4.freeLook, player4.Rotation);
                                }
                            }
                        }
                        spriteBatch.DrawString(Font, "Clip:" + (player4.clip - 1), DisplayPos, Color.White);
                    }
                    if (player4.weapon == "M9" || player4.weapon == "mp5k" || player4.weapon == "glock18" || player4.weapon == "mp40" || player4.weapon == "hipower")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo9mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "uzi")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammoUzi, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "mac10")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo45, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "m134")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammonull, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "medic")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.medpacks, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "M4SOPMOD" || player4.weapon == "M249")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo556, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "m21" || player4.weapon == "m14" || player4.weapon == "hk21")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo762x51, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "pkm" || weapon == "svd")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo762x54, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "AK47")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo762x39, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "AK74")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo545, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "magnum24")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo20mm, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "volcanic")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo41, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "cz550")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo600overkill, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "python")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo357magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "anaconda")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo44magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "S&W500")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo500magnum, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "R700" || player4.weapon == "R700Sniper")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo3006, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "SPAS12" || player4.weapon == "R870" || player4.weapon == "dbshotgun" || player4.weapon == "aa12")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo12Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.weapon == "winchester1887")
                    {
                        spriteBatch.DrawString(Font, "Ammo:" + player4.ammo10Gauge, new Vector2(DisplayPos.X, DisplayPos.Y + 20), Color.White);
                    }
                    if (player4.reloading)
                    {
                        spriteBatch.DrawString(Font, "Clip:" + (player4.clip), DisplayPos, Color.White);
                    }
                    spriteBatch.DrawString(Font, "Health:" + player4.health, new Vector2(DisplayPos.X, DisplayPos.Y + 50), Color.Red);
                    if (player4.dead)
                    {
                        spriteBatch.Draw(urdead, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                    }
                    if (mode == "class" && player4.menu == "chooseclass")
                    {
                        spriteBatch.Draw(chooseyourclass, new Rectangle(0, 0, graphics.GraphicsDevice.Viewport.Width, graphics.GraphicsDevice.Viewport.Height), Color.White);
                        if (!player4.godupgrade)
                        {
                            spriteBatch.Draw(godclass1, godclassrect, Color.White);
                        }
                        if (player4.godupgrade)
                        {
                            spriteBatch.Draw(godclass2, godclassrect, Color.White);
                        }
                        if (!player4.gunnerupgrade)
                        {
                            spriteBatch.Draw(lightgunner, gunnerclassrect, Color.White);
                        }
                        if (player4.gunnerupgrade)
                        {
                            spriteBatch.Draw(heavygunner, gunnerclassrect, Color.White);
                        }
                        if (!player4.mgupgrade)
                        {
                            spriteBatch.Draw(machinegunner1, mggunnerclassrect, Color.White);
                        }
                        if (player4.mgupgrade)
                        {
                            spriteBatch.Draw(machinegunner2, mggunnerclassrect, Color.White);
                        }
                        if (!player4.sniperupgrade)
                        {
                            spriteBatch.Draw(sniper1, sniperclassrect, Color.White);
                        }
                        if (player4.sniperupgrade)
                        {
                            spriteBatch.Draw(sniper2, sniperclassrect, Color.White);
                        }
                        if (!player4.specopupgrade)
                        {
                            spriteBatch.Draw(specop1, specoprect, Color.White);
                        }
                        if (player4.specopupgrade)
                        {
                            spriteBatch.Draw(specop2, specoprect, Color.White);
                        }
                        spriteBatch.Draw(reticle4, cursorrect4, Color.White);
                    }
                    spriteBatch.End();
                }
            }
            base.Draw(gameTime);
        }
        void DrawModel(Model model, Vector3 ModelPosition, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(freeLook) * Matrix.CreateRotationY(Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            cameralookat = playerPosition + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    if (mode == "sp" || mode == "coop" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(fov),
                            4.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    else
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(fov),
                            2.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    effect.View = Matrix.CreateLookAt(playerPosition, cameralookat, Vector3.Up);
                    effect.World = transforms[mesh.ParentBone.Index] * Matrix.CreateTranslation(ModelPosition) * Matrix.CreateRotationY(yrotation)
                        * Matrix.CreateRotationX(xrotation);
                }
                mesh.Draw();
            }
        }
        void DrawWeapon(Model model, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(freeLook) * Matrix.CreateRotationY(Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            cameralookat = playerPosition + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    if (mode == "sp" || mode == "coop" || mode == "tdm4" || mode == "class" || mode == "juggernaut4")
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(45),
                            4.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    else
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(45),
                            2.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    effect.View = Matrix.CreateLookAt(playerPosition, cameralookat, Vector3.Up);
                    effect.World = Matrix.Invert(effect.View);
                }
                mesh.Draw();
            }
        }
        void DrawModel2(Model model, Vector3 ModelPosition, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(player2.freeLook) * Matrix.CreateRotationY(player2.Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            player2.cameralookat = player2.Position + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    if (mode == "tdm4" || mode == "coop" || mode == "class" || mode == "juggernaut4")
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(player2.fov),
                            4.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    else
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(player2.fov),
                            2.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    effect.View = Matrix.CreateLookAt(player2.Position, player2.cameralookat, Vector3.Up);
                    effect.World = transforms[mesh.ParentBone.Index] * Matrix.CreateTranslation(ModelPosition) * Matrix.CreateRotationY(yrotation)
                        * Matrix.CreateRotationX(xrotation);
                }
                mesh.Draw();
            }
        }
        void DrawWeapon2(Model model, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(player2.freeLook) * Matrix.CreateRotationY(player2.Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            player2.cameralookat = player2.Position + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    if (mode == "tdm4" || mode == "coop" || mode == "class" || mode == "juggernaut4")
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(45),
                            4.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    else
                    {
                        effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(45),
                            2.0f / 3.0f, 1.0f, 10000.0f);
                    }
                    effect.View = Matrix.CreateLookAt(player2.Position, player2.cameralookat, Vector3.Up);
                    effect.World = Matrix.Invert(effect.View);
                }
                mesh.Draw();
            }
        }
        void DrawModel3(Model model, Vector3 ModelPosition, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(player3.freeLook) * Matrix.CreateRotationY(player3.Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            player3.cameralookat = player3.Position + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(player3.fov),
                        4.0f / 3.0f, 1.0f, 20000.0f); ;
                    effect.View = Matrix.CreateLookAt(player3.Position, player3.cameralookat, Vector3.Up);
                    effect.World = transforms[mesh.ParentBone.Index] * Matrix.CreateTranslation(ModelPosition) * Matrix.CreateRotationY(yrotation)
                        * Matrix.CreateRotationX(xrotation);
                }
                mesh.Draw();
            }
        }
        void DrawWeapon3(Model model, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(player3.freeLook) * Matrix.CreateRotationY(player3.Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            player3.cameralookat = player3.Position + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(45),
                        4.0f / 3.0f, 1.0f, 10000.0f);
                    effect.View = Matrix.CreateLookAt(player3.Position, player3.cameralookat, Vector3.Up);
                    effect.World = Matrix.Invert(effect.View);
                }
                mesh.Draw();
            }
        }
        void DrawModel4(Model model, Vector3 ModelPosition, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(player4.freeLook) * Matrix.CreateRotationY(player4.Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            player4.cameralookat = player4.Position + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(player4.fov),
                        4.0f / 3.0f, 1.0f, 20000.0f); ;
                    effect.View = Matrix.CreateLookAt(player4.Position, player4.cameralookat, Vector3.Up);
                    effect.World = transforms[mesh.ParentBone.Index] * Matrix.CreateTranslation(ModelPosition) * Matrix.CreateRotationY(yrotation)
                        * Matrix.CreateRotationX(xrotation);
                }
                mesh.Draw();
            }
        }
        void DrawWeapon4(Model model, float xrotation, float yrotation)
        {
            Matrix[] transforms = new Matrix[model.Bones.Count];
            model.CopyAbsoluteBoneTransformsTo(transforms);
            Matrix rotationMatrix = Matrix.CreateRotationX(player4.freeLook) * Matrix.CreateRotationY(player4.Rotation);
            Vector3 transformed = Vector3.Transform(new Vector3(0.0f, 0.0f, -1.0f), rotationMatrix);
            player4.cameralookat = player4.Position + transformed;
            foreach (ModelMesh mesh in model.Meshes)
            {
                foreach (BasicEffect effect in mesh.Effects)
                {
                    effect.EnableDefaultLighting();
                    effect.Projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(45),
                        4.0f / 3.0f, 1.0f, 10000.0f);
                    effect.View = Matrix.CreateLookAt(player4.Position, player4.cameralookat, Vector3.Up);
                    effect.World = Matrix.Invert(effect.View);
                }
                mesh.Draw();
            }
        }
    }
}
